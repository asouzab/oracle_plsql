CREATE OR REPLACE PACKAGE BODY VND."GX_ELO_REPLANAPPROVE_DISAPROVE" AS

PROCEDURE PX_GET_REPLANSTATUS(P_RETURN OUT T_CURSOR)
 IS
  BEGIN
   OPEN P_RETURN FOR
        SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' ---For testing 'TWORK'
--AND ETS.SG_TIPO_STATUS = 'NVREP'
AND ETS.SG_TIPO_STATUS = 'NVREP'---For testing 'NVREP'
;
END PX_GET_REPLANSTATUS;


PROCEDURE PX_GET_ELO_AGENDAMENTO_ITEM (
P_SUPERVISOR IN  ELO_AGENDAMENTO_SUPERVISOR.CD_ELO_AGENDAMENTO_SUPERVISOR%TYPE,
P_RETURN OUT T_CURSOR)
IS
  BEGIN
   OPEN P_RETURN FOR
  SELECT DISTINCT FLAG_CHECKBOX,CD_ELO_AGENDAMENTO_ITEM,CD_ELO_AGENDAMENTO_ITEM_ANTIGO,
  MAX(SEG) AS SEG,
  MAX(TER) AS TER,
  MAX(QUA) AS QUA,
  MAX(QUI) AS QUI,
  MAX(SEX) AS SEX,
  MAX(SAB) AS SAB,
  MAX(DOM) AS DOM
  FROM
  (SELECT DISTINCT 'false'  FLAG_CHECKBOX,EI.CD_ELO_AGENDAMENTO_ITEM,ED.NU_DIA_SEMANA as Day,EI.CD_ELO_AGENDAMENTO_ITEM_ANTIGO,
   (CASE WHEN ED.NU_DIA_SEMANA=1 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) SEG,
   (CASE WHEN ED.NU_DIA_SEMANA=2 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) TER,
   (CASE WHEN ED.NU_DIA_SEMANA=3 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) QUA,
   (CASE WHEN ED.NU_DIA_SEMANA=4 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) QUI,
   (CASE WHEN ED.NU_DIA_SEMANA=5 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) SEX,
   (CASE WHEN ED.NU_DIA_SEMANA=6 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) SAB,
   (CASE WHEN ED.NU_DIA_SEMANA=7 THEN SUM(ED.NU_QUANTIDADE) ELSE 0 END) DOM
  -- (CASE WHEN CD_GRUPO_EMBALAGEM ='B' THEN sum(ED.NU_QUANTIDADE) ELSE 0 END) BAG,
--(CASE WHEN CD_GRUPO_EMBALAGEM ='G' THEN sum(ED.NU_QUANTIDADE) ELSE 0 END) GRANNEL,
--(CASE WHEN CD_GRUPO_EMBALAGEM ='S' THEN sum(ED.NU_QUANTIDADE) ELSE 0 END) ENSACADO
from ELO_AGENDAMENTO_ITEM EI
INNER JOIN ELO_AGENDAMENTO_WEEK EW
ON EI.CD_ELO_AGENDAMENTO_ITEM=EW.CD_ELO_AGENDAMENTO_ITEM 
INNER JOIN ELO_AGENDAMENTO_DAY ED
ON EW.CD_ELO_AGENDAMENTO_WEEK=ED.CD_ELO_AGENDAMENTO_WEEK
AND EI.CD_ELO_AGENDAMENTO_SUPERVISOR='50001'
AND CD_STATUS_REPLAN IN( SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'PLAN' ---For testing 'TWORK'
--AND ETS.SG_TIPO_STATUS = 'NVREP'
AND ETS.SG_TIPO_STATUS = 'TIPAG')
GROUP BY  EI.CD_ELO_AGENDAMENTO_ITEM,ED.NU_DIA_SEMANA,EI.CD_ELO_AGENDAMENTO_ITEM_ANTIGO
ORDER BY ED.NU_DIA_SEMANA) T 
GROUP BY FLAG_CHECKBOX,CD_ELO_AGENDAMENTO_ITEM,CD_ELO_AGENDAMENTO_ITEM_ANTIGO;
/*********
SELECT DISTINCT 'false'  FLAG_CHECKBOX,ED.NU_QUANTIDADE,ED.NU_DIA_SEMANA from ELO_AGENDAMENTO_ITEM EI
INNER JOIN ELO_AGENDAMENTO_WEEK EW
ON EI.CD_ELO_AGENDAMENTO_ITEM=EW.CD_ELO_AGENDAMENTO_ITEM 
INNER JOIN ELO_AGENDAMENTO_DAY ED
ON EW.CD_ELO_AGENDAMENTO_WEEK=ED.CD_ELO_AGENDAMENTO_WEEK
AND EI.CD_ELO_AGENDAMENTO_SUPERVISOR=P_SUPERVISOR ---'50001'
AND CD_STATUS_REPLAN IN( SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'PLAN' ---For testing 'TWORK'
--AND ETS.SG_TIPO_STATUS = 'NVREP'
AND ETS.SG_TIPO_STATUS = 'TIPAG'---For testing 'NVREP'
)
GROUP BY ED.NU_QUANTIDADE,ED.NU_DIA_SEMANA
Order BY ED.NU_DIA_SEMANA;
**********************/
  END PX_GET_ELO_AGENDAMENTO_ITEM;

    /*Clicking on “Reprovar REPLAN” button*/ 
  PROCEDURE PX_GET_PLANSTATUS(P_RETURN OUT T_CURSOR)
 IS
  BEGIN
   OPEN P_RETURN FOR
        SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'NVPLA'
;
END PX_GET_PLANSTATUS;
PROCEDURE PX_UPDATE_PLANSTATUS(
P_AGENDAMENTO_ITEM_ANTIGO IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM_ANTIGO%TYPE,
P_RETURN OUT T_CURSOR
)
IS
  BEGIN
 -- OPEN P_RETURN FOR
    UPDATE ELO_AGENDAMENTO_ITEM 
 SET IC_ATIVO ='N'  
 WHERE CD_ELO_AGENDAMENTO_ITEM=P_AGENDAMENTO_ITEM_ANTIGO 
 AND CD_STATUS_REPLAN IN(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK'
AND ETS.SG_TIPO_STATUS = 'NVPLA');
 COMMIT;

	EXCEPTION
		WHEN OTHERS THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001,
																'ERRO ENCONTRADO - ' || SQLCODE ||
																' -ERROR- ' || SQLERRM);
				ROLLBACK;

   END;
   END PX_UPDATE_PLANSTATUS;

PROCEDURE PX_GET_RPREPLANSTATUS(P_RETURN OUT T_CURSOR)
 IS
  BEGIN
   OPEN P_RETURN FOR
        SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'RPREP'
;
END PX_GET_RPREPLANSTATUS;
PROCEDURE PX_UPDATE_RPREPLANSTATUS(
P_CD_ELO_AGENDAMENTO_ITEM IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM%TYPE,
P_RETURN OUT T_CURSOR
)
IS
  BEGIN
 -- OPEN P_RETURN FOR
    UPDATE ELO_AGENDAMENTO_ITEM 
 SET CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK'
AND ETS.SG_TIPO_STATUS = 'NVPLA')
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM
   ;
   END PX_UPDATE_RPREPLANSTATUS;



   PROCEDURE PU_UPDATE_REPROVAR(
P_AGENDAMENTO_ITEM_ANTIGO IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM_ANTIGO%TYPE,
P_CD_ELO_AGENDAMENTO_ITEM IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM%TYPE
)
IS
  BEGIN
UPDATE ELO_AGENDAMENTO_ITEM 
 SET IC_ATIVO ='N'  
 WHERE CD_ELO_AGENDAMENTO_ITEM=P_AGENDAMENTO_ITEM_ANTIGO 
 AND CD_STATUS_REPLAN IN(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK'
AND ETS.SG_TIPO_STATUS = 'NVPLA');
COMMIT;




 UPDATE ELO_AGENDAMENTO_ITEM 
 SET CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS ='PLAN'-----'TWORK'
AND ETS.SG_TIPO_STATUS ='TIPAG')---- 'NVPLA')
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM;
COMMIT;

	EXCEPTION
		WHEN OTHERS THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001,
																'ERRO ENCONTRADO - ' || SQLCODE ||
																' -ERROR- ' || SQLERRM);
				ROLLBACK;

   END;

END PU_UPDATE_REPROVAR;

   /*Clicking on “Aprovar REPLAN” button. */

PROCEDURE PX_UPDATE_AGENDAMENTO(
P_CD_ELO_AGENDAMENTO_ITEM IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM%TYPE,
P_RETURN OUT T_CURSOR
)
IS
  BEGIN
  UPDATE ELO_AGENDAMENTO_ITEM
SET IC_ATIVO = 'N'
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM
AND CD_STATUS_REPLAN =NULL;
END PX_UPDATE_AGENDAMENTO;

PROCEDURE PX_GET_NVPLANSTATUS(P_RETURN OUT T_CURSOR)
 IS
  BEGIN
   OPEN P_RETURN FOR
        SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'NVPLA'
;
END PX_GET_NVPLANSTATUS;

PROCEDURE PX_UPDATE_NVPLANSTATUS(
P_AGENDAMENTO_ITEM_ANTIGO IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM_ANTIGO%TYPE,
P_RETURN OUT T_CURSOR
)
IS
  BEGIN
  UPDATE ELO_AGENDAMENTO_ITEM 
  SET IC_ATIVO ='S',CD_STATUS_REPLAN=NULL
  WHERE CD_ELO_AGENDAMENTO_ITEM =P_AGENDAMENTO_ITEM_ANTIGO
  AND CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'NVPLA'
);
END PX_UPDATE_NVPLANSTATUS;


PROCEDURE PX_GET_APREPSTATUS(P_RETURN OUT T_CURSOR)
IS
  BEGIN
  OPEN P_RETURN FOR
  SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'APREP'
;
END PX_GET_APREPSTATUS;

PROCEDURE PX_UPDATE_APREPSTATUS(
P_CD_ELO_AGENDAMENTO_ITEM IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM%TYPE,
P_RETURN OUT T_CURSOR
)
IS
  BEGIN
  UPDATE ELO_AGENDAMENTO_ITEM 
  SET CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'APREP')
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM;
END PX_UPDATE_APREPSTATUS;




PROCEDURE PU_UPDATE_APROVAR(
P_AGENDAMENTO_ITEM_ANTIGO IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM_ANTIGO%TYPE,
P_CD_ELO_AGENDAMENTO_ITEM IN ELO_AGENDAMENTO_ITEM.CD_ELO_AGENDAMENTO_ITEM%TYPE
)
IS
  BEGIN
  UPDATE ELO_AGENDAMENTO_ITEM
SET IC_ATIVO = 'N'
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM
AND CD_STATUS_REPLAN =NULL;
COMMIT;

UPDATE ELO_AGENDAMENTO_ITEM 
  SET IC_ATIVO ='S',CD_STATUS_REPLAN=NULL
  WHERE CD_ELO_AGENDAMENTO_ITEM =P_AGENDAMENTO_ITEM_ANTIGO
  AND CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'NVPLA'
);
COMMIT;

UPDATE ELO_AGENDAMENTO_ITEM 
  SET CD_STATUS_REPLAN=(SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TWORK' 
AND ETS.SG_TIPO_STATUS = 'APREP')
WHERE CD_ELO_AGENDAMENTO_ITEM =P_CD_ELO_AGENDAMENTO_ITEM;
COMMIT;

	EXCEPTION
		WHEN OTHERS THEN
			BEGIN
				RAISE_APPLICATION_ERROR(-20001,
																'ERRO ENCONTRADO - ' || SQLCODE ||
																' -ERROR- ' || SQLERRM);
				ROLLBACK;

   END;

END PU_UPDATE_APROVAR;


/*How to get the status “Replanejamento”*/
PROCEDURE PX_GET_REPLANEJAMENTO(P_RETURN OUT T_CURSOR)
IS
  BEGIN
    OPEN P_RETURN FOR
  SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TIPAG' 
AND ETS.SG_TIPO_STATUS = 'REPLAN'
;

END PX_GET_REPLANEJAMENTO;
/*How to get the status “Inclusão de Replanejamento” */
PROCEDURE PX_GET_INCLUSAOSTATUS(P_RETURN OUT T_CURSOR)
IS
  BEGIN
    OPEN P_RETURN FOR
  SELECT CD_ELO_STATUS FROM ELO_STATUS ES
INNER JOIN ELO_TIPO_STATUS ETS
ON  ES.CD_ELO_TIPO_STATUS=ETS.CD_ELO_TIPO_STATUS
AND ES.SG_STATUS = 'TIPRP' 
AND ETS.SG_TIPO_STATUS = 'INCLUSAO'
;

END PX_GET_INCLUSAOSTATUS;

END GX_ELO_REPLANAPPROVE_DISAPROVE;


/