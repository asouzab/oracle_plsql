CREATE OR REPLACE PACKAGE BODY CTF."GX_MACHINE_MACHINE_PROFILE" AS
--------------------------------------------
--To fill Machine DDL
--------------------------------------------
  PROCEDURE PX_MACHINE(P_RETORNO OUT T_CURSOR) AS
  BEGIN
    OPEN P_RETORNO FOR
    SELECT CD_MACHINE,DS_MACHINE FROM CTF.MACHINE
    ORDER BY CD_MACHINE;
    NULL;
  END PX_MACHINE;
-------------------------------------------
--To Fill Machine_Profile DDL
-------------------------------------------

  PROCEDURE PX_MACHINE_PROFILE(P_RETORNO OUT T_CURSOR) AS
  BEGIN
  OPEN P_RETORNO FOR
  SELECT CD_MACHINE_PROFILE,DS_MACHINE_PROFILE FROM CTF.MACHINE_PROFILE
  ORDER BY CD_MACHINE_PROFILE;
  NULL;
  END PX_MACHINE_PROFILE;

--------------------------------------------
-- To GET Machine_Machine_profile 
-------------------------------------------- 
  PROCEDURE PX_MACHINE_MACHINE_PROFILE(P_RESULT OUT T_CURSOR) AS
  BEGIN
  OPEN P_RESULT FOR
    SELECT MACHINE.CD_MACHINE,MACHINE.DS_MACHINE,MACHINE_MACHINE_PROFILE.CD_MACHINE_PROFILE 
FROM MACHINE_MACHINE_PROFILE 
INNER JOIN MACHINE ON MACHINE.CD_MACHINE = MACHINE_MACHINE_PROFILE.CD_MACHINE
WHERE MACHINE_MACHINE_PROFILE.IC_ATIVO='S'
 ORDER BY MACHINE_MACHINE_PROFILE.CD_MACHINE;
    NULL;
  END PX_MACHINE_MACHINE_PROFILE;

--------------------------------------------
-- Insert data into Machine_Machine_Profile
--------------------------------------------
PROCEDURE PI_MACHINE_MACHINE_PROFILE(P_CD_MACHINE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE%TYPE,
                                      P_CD_MACHINE_PROFILE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE_PROFILE%TYPE) AS
BEGIN
UPDATE CTF.MACHINE_MACHINE_PROFILE SET IC_ATIVO = 'S'
WHERE CD_MACHINE=P_CD_MACHINE AND CD_MACHINE_PROFILE = P_CD_MACHINE_PROFILE;
IF SQL%ROWCOUNT = 0 THEN
INSERT INTO CTF.MACHINE_MACHINE_PROFILE(CD_MACHINE,CD_MACHINE_PROFILE,IC_ATIVO,DH_INCLUSAO,CD_USUARIO_INCLUSAO) VALUES(P_CD_MACHINE,P_CD_MACHINE_PROFILE,'S',CURRENT_DATE,1);
END IF;
COMMIT;
NULL;
END PI_MACHINE_MACHINE_PROFILE;

--------------------------------------------
-- Delete data from Machine_Machine_profile
--------------------------------------------

PROCEDURE PD_MACHINE_MACHINE_PROFILE(P_CD_MACHINE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE%TYPE,
                                      P_CD_MACHINE_PROFILE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE_PROFILE%TYPE) AS
BEGIN
UPDATE CTF.MACHINE_MACHINE_PROFILE SET IC_ATIVO='N',DH_ULT_ALTERACAO=CURRENT_DATE,CD_USUARIO_ALTERACAO =1 WHERE CD_MACHINE=P_CD_MACHINE AND CD_MACHINE_PROFILE=P_CD_MACHINE_PROFILE;
END PD_MACHINE_MACHINE_PROFILE;

-------------------------------------------
-- UPDATE DATA IN MACHINE_MACHINE_PROFILE
-------------------------------------------
PROCEDURE PU_MACHINE_MACHINE_PROFILE(P_CD_MACHINE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE%TYPE,
                                     P_CD_MACHINE_PROFILE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE_PROFILE%TYPE,
                                     P_NEW_CD_MACHINE_PROFILE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE_PROFILE%TYPE) AS
BEGIN


    /*UPDATE CTF.MACHINE_MACHINE_PROFILE 
    SET IC_ATIVO = 'S'
    , DH_ULT_ALTERACAO = CURRENT_DATE
    , CD_USUARIO_ALTERACAO = 1
    WHERE CD_MACHINE=P_CD_MACHINE 
    AND CD_MACHINE_PROFILE = P_NEW_CD_MACHINE_PROFILE;*/
    
    UPDATE CTF.MACHINE_MACHINE_PROFILE 
    SET IC_ATIVO = 'N'
    , DH_ULT_ALTERACAO = CURRENT_DATE
    , CD_USUARIO_ALTERACAO = 1
    WHERE CD_MACHINE = P_CD_MACHINE 
    AND CD_MACHINE_PROFILE = P_CD_MACHINE_PROFILE;
    
        UPDATE CTF.MACHINE_MACHINE_PROFILE 
    SET IC_ATIVO = 'S'
    , DH_ULT_ALTERACAO = CURRENT_DATE
    , CD_USUARIO_ALTERACAO = 1
    , CD_MACHINE_PROFILE = P_NEW_CD_MACHINE_PROFILE
     WHERE CD_MACHINE = P_CD_MACHINE 
    AND CD_MACHINE_PROFILE = P_CD_MACHINE_PROFILE;
    
    COMMIT;
    
    --IF SQL%ROWCOUNT = 0 THEN
    --UPDATE CTF.MACHINE_MACHINE_PROFILE SET CD_MACHINE_PROFILE=P_NEW_CD_MACHINE_PROFILE,IC_ATIVO='S',DH_ULT_ALTERACAO=CURRENT_DATE,CD_USUARIO_ALTERACAO =1 WHERE CD_MACHINE=P_CD_MACHINE and CD_MACHINE_PROFILE=P_CD_MACHINE_PROFILE;
    --END IF;
    --COMMIT;
    NULL;
END PU_MACHINE_MACHINE_PROFILE;


END GX_MACHINE_MACHINE_PROFILE;
/