CREATE OR REPLACE PACKAGE BODY CTF."GX_CENTRO_EXPEDIDOR_MACHINE" AS

  PROCEDURE PX_CENTRO_EXPEDIDOR(P_RETORNO OUT T_CURSOR) AS
  BEGIN
    OPEN P_RETORNO  FOR
    SELECT CD_CENTRO_EXPEDIDOR,DS_CENTRO_EXPEDIDOR FROM CTF.CENTRO_EXPEDIDOR
    ORDER BY DS_CENTRO_EXPEDIDOR ;
    NULL;
  END PX_CENTRO_EXPEDIDOR;

  PROCEDURE PX_MACHINE(P_RETORNO OUT T_CURSOR) AS
  BEGIN
    OPEN P_RETORNO  FOR
    SELECT CD_MACHINE,DS_MACHINE FROM CTF.MACHINE
    ORDER BY CD_MACHINE ;
    NULL;
  END PX_MACHINE;

  PROCEDURE PX_CENTRO_EXPEDIDOR_MACHINE(P_RETORNO OUT T_CURSOR) AS
  BEGIN
  OPEN P_RETORNO  FOR
  SELECT CCE.CD_CENTRO_EXPEDIDOR,CE.DS_CENTRO_EXPEDIDOR,CCE.CD_MACHINE FROM 
  CTF.CENTRO_EXPEDIDOR_MACHINE CCE
  INNER JOIN CTF.CENTRO_EXPEDIDOR CE
  ON CCE.CD_CENTRO_EXPEDIDOR = CE.CD_CENTRO_EXPEDIDOR
  WHERE CCE.IC_ATIVO = 'S'
  ORDER BY CCE.CD_CENTRO_EXPEDIDOR ;
  NULL;
  END PX_CENTRO_EXPEDIDOR_MACHINE;

  PROCEDURE PI_INS_CENTRO_EXP_MACHINE(
                                    P_CD_CENTRO_EXPEDIDOR IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_CENTRO_EXPEDIDOR%TYPE,
                                    P_CD_MACHINE  IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_MACHINE%TYPE
                                   ) AS
  BEGIN
  UPDATE CTF.CENTRO_EXPEDIDOR_MACHINE SET IC_ATIVO = 'S'  
  WHERE CD_CENTRO_EXPEDIDOR=P_CD_CENTRO_EXPEDIDOR AND CD_MACHINE = P_CD_MACHINE;
  IF SQL%ROWCOUNT = 0 THEN
  INSERT INTO CTF.CENTRO_EXPEDIDOR_MACHINE (CD_CENTRO_EXPEDIDOR,CD_MACHINE,IC_ATIVO,DH_INCLUSAO,CD_USUARIO_INCLUSAO) VALUES
                                           (P_CD_CENTRO_EXPEDIDOR,P_CD_MACHINE,'S',CURRENT_DATE,1);
  END IF;
  COMMIT;
  EXCEPTION WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  NULL;
  END PI_INS_CENTRO_EXP_MACHINE;

  PROCEDURE PD_DEL_CENTRO_EXP_MACHINE(
                                    P_CD_CENTRO_EXPEDIDOR IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_CENTRO_EXPEDIDOR%TYPE,
                                    P_CD_MACHINE  IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_MACHINE%TYPE
                                    ) AS
  BEGIN
    UPDATE CTF.CENTRO_EXPEDIDOR_MACHINE SET IC_ATIVO = 'N' WHERE CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR AND
                                                                 CD_MACHINE = P_CD_MACHINE;
    NULL;
  END PD_DEL_CENTRO_EXP_MACHINE;

  PROCEDURE PU_UPD_CENTRO_EXP_MACHINE( 
                                    P_CD_CENTRO_EXPEDIDOR IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_CENTRO_EXPEDIDOR%TYPE,
                                    P_CD_MACHINE_OLD  IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_MACHINE%TYPE,
                                    P_CD_MACHINE_NEW  IN CTF.CENTRO_EXPEDIDOR_MACHINE.CD_MACHINE%TYPE
                                    ) AS
  BEGIN
  UPDATE CTF.CENTRO_EXPEDIDOR_MACHINE SET IC_ATIVO = 'S' WHERE CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR AND
                                                                 CD_MACHINE = P_CD_MACHINE_NEW;

  UPDATE CTF.CENTRO_EXPEDIDOR_MACHINE SET IC_ATIVO = 'N' WHERE
                                                        CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR AND
                                                        CD_MACHINE = P_CD_MACHINE_OLD;

 -- IF SQL%ROWCOUNT = 0 THEN
  INSERT INTO CTF.CENTRO_EXPEDIDOR_MACHINE (CD_CENTRO_EXPEDIDOR,CD_MACHINE,IC_ATIVO,DH_INCLUSAO,CD_USUARIO_INCLUSAO)-- VALUES
                                           --(P_CD_CENTRO_EXPEDIDOR,P_CD_MACHINE_NEW,'S',CURRENT_DATE,1);
  SELECT P_CD_CENTRO_EXPEDIDOR,P_CD_MACHINE_NEW,'S',CURRENT_DATE,1 from dual 
  WHERE NOT EXISTS ( SELECT * FROM CTF.CENTRO_EXPEDIDOR_MACHINE WHERE  CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR AND
                                                                 CD_MACHINE = P_CD_MACHINE_NEW );

  --END IF;
  COMMIT;
  EXCEPTION WHEN OTHERS THEN
  ROLLBACK;
  RAISE;
  NULL;
  END PU_UPD_CENTRO_EXP_MACHINE;

END GX_CENTRO_EXPEDIDOR_MACHINE;


/