CREATE OR REPLACE PACKAGE BODY VND."GX_ELO_PRIORITY_MATERIAL" AS

  
PROCEDURE INSERT_PRIORITY_MATERIAL(
	   P_CD_PRODUTO_SAP IN VND.ELO_PRIORITY_MATERIAL.CD_PRODUTO_SAP%TYPE,
	   P_NU_ORDER IN VND.ELO_PRIORITY_MATERIAL.NU_ORDER%TYPE     
     ) IS
     
     P_CD_ELO_PRIORITY_MATERIAL NUMBER :=0;
     V_NU_ORDER VND.ELO_PRIORITY_MATERIAL.NU_ORDER%TYPE;

  BEGIN
    -- TODO: Implementation required for PROCEDURE GX_ELO_PRIORITY_MATERIAL.INSERT_PRIORITY_MATERIAL

  SELECT NVL(MAX(CD_ELO_PRIORITY_MATERIAL),0) + 1
			INTO P_CD_ELO_PRIORITY_MATERIAL
			FROM VND.ELO_PRIORITY_MATERIAL;

  V_NU_ORDER:= P_NU_ORDER;          

  BEGIN           
  SELECT NU_ORDER INTO   V_NU_ORDER 
  FROM   VND.ELO_PRIORITY_MATERIAL 
  WHERE NU_ORDER = P_NU_ORDER;   
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
  V_NU_ORDER:= P_NU_ORDER;
  WHEN OTHERS THEN 
    SELECT MAX(NU_ORDER)+ 1 INTO V_NU_ORDER FROM VND.ELO_PRIORITY_MATERIAL ;
  END;

  INSERT INTO VND.ELO_PRIORITY_MATERIAL("CD_PRODUTO_SAP", "NU_ORDER","CD_ELO_PRIORITY_MATERIAL")
      VALUES(P_CD_PRODUTO_SAP,V_NU_ORDER,P_CD_ELO_PRIORITY_MATERIAL);
      COMMIT; 

  NULL;
END INSERT_PRIORITY_MATERIAL;

PROCEDURE UPDATE_PRIORITY_MATERIAL(
       P_CD_PRODUTO_SAP IN VND.ELO_PRIORITY_MATERIAL.CD_PRODUTO_SAP%TYPE,
	   P_NU_ORDER IN VND.ELO_PRIORITY_MATERIAL.NU_ORDER%TYPE, 
     P_CD_ELO_PRIORITY_MATERIAL IN VND.ELO_PRIORITY_MATERIAL.CD_ELO_PRIORITY_MATERIAL%TYPE
     ) IS
      V_NU_ORDER VND.ELO_PRIORITY_MATERIAL.NU_ORDER%TYPE;
BEGIN

  V_NU_ORDER:= P_NU_ORDER;          

  BEGIN           
  SELECT NU_ORDER INTO   V_NU_ORDER 
  FROM   VND.ELO_PRIORITY_MATERIAL 
  WHERE NU_ORDER = P_NU_ORDER;   
  EXCEPTION 
  WHEN NO_DATA_FOUND THEN 
  V_NU_ORDER:= P_NU_ORDER;
  WHEN OTHERS THEN 
    SELECT MAX(NU_ORDER)+ 1 INTO V_NU_ORDER FROM VND.ELO_PRIORITY_MATERIAL ;
  END;


  UPDATE VND.ELO_PRIORITY_MATERIAL
  SET CD_PRODUTO_SAP = P_CD_PRODUTO_SAP, 
      NU_ORDER = V_NU_ORDER
  WHERE CD_ELO_PRIORITY_MATERIAL = P_CD_ELO_PRIORITY_MATERIAL; 

END UPDATE_PRIORITY_MATERIAL;

PROCEDURE DELETE_PRIORITY_MATERIAL(
     P_CD_ELO_PRIORITY_MATERIAL IN VND.ELO_PRIORITY_MATERIAL.CD_ELO_PRIORITY_MATERIAL%TYPE
     ) IS

     BEGIN

  DELETE FROM VND.ELO_PRIORITY_MATERIAL WHERE
  P_CD_ELO_PRIORITY_MATERIAL=VND.ELO_PRIORITY_MATERIAL.CD_ELO_PRIORITY_MATERIAL;   

END DELETE_PRIORITY_MATERIAL;


PROCEDURE GET_DATA (P_RETORNO OUT T_CURSOR)
IS
	BEGIN
		OPEN P_RETORNO FOR
            SELECT 
            PS.CD_PRODUTO_SAP, 
            PS.NO_PRODUTO_SAP,
            PM.CD_ELO_PRIORITY_MATERIAL ,
            PM.NU_ORDER 
            FROM CTF.PRODUTO_SAP PS
            INNER JOIN VND.ELO_PRIORITY_MATERIAL PM ON PS.CD_PRODUTO_SAP=PM.CD_PRODUTO_SAP
            WHERE PS.IC_ATIVO = 'S' 
            AND PS.IC_BLOQUEIO = 'N'
            ORDER BY PM.NU_ORDER;
	END GET_DATA; 


PROCEDURE GET_MATERIAL_CODE(     
     P_RETORNO OUT T_CURSOR)
IS
BEGIN
    OPEN P_RETORNO FOR
      SELECT DISTINCT
      PS.CD_PRODUTO_SAP  
      FROM CTF.PRODUTO_SAP PS
      WHERE PS.IC_ATIVO = 'S' AND PS.IC_BLOQUEIO = 'N'
      ;
END GET_MATERIAL_CODE;      

PROCEDURE GET_MATERIAL_CODE( 
        P_CD_PRODUTO_SAP CTF.PRODUTO_SAP.CD_PRODUTO_SAP%TYPE,    
        P_RETORNO OUT T_CURSOR)
IS
BEGIN
    OPEN P_RETORNO FOR
      SELECT 
      PS.CD_PRODUTO_SAP  
      FROM VND.ELO_PRIORITY_MATERIAL PS
      WHERE PS.CD_PRODUTO_SAP = P_CD_PRODUTO_SAP 
      ;  
END GET_MATERIAL_CODE;

PROCEDURE GET_MATERIAL_CODE_DESCRIPTION(     
     P_RETORNO OUT T_CURSOR)
IS
BEGIN
    OPEN P_RETORNO FOR
      SELECT 
      PS.CD_PRODUTO_SAP, PS.NO_PRODUTO_SAP  
      FROM CTF.PRODUTO_SAP PS
      WHERE PS.IC_ATIVO = 'S' AND PS.IC_BLOQUEIO = 'N'
      ;


END GET_MATERIAL_CODE_DESCRIPTION;

END GX_ELO_PRIORITY_MATERIAL;
/