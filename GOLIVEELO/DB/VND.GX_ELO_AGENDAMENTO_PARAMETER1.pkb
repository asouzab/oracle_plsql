CREATE OR REPLACE PACKAGE BODY VND."GX_ELO_AGENDAMENTO_PARAMETER1" AS

FUNCTION FX_SPLIT2(
        LIST IN VARCHAR2,
        DELIMITER IN VARCHAR2 DEFAULT ','
    ) RETURN SPLIT_TBL 
    AS
        SPLITTED SPLIT_TBL := SPLIT_TBL();
        I PLS_INTEGER := 0;
        LIST_ VARCHAR2(16000) := LIST;
    BEGIN
        LOOP
            I := INSTR(LIST_, DELIMITER);
            IF I > 0 THEN
                SPLITTED.EXTEND(1);
                SPLITTED(SPLITTED.LAST) := SUBSTR(LIST_, 1, I - 1);
                LIST_ := SUBSTR(LIST_, I + LENGTH(DELIMITER));
            ELSE
                SPLITTED.EXTEND(1);
                SPLITTED(SPLITTED.LAST) := LIST_;
                RETURN SPLITTED;
            END IF;
        END LOOP;
    END FX_SPLIT2;



  PROCEDURE PX_GET_DEFAULTPARAMETERS(
        P_CD_CENTRO_EXPEDIDOR   IN VND.ELO_TEMPLATE_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
        P_RESULT                OUT T_CURSOR
    ) AS
    BEGIN
    OPEN P_RESULT FOR

        select tempCentro.CD_TEMPLATE_CENTRO,
               tempCentro.CD_POLO,
               tempCentro.CD_CENTRO_EXPEDIDOR,
               tempCentro.CD_MACHINE,
               tempCentro.QT_FILA_MINIMA,
               tempCentro.TS_HORARIO_CORTE_CONFERENCIA,
               tempCentro.TS_HORARIO_CORTE_FINAL,
               tempCentro.IC_COTA_POR_EMBALAGEM,
               tempCentro.IC_ATIVO,
               tempCentroItem.CD_TEMPLATE_CENTRO_ITEM,
               tempCentroItem.CD_TEMPLATE_CENTRO,
               tempCentroItem.NU_DIA_SEMANA,
               tempCentroItem.NU_CAPACIDADE,
               tempCentroItem.NU_CAPACIDADE_MAXIMA,
               tempCentroItem.NU_HORAS_PRODUCAO,
               tempCentroItem.DH_INICIO_PRODUCAO,
               tempCentroItem.DH_FIM_PRODUCAO,
               tempCentroItem.QT_OVERBOOKING,
               tempCentroItem.CD_PERFIL_MAQUINA,
               tempCentroItem.NU_ENSACADO,
               tempCentroItem.IC_ATIVO       
          from VND.ELO_TEMPLATE_CENTRO_ITEM tempCentroItem
         inner join VND.ELO_TEMPLATE_CENTRO tempCentro
            on tempCentro.CD_TEMPLATE_CENTRO = tempCentroItem.CD_TEMPLATE_CENTRO
         where (tempCentro.IC_ATIVO = 'S')
           and (tempCentroItem.IC_ATIVO = 'S')
           and (tempCentro.CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR OR P_CD_CENTRO_EXPEDIDOR IS NULL);

    END PX_GET_DEFAULTPARAMETERS;

  PROCEDURE PI_DEFAULTPARAMETERS
  (
      P_CD_CENTRO_EXPEDIDOR IN VND.ELO_TEMPLATE_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
      P_QT_FILA_MINIMA IN VND.ELO_TEMPLATE_CENTRO.QT_FILA_MINIMA%TYPE,
      P_TS_HORARIO_CORTE_CONFERENCIA IN VND.ELO_TEMPLATE_CENTRO.TS_HORARIO_CORTE_CONFERENCIA%TYPE,
      P_TS_HORARIO_CORTE_FINAL IN VND.ELO_TEMPLATE_CENTRO.TS_HORARIO_CORTE_FINAL%TYPE,
      P_IC_COTA_POR_EMBALAGEM IN VND.ELO_TEMPLATE_CENTRO.IC_COTA_POR_EMBALAGEM%TYPE,
      P_IC_ATIVO IN VND.ELO_TEMPLATE_CENTRO.IC_ATIVO%TYPE,
      P_NU_DIA_SEMANA IN VARCHAR,
      P_NU_CAPACIDADE IN VARCHAR,
      P_NU_CAPACIDADE_MAXIMA IN VARCHAR,
      P_NU_ENSACADO IN VARCHAR,
      P_QT_OVERBOOKING IN VARCHAR,
      P_CD_PERFIL_MAQUINA IN VARCHAR,
      P_NU_HORAS_PRODUCAO IN VARCHAR,
      P_DH_INICIO_PRODUCAO IN VARCHAR,
      P_DH_FIM_PRODUCAO IN VARCHAR,
      P_CD_USUARIO_INCLUSAO IN CTF.USUARIO.CD_USUARIO%TYPE,
      P_RESULT OUT T_CURSOR 
  )
  AS

   V_CD_TEMPLATE_CENTRO          VND.ELO_TEMPLATE_CENTRO.CD_TEMPLATE_CENTRO%type;
   TAB_NU_DIA_SEMANA             SPLIT_TBL;
   TAB_NU_CAPACIDADE             SPLIT_TBL;
   TAB_NU_CAPACIDADE_MAXIMA      SPLIT_TBL;
   TAB_NU_ENSACADO               SPLIT_TBL;
   TAB_QT_OVERBOOKING            SPLIT_TBL;
   TAB_CD_PERFIL_MAQUINA         SPLIT_TBL;
   TAB_NU_HORAS_PRODUCAO         SPLIT_TBL;
   TAB_DH_INICIO_PRODUCAO        SPLIT_TBL;
   TAB_DH_FIM_PRODUCAO           SPLIT_TBL;
   V_CD_POLO                     CTF.POLO_CENTRO_EXPEDIDOR.CD_POLO%type;

  BEGIN

    SAVEPOINT sp_sptest;

    BEGIN
        select CD_POLO 
          into V_CD_POLO
          from CTF.POLO_CENTRO_EXPEDIDOR
         where CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_CD_POLO := NULL;
    END;

  --Inserting Header details in ELO_TEMPLATE_CENTRO table
  INSERT
    INTO VND.ELO_TEMPLATE_CENTRO
    (
      CD_TEMPLATE_CENTRO,
      CD_POLO ,
      CD_CENTRO_EXPEDIDOR ,
      QT_FILA_MINIMA ,
      TS_HORARIO_CORTE_CONFERENCIA ,
      TS_HORARIO_CORTE_FINAL ,
      IC_COTA_POR_EMBALAGEM ,
      IC_ATIVO,
      CD_USUARIO_INCLUSAO,
      DH_INCLUSAO
    )
    VALUES
    (
      SEQ_ELO_TEMPLATE_CENTRO.NEXTVAL,
      V_CD_POLO,
      P_CD_CENTRO_EXPEDIDOR ,
      P_QT_FILA_MINIMA ,
      P_TS_HORARIO_CORTE_CONFERENCIA ,
      P_TS_HORARIO_CORTE_FINAL ,
      P_IC_COTA_POR_EMBALAGEM ,
      'S',
      P_CD_USUARIO_INCLUSAO,
      to_date(sysdate, 'dd/MM/YYYY')
    )
     RETURNING CD_TEMPLATE_CENTRO
    INTO V_CD_TEMPLATE_CENTRO;

  TAB_NU_DIA_SEMANA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_DIA_SEMANA,',');
  TAB_NU_CAPACIDADE:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE,',');
  TAB_NU_CAPACIDADE_MAXIMA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE_MAXIMA,',');
  TAB_NU_ENSACADO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_ENSACADO,',');
  TAB_QT_OVERBOOKING:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_QT_OVERBOOKING,',');
  TAB_CD_PERFIL_MAQUINA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_CD_PERFIL_MAQUINA,',');
  TAB_NU_HORAS_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_HORAS_PRODUCAO,',');
  TAB_DH_INICIO_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_INICIO_PRODUCAO,',');
  TAB_DH_FIM_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_FIM_PRODUCAO,',');


  FOR X IN TAB_NU_DIA_SEMANA.FIRST .. TAB_NU_DIA_SEMANA.LAST LOOP

  INSERT
    INTO VND.ELO_TEMPLATE_CENTRO_ITEM
    (
      CD_TEMPLATE_CENTRO_ITEM,
      CD_TEMPLATE_CENTRO ,
      NU_DIA_SEMANA ,
      NU_CAPACIDADE ,
      NU_CAPACIDADE_MAXIMA ,
      NU_HORAS_PRODUCAO ,
      DH_INICIO_PRODUCAO ,
      DH_FIM_PRODUCAO ,
      QT_OVERBOOKING ,
      CD_PERFIL_MAQUINA ,
      NU_ENSACADO ,
      IC_ATIVO,
      CD_USUARIO_INCLUSAO,
      DH_INCLUSAO
    )
    VALUES
    (
      SEQ_ELO_TEMPLATE_CENTRO_ITEM.NEXTVAL,
      V_CD_TEMPLATE_CENTRO ,
      TAB_NU_DIA_SEMANA(X) ,
      to_number(TAB_NU_CAPACIDADE(X),'9999.999') ,
      to_number(TAB_NU_CAPACIDADE_MAXIMA(X),'9999.999') ,
      TAB_NU_HORAS_PRODUCAO(X) ,
      TO_DATE(TAB_DH_INICIO_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      TO_DATE(TAB_DH_FIM_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      to_number(TAB_QT_OVERBOOKING(X),'9999.99') ,
      TAB_CD_PERFIL_MAQUINA(X) ,
      to_number(TAB_NU_ENSACADO(X),'9999.999') ,
      'S',
      P_CD_USUARIO_INCLUSAO,
      to_date(sysdate, 'dd/MM/YYYY')
    );

  END LOOP;

    TAB_NU_DIA_SEMANA.DELETE;
    TAB_NU_CAPACIDADE.DELETE;
    TAB_NU_CAPACIDADE_MAXIMA.DELETE;
    TAB_NU_HORAS_PRODUCAO.DELETE;
    TAB_DH_INICIO_PRODUCAO.DELETE;
    TAB_DH_FIM_PRODUCAO.DELETE;
    TAB_QT_OVERBOOKING.DELETE;
    TAB_CD_PERFIL_MAQUINA.DELETE;
    TAB_NU_ENSACADO.DELETE;

     OPEN  P_RESULT FOR
            select V_CD_TEMPLATE_CENTRO as CD_TEMPLATE_CENTRO from dual;


  EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

    NULL;

  END PI_DEFAULTPARAMETERS;

  PROCEDURE PU_DEFAULTPARAMETERS
  (
      P_CD_TEMPLATE_CENTRO IN VND.ELO_TEMPLATE_CENTRO.CD_TEMPLATE_CENTRO%TYPE,
      P_CD_CENTRO_EXPEDIDOR IN VND.ELO_TEMPLATE_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
      P_QT_FILA_MINIMA IN VND.ELO_TEMPLATE_CENTRO.QT_FILA_MINIMA%TYPE,
      P_TS_HORARIO_CORTE_CONFERENCIA IN VND.ELO_TEMPLATE_CENTRO.TS_HORARIO_CORTE_CONFERENCIA%TYPE,
      P_TS_HORARIO_CORTE_FINAL IN VND.ELO_TEMPLATE_CENTRO.TS_HORARIO_CORTE_FINAL%TYPE,
      P_IC_COTA_POR_EMBALAGEM IN VND.ELO_TEMPLATE_CENTRO.IC_COTA_POR_EMBALAGEM%TYPE,
      P_NU_DIA_SEMANA IN VARCHAR,
      P_NU_CAPACIDADE IN VARCHAR,
      P_NU_CAPACIDADE_MAXIMA IN VARCHAR,
      P_NU_ENSACADO IN VARCHAR,
      P_QT_OVERBOOKING IN VARCHAR,
      P_CD_PERFIL_MAQUINA IN VARCHAR,
      P_NU_HORAS_PRODUCAO IN VARCHAR,
      P_DH_INICIO_PRODUCAO IN VARCHAR,
      P_DH_FIM_PRODUCAO IN VARCHAR,
      P_CD_USUARIO_ALTERACAO IN CTF.USUARIO.CD_USUARIO%TYPE,
      P_RESULT OUT T_CURSOR 
  )
  AS

   V_CD_TEMPLATE_CENTRO          VND.ELO_TEMPLATE_CENTRO.CD_TEMPLATE_CENTRO%type;
   TAB_NU_DIA_SEMANA             SPLIT_TBL;
   TAB_NU_CAPACIDADE             SPLIT_TBL;
   TAB_NU_CAPACIDADE_MAXIMA      SPLIT_TBL;
   TAB_NU_ENSACADO               SPLIT_TBL;
   TAB_QT_OVERBOOKING            SPLIT_TBL;
   TAB_CD_PERFIL_MAQUINA         SPLIT_TBL;
   TAB_NU_HORAS_PRODUCAO         SPLIT_TBL;
   TAB_DH_INICIO_PRODUCAO        SPLIT_TBL;
   TAB_DH_FIM_PRODUCAO           SPLIT_TBL;
   V_CD_POLO                     CTF.POLO_CENTRO_EXPEDIDOR.CD_POLO%type;

  BEGIN
  SAVEPOINT sp_sptest;

    /*SELECT CD_TEMPLATE_CENTRO 
    INTO V_CD_TEMPLATE_CENTRO
    FROM VND.ELO_TEMPLATE_CENTRO
    WHERE (CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR OR P_CD_CENTRO_EXPEDIDOR IS NULL)
    AND (CD_MACHINE = P_CD_MACHINE OR P_CD_MACHINE IS NULL);*/

    BEGIN
    select CD_POLO 
    INTO V_CD_POLO
    from CTF.POLO_CENTRO_EXPEDIDOR
    where CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_CD_POLO := NULL;
    END;

  --Updating Header details in ELO_TEMPLATE_CENTRO table

  UPDATE VND.ELO_TEMPLATE_CENTRO
     SET CD_POLO = V_CD_POLO,
         CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR,
         QT_FILA_MINIMA = P_QT_FILA_MINIMA,
         TS_HORARIO_CORTE_CONFERENCIA = P_TS_HORARIO_CORTE_CONFERENCIA,
         TS_HORARIO_CORTE_FINAL = P_TS_HORARIO_CORTE_FINAL,
         IC_COTA_POR_EMBALAGEM = P_IC_COTA_POR_EMBALAGEM,
         CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
         DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
   WHERE CD_TEMPLATE_CENTRO = P_CD_TEMPLATE_CENTRO;

  TAB_NU_DIA_SEMANA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_DIA_SEMANA,',');
  TAB_NU_CAPACIDADE:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE,',');
  TAB_NU_CAPACIDADE_MAXIMA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE_MAXIMA,',');
  TAB_NU_ENSACADO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_ENSACADO,',');
  TAB_QT_OVERBOOKING:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_QT_OVERBOOKING,',');
  TAB_CD_PERFIL_MAQUINA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_CD_PERFIL_MAQUINA,',');
  TAB_NU_HORAS_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_HORAS_PRODUCAO,',');
  TAB_DH_INICIO_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_INICIO_PRODUCAO,',');
  TAB_DH_FIM_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_FIM_PRODUCAO,',');


  FOR X IN TAB_NU_DIA_SEMANA.FIRST .. TAB_NU_DIA_SEMANA.LAST LOOP

  UPDATE VND.ELO_TEMPLATE_CENTRO_ITEM
     SET NU_CAPACIDADE = to_number(TAB_NU_CAPACIDADE(X),'9999.999'),
         NU_CAPACIDADE_MAXIMA = to_number(TAB_NU_CAPACIDADE_MAXIMA(X),'9999.999'),
         NU_HORAS_PRODUCAO = TAB_NU_HORAS_PRODUCAO(X),
         DH_INICIO_PRODUCAO = TO_DATE(TAB_DH_INICIO_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
         DH_FIM_PRODUCAO = TO_DATE(TAB_DH_FIM_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
         QT_OVERBOOKING = to_number(TAB_QT_OVERBOOKING(X),'9999.999'),
         CD_PERFIL_MAQUINA = TAB_CD_PERFIL_MAQUINA(X),
         NU_ENSACADO = to_number(TAB_NU_ENSACADO(X),'9999.999'),
         CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
         DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
   WHERE CD_TEMPLATE_CENTRO = P_CD_TEMPLATE_CENTRO AND NU_DIA_SEMANA = X;

  END LOOP;

    TAB_NU_DIA_SEMANA.DELETE;
    TAB_NU_CAPACIDADE.DELETE;
    TAB_NU_CAPACIDADE_MAXIMA.DELETE;
    TAB_NU_HORAS_PRODUCAO.DELETE;
    TAB_DH_INICIO_PRODUCAO.DELETE;
    TAB_DH_FIM_PRODUCAO.DELETE;
    TAB_QT_OVERBOOKING.DELETE;
    TAB_CD_PERFIL_MAQUINA.DELETE;
    TAB_NU_ENSACADO.DELETE;

     OPEN  P_RESULT FOR
            select P_CD_TEMPLATE_CENTRO as CD_TEMPLATE_CENTRO from dual;


  EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

    NULL;

  END PU_DEFAULTPARAMETERS;

  PROCEDURE PD_DEFAULTPARAMETERS
  (
      P_CD_TEMPLATE_CENTRO IN VND.ELO_TEMPLATE_CENTRO.CD_TEMPLATE_CENTRO%TYPE,
      P_CD_CENTRO_EXPEDIDOR IN VND.ELO_TEMPLATE_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
      P_CD_USUARIO_ALTERACAO IN CTF.USUARIO.CD_USUARIO%TYPE,
      P_RESULT       OUT T_CURSOR
  )
  AS
  V_CD_TEMPLATE_CENTRO VND.ELO_TEMPLATE_CENTRO.CD_TEMPLATE_CENTRO%type;
  BEGIN

  SAVEPOINT sp_sptest;

  /*
  SELECT CD_TEMPLATE_CENTRO 
  INTO V_CD_TEMPLATE_CENTRO
  FROM VND.ELO_TEMPLATE_CENTRO
  WHERE (CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR OR P_CD_CENTRO_EXPEDIDOR IS NULL)
    AND (CD_MACHINE = P_CD_MACHINE OR P_CD_MACHINE IS NULL);*/

  UPDATE VND.ELO_TEMPLATE_CENTRO_ITEM
     SET IC_ATIVO = 'N',
         CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
         DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
   WHERE CD_TEMPLATE_CENTRO = P_CD_TEMPLATE_CENTRO;

  UPDATE VND.ELO_TEMPLATE_CENTRO
     SET IC_ATIVO = 'N', 
         IC_COTA_POR_EMBALAGEM = 'N',
         CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
         DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
   WHERE CD_TEMPLATE_CENTRO = P_CD_TEMPLATE_CENTRO;

  OPEN  P_RESULT FOR
            select P_CD_TEMPLATE_CENTRO as CD_TEMPLATE_CENTRO from dual;

   EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

    NULL;

  END PD_DEFAULTPARAMETERS;

  PROCEDURE PX_AGENDAMENTO_CENTRO_ITEMS
  (
      P_CD_CENTRO       IN ELO_AGENDAMENTO_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
      P_CD_MACHINE      IN ELO_AGENDAMENTO_CENTRO.CD_MACHINE%TYPE DEFAULT NULL,
      --P_WEEK            IN INT,
      P_DT_WEEK_START   IN ELO_AGENDAMENTO_CENTRO.DT_WEEK_START%TYPE,
      P_RESULT          OUT T_CURSOR
  )
  AS
  BEGIN

  OPEN P_RESULT FOR
      select CI.CD_AGENDAMENTO_CENTRO_ITEM,
                 CI.CD_AGENDAMENTO_CENTRO,
                 CI.NU_DIA_SEMANA,
                 CI.NU_CAPACIDADE,
                 CI.NU_CAPACIDADE_MAXIMA,
                 CI.NU_ENSACADO,
                 CI.QT_OVERBOOKING,
                 CI.CD_PERFIL_MAQUINA,
                 CI.NU_HORAS_PRODUCAO,
                 CI.DH_INICIO_PRODUCAO,
                 CI.DH_FIM_PRODUCAO,
                 CI.IC_ATIVO,
                 C.CD_POLO,
                 C.CD_CENTRO_EXPEDIDOR,
                 C.CD_MACHINE,
                 TO_CHAR(C.DT_WEEK_START,'DD/MM/YYYY') AS DT_WEEK_START,
                 C.QT_FILA_MINIMA,
                 C.TS_HORARIO_CORTE_CONFERENCIA,
                 C.TS_HORARIO_CORTE_FINAL,
                 C.IC_COTA_POR_EMBALAGEM
            from VND.ELO_AGENDAMENTO_CENTRO_ITEM CI
           inner join VND.ELO_AGENDAMENTO_CENTRO C 
              on C.CD_AGENDAMENTO_CENTRO = CI.CD_AGENDAMENTO_CENTRO
           where (C.IC_ATIVO = 'S')
             and (CI.IC_ATIVO = 'S')
             and (P_CD_CENTRO is null or C.CD_CENTRO_EXPEDIDOR = P_CD_CENTRO)
             and (P_CD_MACHINE is null or C.CD_MACHINE = P_CD_MACHINE)
             --and to_number(to_char(to_date(C.DT_WEEK_START,'DD/MM/YYYY'),'WW')) = P_WEEK
             and (
                    P_DT_WEEK_START is null or 
                    (
                        to_number(to_char(to_date(C.DT_WEEK_START,'DD/MM/RRRR'),'WW')) = to_number(to_char(to_date(P_DT_WEEK_START,'DD/MM/RRRR'),'WW'))
                        and extract(year from C.DT_WEEK_START) = extract(year from to_date(P_DT_WEEK_START,'DD/MM/RRRR'))
                    )
                 )

             
        order by C.CD_POLO,
                 C.CD_CENTRO_EXPEDIDOR,
                 CI.NU_DIA_SEMANA;


  END PX_AGENDAMENTO_CENTRO_ITEMS; 

  PROCEDURE PI_AGENDAMENTO_CENTRO_ITEMS
  (
      P_CD_CENTRO_EXPEDIDOR IN VND.ELO_AGENDAMENTO_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
      P_CD_MACHINE IN VND.ELO_AGENDAMENTO_CENTRO.CD_MACHINE%TYPE,
      P_DT_WEEK_START IN VND.ELO_AGENDAMENTO_CENTRO.DT_WEEK_START%TYPE,
      P_QT_FILA_MINIMA IN VND.ELO_AGENDAMENTO_CENTRO.QT_FILA_MINIMA%TYPE,
      P_TS_HORARIO_CORTE_CONFERENCIA IN VND.ELO_AGENDAMENTO_CENTRO.TS_HORARIO_CORTE_CONFERENCIA%TYPE,
      P_TS_HORARIO_CORTE_FINAL IN VND.ELO_AGENDAMENTO_CENTRO.TS_HORARIO_CORTE_FINAL%TYPE,
      P_IC_COTA_POR_EMBALAGEM IN VND.ELO_AGENDAMENTO_CENTRO.IC_COTA_POR_EMBALAGEM%TYPE,
      P_NU_DIA_SEMANA IN VARCHAR,
      P_NU_CAPACIDADE IN VARCHAR,
      P_NU_CAPACIDADE_MAXIMA IN VARCHAR,
      P_NU_ENSACADO IN VARCHAR,
      P_QT_OVERBOOKING IN VARCHAR,
      P_CD_PERFIL_MAQUINA IN VARCHAR,
      P_NU_HORAS_PRODUCAO IN VARCHAR,
      P_DH_INICIO_PRODUCAO IN VARCHAR,
      P_DH_FIM_PRODUCAO IN VARCHAR,
      P_CD_USUARIO_INCLUSAO IN CTF.USUARIO.CD_USUARIO%TYPE,
      P_RESULT OUT T_CURSOR 

  )
  AS

   V_CD_AGENDAMENTO_CENTRO VND.ELO_AGENDAMENTO_CENTRO.CD_AGENDAMENTO_CENTRO%type;
   TAB_NU_DIA_SEMANA             SPLIT_TBL;
   TAB_NU_CAPACIDADE             SPLIT_TBL;
   TAB_NU_CAPACIDADE_MAXIMA      SPLIT_TBL;
   TAB_NU_ENSACADO               SPLIT_TBL;
   TAB_QT_OVERBOOKING            SPLIT_TBL;
   TAB_CD_PERFIL_MAQUINA         SPLIT_TBL;
   TAB_NU_HORAS_PRODUCAO         SPLIT_TBL;
   TAB_DH_INICIO_PRODUCAO        SPLIT_TBL;
   TAB_DH_FIM_PRODUCAO           SPLIT_TBL;
   V_CD_POLO              VND.ELO_AGENDAMENTO_CENTRO.CD_POLO%type;

  BEGIN

  SAVEPOINT sp_sptest;

   BEGIN
    select CD_POLO 
    INTO V_CD_POLO
    from CTF.POLO_CENTRO_EXPEDIDOR
    where CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_CD_POLO := NULL;
    END;

  --Inserting Header details in ELO_AGENDAMENTO_CENTRO table
  INSERT
    INTO VND.ELO_AGENDAMENTO_CENTRO
    (
      CD_AGENDAMENTO_CENTRO,
      DT_WEEK_START,
      CD_CENTRO_EXPEDIDOR ,
      CD_POLO ,
      CD_MACHINE ,
      QT_FILA_MINIMA ,
      TS_HORARIO_CORTE_CONFERENCIA ,
      TS_HORARIO_CORTE_FINAL ,
      IC_COTA_POR_EMBALAGEM ,
      IC_ATIVO,
      CD_USUARIO_INCLUSAO,
      DH_INCLUSAO
    )
    VALUES
    (
      SEQ_ELO_AGENDAMENTO_CENTRO.NEXTVAL,
      P_DT_WEEK_START,
      P_CD_CENTRO_EXPEDIDOR,
      V_CD_POLO,
      P_CD_MACHINE,
      P_QT_FILA_MINIMA ,
      P_TS_HORARIO_CORTE_CONFERENCIA ,
      P_TS_HORARIO_CORTE_FINAL ,
      P_IC_COTA_POR_EMBALAGEM ,
      'S',
      P_CD_USUARIO_INCLUSAO,
      sysdate
    )
     RETURNING CD_AGENDAMENTO_CENTRO
    INTO V_CD_AGENDAMENTO_CENTRO;

    TAB_NU_DIA_SEMANA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_DIA_SEMANA,',');
    TAB_NU_CAPACIDADE:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE,',');
    TAB_NU_CAPACIDADE_MAXIMA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE_MAXIMA,',');
    TAB_NU_ENSACADO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_ENSACADO,',');
    TAB_QT_OVERBOOKING:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_QT_OVERBOOKING,',');
    TAB_CD_PERFIL_MAQUINA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_CD_PERFIL_MAQUINA,',');
    TAB_NU_HORAS_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_HORAS_PRODUCAO,',');
    TAB_DH_INICIO_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_INICIO_PRODUCAO,',');
    TAB_DH_FIM_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_FIM_PRODUCAO,',');

  FOR X IN TAB_NU_DIA_SEMANA.FIRST .. TAB_NU_DIA_SEMANA.LAST LOOP

  INSERT
    INTO VND.ELO_AGENDAMENTO_CENTRO_ITEM
    (
      CD_AGENDAMENTO_CENTRO_ITEM,
      CD_AGENDAMENTO_CENTRO ,
      NU_DIA_SEMANA ,
      NU_CAPACIDADE ,
      NU_CAPACIDADE_MAXIMA ,
      NU_HORAS_PRODUCAO ,
      DH_INICIO_PRODUCAO ,
      DH_FIM_PRODUCAO ,
      QT_OVERBOOKING ,
      CD_PERFIL_MAQUINA ,
      NU_ENSACADO ,
      IC_ATIVO,
      CD_USUARIO_INCLUSAO,
      DH_INCLUSAO
    )
    VALUES
    (
      SEQ_ELO_AGENDAMENT_CENTRO_ITEM.NEXTVAL,
      V_CD_AGENDAMENTO_CENTRO ,
      TAB_NU_DIA_SEMANA(X) ,
      to_number(TAB_NU_CAPACIDADE(X),'99999.999') ,
      to_number(TAB_NU_CAPACIDADE_MAXIMA(X),'99999.999') ,
      TAB_NU_HORAS_PRODUCAO(X) ,
      TO_DATE(TAB_DH_INICIO_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      TO_DATE(TAB_DH_FIM_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      to_number(TAB_QT_OVERBOOKING(X),'9999.999') ,
      TAB_CD_PERFIL_MAQUINA(X) ,
      to_number(TAB_NU_ENSACADO(X),'9999.999') ,
      'S',
      P_CD_USUARIO_INCLUSAO,
      sysdate
    );

  END LOOP;

    TAB_NU_DIA_SEMANA.DELETE;
    TAB_NU_CAPACIDADE.DELETE;
    TAB_NU_CAPACIDADE_MAXIMA.DELETE;
    TAB_NU_HORAS_PRODUCAO.DELETE;
    TAB_DH_INICIO_PRODUCAO.DELETE;
    TAB_DH_FIM_PRODUCAO.DELETE;
    TAB_QT_OVERBOOKING.DELETE;
    TAB_CD_PERFIL_MAQUINA.DELETE;
    TAB_NU_ENSACADO.DELETE;

     OPEN  P_RESULT FOR
            select V_CD_AGENDAMENTO_CENTRO as CD_AGENDAMENTO_CENTRO from dual;

  EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

    NULL;

  END; 

  PROCEDURE PU_AGENDAMENTO_CENTRO_ITEMS
  (
      P_CD_AGENDAMENTO_CENTRO IN VND.ELO_AGENDAMENTO_CENTRO.CD_AGENDAMENTO_CENTRO%TYPE,
      P_CD_CENTRO_EXPEDIDOR IN VND.ELO_AGENDAMENTO_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE,
      P_CD_MACHINE IN VND.ELO_AGENDAMENTO_CENTRO.CD_MACHINE%TYPE,
      P_DT_WEEK_START IN VND.ELO_AGENDAMENTO_CENTRO.DT_WEEK_START%TYPE,
      P_QT_FILA_MINIMA IN VND.ELO_AGENDAMENTO_CENTRO.QT_FILA_MINIMA%TYPE,
      P_TS_HORARIO_CORTE_CONFERENCIA IN VND.ELO_AGENDAMENTO_CENTRO.TS_HORARIO_CORTE_CONFERENCIA%TYPE,
      P_TS_HORARIO_CORTE_FINAL IN VND.ELO_AGENDAMENTO_CENTRO.TS_HORARIO_CORTE_FINAL%TYPE,
      P_IC_COTA_POR_EMBALAGEM IN VND.ELO_AGENDAMENTO_CENTRO.IC_COTA_POR_EMBALAGEM%TYPE,
      P_IC_ATIVO IN VND.ELO_AGENDAMENTO_CENTRO.IC_ATIVO%TYPE,
      P_NU_DIA_SEMANA IN VARCHAR,
      P_NU_CAPACIDADE IN VARCHAR,
      P_NU_CAPACIDADE_MAXIMA IN VARCHAR,
      P_NU_ENSACADO IN VARCHAR,
      P_QT_OVERBOOKING IN VARCHAR,
      P_CD_PERFIL_MAQUINA IN VARCHAR,
      P_NU_HORAS_PRODUCAO IN VARCHAR,
      P_DH_INICIO_PRODUCAO IN VARCHAR,
      P_DH_FIM_PRODUCAO IN VARCHAR,
      P_CD_USUARIO_ALTERACAO IN CTF.USUARIO.CD_USUARIO%TYPE,
      P_RESULT OUT T_CURSOR 


  )
  AS
  V_TEST VARCHAR2(100);
   V_CD_AGENDAMENTO_CENTRO VND.ELO_AGENDAMENTO_CENTRO.CD_AGENDAMENTO_CENTRO%type;
   TAB_NU_DIA_SEMANA             SPLIT_TBL;
   TAB_NU_CAPACIDADE             SPLIT_TBL;
   TAB_NU_CAPACIDADE_MAXIMA      SPLIT_TBL;
   TAB_NU_ENSACADO               SPLIT_TBL;
   TAB_QT_OVERBOOKING            SPLIT_TBL;
   TAB_CD_PERFIL_MAQUINA         SPLIT_TBL;
   TAB_NU_HORAS_PRODUCAO         SPLIT_TBL;
   TAB_DH_INICIO_PRODUCAO        SPLIT_TBL;
   TAB_DH_FIM_PRODUCAO           SPLIT_TBL;
   V_CD_POLO            CTF.POLO_CENTRO_EXPEDIDOR.CD_POLO%type;

  BEGIN

  SAVEPOINT sp_sptest;

  /*
   SELECT C.CD_AGENDAMENTO_CENTRO 
   INTO V_CD_AGENDAMENTO_CENTRO
   FROM VND.ELO_AGENDAMENTO_CENTRO_ITEM CI INNER JOIN VND.ELO_AGENDAMENTO_CENTRO C 
   ON C.CD_AGENDAMENTO_CENTRO = CI.CD_AGENDAMENTO_CENTRO
   LEFT JOIN CTF.MACHINE_PROFILE MP ON MP.CD_MACHINE_PROFILE = CI.CD_PERFIL_MAQUINA
   WHERE TRIM(C.CD_CENTRO_EXPEDIDOR) = NVL(TRIM(P_CD_CENTRO_EXPEDIDOR),C.CD_CENTRO_EXPEDIDOR)
   AND NVL(C.CD_MACHINE,0) = NVL(P_CD_MACHINE,(NVL(C.CD_MACHINE,0) ))
   AND TRUNC(C.DT_WEEK_START) = NVL(TRUNC(P_DT_WEEK_START),C.DT_WEEK_START);*/

     BEGIN
    select CD_POLO 
    INTO V_CD_POLO
    from CTF.POLO_CENTRO_EXPEDIDOR
    where CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        V_CD_POLO := NULL;
    END;

     --Updating Header details in ELO_AGENDAMENTO_CENTRO table

  UPDATE VND.ELO_AGENDAMENTO_CENTRO
  SET CD_POLO = V_CD_POLO,
      CD_CENTRO_EXPEDIDOR = P_CD_CENTRO_EXPEDIDOR,
      CD_MACHINE = P_CD_MACHINE,
      DT_WEEK_START = P_DT_WEEK_START,
      QT_FILA_MINIMA = P_QT_FILA_MINIMA,
      TS_HORARIO_CORTE_CONFERENCIA = P_TS_HORARIO_CORTE_CONFERENCIA,
      TS_HORARIO_CORTE_FINAL = P_TS_HORARIO_CORTE_FINAL,
      IC_COTA_POR_EMBALAGEM = p_IC_COTA_POR_EMBALAGEM,
      IC_ATIVO = 'S',
      CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
      DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
  WHERE CD_AGENDAMENTO_CENTRO = P_CD_AGENDAMENTO_CENTRO;

  TAB_NU_DIA_SEMANA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_DIA_SEMANA,',');
  TAB_NU_CAPACIDADE:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE,',');
  --dbms_output.put_line(TAB_NU_CAPACIDADE(1) || TAB_NU_CAPACIDADE(2) || TAB_NU_CAPACIDADE(3) || TAB_NU_CAPACIDADE(4) || TAB_NU_CAPACIDADE(5) || TAB_NU_CAPACIDADE(6) || TAB_NU_CAPACIDADE(7));
  TAB_NU_CAPACIDADE_MAXIMA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_CAPACIDADE_MAXIMA,',');
  TAB_NU_ENSACADO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_ENSACADO,',');
  TAB_QT_OVERBOOKING:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_QT_OVERBOOKING,',');
  TAB_CD_PERFIL_MAQUINA:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_CD_PERFIL_MAQUINA,',');
  TAB_NU_HORAS_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_NU_HORAS_PRODUCAO,',');
  TAB_DH_INICIO_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_INICIO_PRODUCAO,',');
  TAB_DH_FIM_PRODUCAO:= VND.GX_ELO_AGENDAMENTO_PARAMETER1.FX_SPLIT2(P_DH_FIM_PRODUCAO,',');


  FOR X IN TAB_NU_DIA_SEMANA.FIRST .. TAB_NU_DIA_SEMANA.LAST LOOP

  UPDATE VND.ELO_AGENDAMENTO_CENTRO_ITEM
  SET NU_CAPACIDADE = to_number(TAB_NU_CAPACIDADE(X),'99999.999'),
      NU_CAPACIDADE_MAXIMA = to_number(TAB_NU_CAPACIDADE_MAXIMA(X),'99999.999'),
      NU_HORAS_PRODUCAO = TAB_NU_HORAS_PRODUCAO(X),
      DH_INICIO_PRODUCAO = TO_DATE(TAB_DH_INICIO_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      DH_FIM_PRODUCAO = TO_DATE(TAB_DH_FIM_PRODUCAO(X),'DD/MM/YYYY HH24:MI'),
      QT_OVERBOOKING = to_number(TAB_QT_OVERBOOKING(X),'9999.999'),
      CD_PERFIL_MAQUINA = TAB_CD_PERFIL_MAQUINA(X),
      NU_ENSACADO = to_number(TAB_NU_ENSACADO(X),'9999.999'),
      IC_ATIVO = 'S',
      CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
      DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
  WHERE CD_AGENDAMENTO_CENTRO = P_CD_AGENDAMENTO_CENTRO AND NU_DIA_SEMANA = X;

  END LOOP;

    TAB_NU_DIA_SEMANA.DELETE;
    TAB_NU_CAPACIDADE.DELETE;
    TAB_NU_CAPACIDADE_MAXIMA.DELETE;
    TAB_NU_HORAS_PRODUCAO.DELETE;
    TAB_DH_INICIO_PRODUCAO.DELETE;
    TAB_DH_FIM_PRODUCAO.DELETE;
    TAB_QT_OVERBOOKING.DELETE;
    TAB_CD_PERFIL_MAQUINA.DELETE;
    TAB_NU_ENSACADO.DELETE;

     OPEN  P_RESULT FOR
            select P_CD_AGENDAMENTO_CENTRO as CD_AGENDAMENTO_CENTRO from dual;


  EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

    NULL;


  END PU_AGENDAMENTO_CENTRO_ITEMS;

  PROCEDURE PD_AGENDAMENTO_CENTRO_ITEMS
  (
      P_CD_AGENDAMENTO_CENTRO               IN VND.ELO_AGENDAMENTO_CENTRO.CD_AGENDAMENTO_CENTRO%TYPE DEFAULT NULL,
      P_CD_CENTRO_EXPEDIDOR                 IN VND.ELO_AGENDAMENTO_CENTRO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
      P_CD_MACHINE                          IN VND.ELO_AGENDAMENTO_CENTRO.CD_MACHINE%TYPE DEFAULT NULL,
      P_CD_USUARIO_ALTERACAO                IN CTF.USUARIO.CD_USUARIO%TYPE DEFAULT NULL,
      P_RESULT                              OUT T_CURSOR
  )
  AS

  V_CD_AGENDAMENTO_CENTRO VND.ELO_AGENDAMENTO_CENTRO.CD_AGENDAMENTO_CENTRO%type;

  BEGIN
  SAVEPOINT sp_sptest;

  /*
  SELECT C.CD_AGENDAMENTO_CENTRO 
   INTO V_CD_AGENDAMENTO_CENTRO
   FROM VND.ELO_AGENDAMENTO_CENTRO_ITEM CI INNER JOIN VND.ELO_AGENDAMENTO_CENTRO C 
   ON C.CD_AGENDAMENTO_CENTRO = CI.CD_AGENDAMENTO_CENTRO
   LEFT JOIN CTF.MACHINE_PROFILE MP ON MP.CD_MACHINE_PROFILE = CI.CD_PERFIL_MAQUINA
   WHERE TRIM(C.CD_CENTRO_EXPEDIDOR) = NVL(TRIM(P_CD_CENTRO_EXPEDIDOR),C.CD_CENTRO_EXPEDIDOR)
   AND NVL(C.CD_MACHINE,0) = NVL(P_CD_MACHINE,(NVL(C.CD_MACHINE,0) ))
   AND TRUNC(C.DT_WEEK_START) = NVL(TRUNC(P_DT_WEEK_START),C.DT_WEEK_START);*/

  UPDATE VND.ELO_AGENDAMENTO_CENTRO_ITEM
  SET IC_ATIVO = 'N',
      CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
      DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
  WHERE CD_AGENDAMENTO_CENTRO = P_CD_AGENDAMENTO_CENTRO;

  UPDATE VND.ELO_AGENDAMENTO_CENTRO
     SET IC_ATIVO = 'N', 
         IC_COTA_POR_EMBALAGEM = 'N',
         CD_USUARIO_ALTERACAO = P_CD_USUARIO_ALTERACAO,
         DH_ULT_ALTERACAO = to_date(sysdate, 'dd/MM/YYYY')
   WHERE CD_AGENDAMENTO_CENTRO = P_CD_AGENDAMENTO_CENTRO;

  OPEN  P_RESULT FOR
            select P_CD_AGENDAMENTO_CENTRO as CD_AGENDAMENTO_CENTRO from dual;

   EXCEPTION
    WHEN OTHERS THEN
    ROLLBACK TO sp_sptest;
    RAISE_APPLICATION_ERROR(-20000,'  ' || SQLERRM);

  NULL;
  END PD_AGENDAMENTO_CENTRO_ITEMS;

  PROCEDURE PX_GET_MACHINE_PROFILE
  (
      P_MACHINE IN CTF.MACHINE_MACHINE_PROFILE.CD_MACHINE%TYPE,
      P_RESULT  OUT T_CURSOR
  )

  IS
  BEGIN

    OPEN P_RESULT FOR

    select distinct
           mp.CD_MACHINE_PROFILE,
           mp.DS_MACHINE_PROFILE
      from CTF.MACHINE_PROFILE mp
     inner join CTF.MACHINE_MACHINE_PROFILE mmp
        on mp.CD_MACHINE_PROFILE = mmp.CD_MACHINE_PROFILE
     where (P_MACHINE IS NULL or mmp.CD_MACHINE = P_MACHINE)
  order by mp.DS_MACHINE_PROFILE;

  END PX_GET_MACHINE_PROFILE;

END GX_ELO_AGENDAMENTO_PARAMETER1;
/