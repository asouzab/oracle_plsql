CREATE OR REPLACE PACKAGE VND.GX_CELL_ATTENDANCE AS 
    
    TYPE T_CURSOR IS REF CURSOR;

    PROCEDURE PX_CELL_ATTENDANCE(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_CD_SALES_DISTRICT             IN VND.ELO_CARTEIRA.CD_SALES_DISTRICT%TYPE DEFAULT NULL,
        P_CD_SALES_OFFICE               IN VND.ELO_CARTEIRA.CD_SALES_OFFICE%TYPE DEFAULT NULL,
        P_CD_SALES_GROUP                IN VND.ELO_CARTEIRA.CD_SALES_GROUP%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR);

  PROCEDURE PU_CELL_ATTENDANCE_UPDATE(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_CD_SALES_DISTRICT             IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_DISTRICT%TYPE DEFAULT NULL,
        P_CD_SALES_OFFICE               IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_OFFICE%TYPE DEFAULT NULL,
        P_CD_SALES_GROUP                IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_GROUP%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR); 
        
   PROCEDURE PU_CELL_ATTENDANCE_UPDATE(
    P_CD_ELO_CARTEIRA               IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE DEFAULT NULL,
    P_DS_OBSERVACAO_ADVEN           IN VND.ELO_CARTEIRA.DS_OBSERVACAO_ADVEN%TYPE DEFAULT NULL,
    P_RETORNO                       OUT T_CURSOR);        
        
  PROCEDURE PU_CELL_ATTENDANCE_CLOSE(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_CD_SALES_DISTRICT             IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_DISTRICT%TYPE DEFAULT NULL,
        P_CD_SALES_OFFICE               IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_OFFICE%TYPE DEFAULT NULL,
        P_CD_SALES_GROUP                IN VND.ELO_AGENDAMENTO_SUPERVISOR.CD_SALES_GROUP%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR); 
        
   PROCEDURE PX_CELL_ATTENDANCE_POPUP(
        P_CD_SALES_GROUP                IN VND.ELO_CARTEIRA.CD_SALES_GROUP%TYPE DEFAULT NULL,
        P_CD_CLIENTE                    IN VND.ELO_CARTEIRA.CD_CLIENTE%TYPE DEFAULT NULL,
        P_CD_PRODUTO_SAP                IN VND.ELO_CARTEIRA.CD_PRODUTO_SAP%TYPE DEFAULT NULL,
        P_CD_INCOTERMS                  IN VND.ELO_CARTEIRA.CD_INCOTERMS%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_CARTEIRA.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_CLIENTE_RECEBEDOR          IN VND.ELO_CARTEIRA.CD_CLIENTE_RECEBEDOR%TYPE DEFAULT NULL,
        P_CD_CLIENTE_PAGADOR            IN VND.ELO_CARTEIRA.CD_CLIENTE_PAGADOR%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_NU_CONTRATO_SAP               IN VND.ELO_CARTEIRA.NU_CONTRATO_SAP%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR);
        
   PROCEDURE PU_CELL_ATTENDANCE_POPUP(
        P_CD_ELO_CARTEIRA            IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
        P_QT_AGENDADA_CELULA         IN VND.ELO_CARTEIRA.QT_AGENDADA_CELULA%TYPE,
        P_DS_OBSERVACAO_ADVEN        IN VND.ELO_CARTEIRA.DS_OBSERVACAO_ADVEN%TYPE,
        P_RETORNO                    OUT T_CURSOR);

    PROCEDURE PX_GET_AGENDADA_CELULA_TOTAL(
        P_NU_CONTRATO_SAP               IN VND.ELO_CARTEIRA.NU_CONTRATO_SAP%TYPE,
        P_RETORNO                       OUT T_CURSOR);

    FUNCTION FX_GET_NR_PROTOCOLO_VB(
           P_CD_ELO_CARTEIRA IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE)

    RETURN VARCHAR2 ;

    FUNCTION FX_GET_NR_PROTOCOLO(
        P_NU_CONTRATO_SAP   IN CPT.AUTORIZACAO_ENTREGA.NU_CONTRATO_SAP%TYPE) 
    RETURN VARCHAR2 ;
    
    FUNCTION FX_GET_QT_PROTOCOLO(
        P_NU_CONTRATO_SAP   IN CPT.AUTORIZACAO_ENTREGA.NU_CONTRATO_SAP%TYPE) 
    RETURN VARCHAR2 ;
   
    FUNCTION FX_GET_QT_PROTOCOLO2(
       P_NU_CONTRATO_SAP IN CPT.AUTORIZACAO_ENTREGA.NU_CONTRATO_SAP%TYPE)
    RETURN CPT.ENTREGA.QT_QUANTIDADE%TYPE;
   
    FUNCTION FX_GET_STATUS_DESCRIPTION(
        P_STATUS_SIGLA  IN CHAR) 
    RETURN VARCHAR2 ;
    
    FUNCTION FX_GET_COMERCIAL(
        P_CD_BLOQUEIO_ENTREGA  IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_COBRANCA(
        P_CD_BLOQUEIO_ENTREGA  IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_CREDITO(
        P_CD_BLOQUEIO_ENTREGA  IN CHAR)
    RETURN VARCHAR2;    

    FUNCTION FX_GET_CONTRATO_MAE(
        P_CD_BLOQUEIO_ENTREGA  IN CHAR)
    RETURN VARCHAR2; 

    FUNCTION FX_GET_ORDEM_VENDA(
        P_CD_BLOQUEIO_ENTREGA  IN CHAR)
    RETURN VARCHAR2;  
    
    FUNCTION FX_GET_BLOQUEIO_ENTREGA(
        P_CD_BLOQUEIO_REMESSA IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_BLOQUEIO_ENTREGA_ITEM(
        P_CD_BLOQUEIO_REMESSA_ITEM IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_BLOQUEIO_FATURAMENTO(
        P_CD_BLOQUEIO_FATURAMENTO IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_BLOQUEIO_FAT_ITEM(
        P_CD_BLOQUEIO_FAT_ITEM IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_GET_BLOQUEIO_CREDITO(
        P_CD_BLOQUEIO_CREDITO IN CHAR)
    RETURN VARCHAR2;
    
    FUNCTION FX_QT_AGENDADA_CONFIRMADA(
        P_NU_CONTRATO_SAP  IN CHAR,
        P_CD_ITEM_PEDIDO   IN NUMBER)
    RETURN NUMBER;    
    
    
        PROCEDURE PX_CELL_ATTENDANCE_PROTOCOLO(
    P_CD_ELO_CARTEIRA             IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
    P_RETORNO                       OUT T_CURSOR);


   PROCEDURE PU_CELL_ATTENDANCE_UPROT(
        P_CD_ELO_CARTEIRA            IN VND.ELO_VBAK_PROTOCOLO.CD_ELO_CARTEIRA%TYPE,
        P_QT_PROTOCOLO              IN VND.ELO_VBAK_PROTOCOLO.QT_AGENDADA_PROTOCOLO%TYPE,
        P_NU_PROTOCOLO              IN VND.ELO_VBAK_PROTOCOLO.NU_PROTOCOLO%TYPE,
        P_RETORNO                    OUT T_CURSOR);
    
   PROCEDURE PU_CARTEIRA_GROUPING(
        P_CD_ELO_CARTEIRA            IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
        P_RETORNO                    OUT T_CURSOR); 


  PROCEDURE PU_CELL_ATTENDANCE_GERARPROT(
        P_CD_ELO_CARTEIRA             IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
        P_RETORNO                       OUT T_CURSOR
    );

  PROCEDURE PU_CELL_ATTENDANCE_GERARPROT(
        P_CD_WEEK             IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE,
        P_CD_PROCESSAR        IN VARCHAR2,
        P_RETORNO                       OUT T_CURSOR
    );

  FUNCTION FX_GET_NR_PROTOCOLO(
           P_NU_CONTRATO_SAP IN CPT.AUTORIZACAO_ENTREGA.NU_CONTRATO_SAP%TYPE, 
           P_CD_ITEM_CONTRATO IN CPT.AUTORIZACAO_ENTREGA.CD_ITEM_CONTRATO%TYPE)

    RETURN VARCHAR2;
    
    
 

  PROCEDURE PU_CHECK_STATUS_CELL(
        P_CD_ELO_CARTEIRA               IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
        P_CD_ELO_STATUS                 OUT VND.ELO_STATUS.CD_ELO_STATUS%TYPE,
        P_SG_STATUS                     OUT VND.ELO_STATUS.SG_STATUS%TYPE,
        P_ERRO                          OUT VARCHAR2,
        P_RETORNO                       OUT T_CURSOR );

  FUNCTION FX_GET_ROTEIRO_ENTREGA(
           P_CD_ELO_CARTEIRA IN VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE)

    RETURN VARCHAR2;

  PROCEDURE PD_CELL_ATT_UNDO_UPROT(
        P_CD_ELO_CARTEIRA            IN VND.ELO_VBAK_PROTOCOLO.CD_ELO_CARTEIRA%TYPE,
         P_NU_PROTOCOLO              IN VND.ELO_VBAK_PROTOCOLO.NU_PROTOCOLO%TYPE,
        P_RETORNO                    OUT T_CURSOR);

  PROCEDURE PD_CELL_ATT_UNDO_UPROT(
        P_CD_ELO_CARTEIRA            IN VND.ELO_VBAK_PROTOCOLO.CD_ELO_CARTEIRA%TYPE);

  PROCEDURE PX_CELL_ATTENDANCE_EXPORTAR(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_CD_SALES_DISTRICT             IN VND.ELO_CARTEIRA.CD_SALES_DISTRICT%TYPE DEFAULT NULL,
        P_CD_SALES_OFFICE               IN VND.ELO_CARTEIRA.CD_SALES_OFFICE%TYPE DEFAULT NULL,
        P_CD_SALES_GROUP                IN VND.ELO_CARTEIRA.CD_SALES_GROUP%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR
    );

  PROCEDURE PX_CELL_ALLOW_CLOSE(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR);
        
    PROCEDURE PU_CELL_CLOSE_REPLAN(
        P_CD_POLO                       IN VND.ELO_AGENDAMENTO.CD_POLO%TYPE DEFAULT NULL,
        P_CD_CENTRO_EXPEDIDOR           IN VND.ELO_AGENDAMENTO.CD_CENTRO_EXPEDIDOR%TYPE DEFAULT NULL,
        P_CD_MACHINE                    IN VND.ELO_AGENDAMENTO.CD_MACHINE%TYPE DEFAULT NULL,
        P_CD_WEEK                       IN VND.ELO_AGENDAMENTO.CD_WEEK%TYPE DEFAULT NULL,
        P_RETORNO                       OUT T_CURSOR);        
        

END GX_CELL_ATTENDANCE;
/