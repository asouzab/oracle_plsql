CREATE OR REPLACE PACKAGE BODY VND.GX_ELO_SCREEN AS

   PROCEDURE PU_SCREEN(
        P_NO_SCREEN                 IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
        P_DS_SCREEN                 IN VND.ELO_SCREEN.DS_SCREEN%TYPE,
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    V_TRAVA VARCHAR2(1):='N';
    V_CD_ELO_SCREEN               VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE;

   BEGIN

    IF NVL(P_CD_ELO_SCREEN, 0) = 0 THEN 

    BEGIN 
        SELECT CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
        FROM VND.ELO_SCREEN
        WHERE NO_SCREEN = P_NO_SCREEN 
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='N';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN:=P_CD_ELO_SCREEN;

    END IF;

    IF V_TRAVA = 'N' THEN          

    IF NVL(V_CD_ELO_SCREEN, 0) = 0 THEN 
    BEGIN
        SELECT VND.SEQ_ELO_SCREEN.NEXTVAL
        INTO V_CD_ELO_SCREEN FROM DUAL;    

    BEGIN

       INSERT INTO VND.ELO_SCREEN
         ( 
            CD_ELO_SCREEN,
            NO_SCREEN,
            DS_SCREEN
           )
            VALUES ( 
            V_CD_ELO_SCREEN, 
            P_NO_SCREEN,
            P_DS_SCREEN

            );
        COMMIT;

        EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                    -20001,
                    'ERRO ENCONTRADOINSSCREN - '
                     || SQLCODE
                     || ' -ERROR- '
                     || SQLERRM
                );

               END;
        END;
    END;

    ELSE
   BEGIN
    UPDATE VND.ELO_SCREEN
    SET 
    NO_SCREEN = P_NO_SCREEN ,
    DS_SCREEN = P_DS_SCREEN 

    WHERE
    CD_ELO_SCREEN = V_CD_ELO_SCREEN;
    COMMIT;
            EXCEPTION
        WHEN OTHERS THEN
            BEGIN
            V_TRAVA:='S';
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOUPDSCREEN - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

           END;
    END;


    END IF;

    END IF;

    OPEN P_RETORNO FOR
    SELECT V_CD_ELO_SCREEN  AS CD_ELO_SCREEN
    FROM DUAL;       


    END PU_SCREEN;


   PROCEDURE PU_SCREEN_COLUMN(
        P_NO_SCREEN                 IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
		P_CD_ELO_SCREEN_COLUMN		IN VND.ELO_SCREEN_COLUMN.CD_ELO_SCREEN_COLUMN%TYPE,
		P_NO_COLUMN					IN VND.ELO_SCREEN_COLUMN.NO_COLUMN%TYPE,
		P_NU_ORDER					IN VND.ELO_SCREEN_COLUMN.NU_ORDER%TYPE,
		P_IC_MANDATORY				IN VND.ELO_SCREEN_COLUMN.IC_MANDATORY%TYPE,
        P_NO_ALIAS_COLUMN           IN VND.ELO_SCREEN_COLUMN.NO_ALIAS_COLUMN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS



    V_TRAVA VARCHAR2(1):='N';
    V_CD_ELO_SCREEN               VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE;
	V_CD_ELO_SCREEN_COLUMN		 VND.ELO_SCREEN_COLUMN.CD_ELO_SCREEN_COLUMN%TYPE;

   BEGIN

    IF NVL(P_CD_ELO_SCREEN, 0) = 0 THEN 

    BEGIN 
        SELECT CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
        FROM VND.ELO_SCREEN
        WHERE NO_SCREEN = P_NO_SCREEN 
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN:=P_CD_ELO_SCREEN;

    END IF;

    IF V_CD_ELO_SCREEN > 0 AND NVL(P_CD_ELO_SCREEN_COLUMN, 0) = 0 THEN 

    BEGIN 
        SELECT E_COL.CD_ELO_SCREEN_COLUMN INTO V_CD_ELO_SCREEN_COLUMN
        FROM VND.ELO_SCREEN_COLUMN E_COL
        WHERE E_COL.CD_ELO_SCREEN = V_CD_ELO_SCREEN
		AND E_COL.NO_COLUMN  = P_NO_COLUMN
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='N';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN_COLUMN:=P_CD_ELO_SCREEN_COLUMN;

    END IF;


    IF V_TRAVA = 'N' THEN          

    IF NVL(V_CD_ELO_SCREEN_COLUMN, 0) = 0 THEN 
    BEGIN

        SELECT 
        VND.SEQ_ELO_SCREEN_COLUMN.NEXTVAL INTO V_CD_ELO_SCREEN_COLUMN 
        FROM DUAL;

        BEGIN

       INSERT INTO VND.ELO_SCREEN_COLUMN
         ( 

			CD_ELO_SCREEN_COLUMN,
			CD_ELO_SCREEN,
			NO_COLUMN,
			NU_ORDER,
			IC_MANDATORY,
            NO_ALIAS_COLUMN


           )
            VALUES ( 
            V_CD_ELO_SCREEN_COLUMN, 
			V_CD_ELO_SCREEN,
			P_NO_COLUMN,
			P_NU_ORDER,
			P_IC_MANDATORY,
            P_NO_ALIAS_COLUMN

            );
        COMMIT;

        EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                    -20001,
                    'ERRO ENCONTRADOINSSCREN - '
                     || SQLCODE
                     || ' -ERROR- '
                     || SQLERRM
                );

               END;
        END;
        END; 


    ELSE
   BEGIN
    UPDATE VND.ELO_SCREEN_COLUMN
    SET 
	NU_ORDER = P_NU_ORDER,
    IC_MANDATORY = P_IC_MANDATORY ,
    NO_ALIAS_COLUMN = P_NO_ALIAS_COLUMN

    WHERE
    CD_ELO_SCREEN = V_CD_ELO_SCREEN
	AND CD_ELO_SCREEN_COLUMN = V_CD_ELO_SCREEN_COLUMN;
    COMMIT;
            EXCEPTION
        WHEN OTHERS THEN
            BEGIN
            V_TRAVA:='S';
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOUPDSCREEN - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

           END;
    END;


    END IF;

    END IF;



    OPEN P_RETORNO FOR
    SELECT CASE WHEN V_CD_ELO_SCREEN_COLUMN IS NOT NULL THEN V_CD_ELO_SCREEN_COLUMN ELSE 0 END AS CD_ELO_SCREEN_COLUMN
    FROM DUAL;       


    END PU_SCREEN_COLUMN;    



   PROCEDURE PU_SCREEN_LAYOUT(

		P_CD_ELO_SCREEN_LAYOUT	IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE,
		P_NO_SCREEN             IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_CD_ELO_SCREEN			IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN%TYPE,
		P_NO_SCREEN_LAYOUT      IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,
		P_CD_USUARIO			IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_IC_VISIBLE			IN VND.ELO_SCREEN_LAYOUT.IC_VISIBLE%TYPE,
		P_IC_ATIVO				IN VND.ELO_SCREEN_LAYOUT.IC_ATIVO%TYPE,	

        P_RETORNO                    OUT T_CURSOR)

    AS

    V_TRAVA VARCHAR2(1):='N';
    V_CD_ELO_SCREEN_LAYOUT               VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE;
	V_CD_ELO_SCREEN               		VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN%TYPE;

   BEGIN

    IF NVL(P_CD_ELO_SCREEN_LAYOUT, 0) = 0 THEN 

    BEGIN 
        SELECT E_LAY.CD_ELO_SCREEN_LAYOUT INTO V_CD_ELO_SCREEN_LAYOUT
        FROM VND.ELO_SCREEN_LAYOUT E_LAY
		INNER JOIN VND.ELO_SCREEN ESC 
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
        WHERE ((P_NO_SCREEN IS NULL OR ESC.NO_SCREEN = P_NO_SCREEN )
		OR (P_NO_SCREEN_LAYOUT IS NULL OR E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT ))
		AND E_LAY.CD_USUARIO = P_CD_USUARIO
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN_LAYOUT:=P_CD_ELO_SCREEN_LAYOUT;

    END IF;

    IF NVL(V_CD_ELO_SCREEN, 0) = 0 THEN 

    BEGIN 
        SELECT E_LAY.CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
        FROM VND.ELO_SCREEN_LAYOUT E_LAY
		INNER JOIN VND.ELO_SCREEN ESC 
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
        WHERE ((P_NO_SCREEN IS NULL OR ESC.NO_SCREEN = P_NO_SCREEN )
		OR (P_NO_SCREEN_LAYOUT IS NULL OR E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT ))
		AND E_LAY.CD_USUARIO = P_CD_USUARIO
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN:=P_CD_ELO_SCREEN;

    END IF;	




    IF V_TRAVA = 'N' THEN          

    IF NVL(V_CD_ELO_SCREEN_LAYOUT, 0) = 0 THEN 
    BEGIN

       INSERT INTO VND.ELO_SCREEN_LAYOUT
         ( 
			CD_ELO_SCREEN_LAYOUT,
			CD_ELO_SCREEN,
			NO_SCREEN_LAYOUT,
			CD_USUARIO,
			IC_VISIBLE,
			IC_ATIVO
           )
            VALUES ( 
            VND.SEQ_ELO_SCREEN_LAYOUT.NEXTVAL, 
			V_CD_ELO_SCREEN,
			P_NO_SCREEN_LAYOUT,
			P_CD_USUARIO,
			'S', --IC_VISIBLE
			'S' --IC_ATIVO

            );
        COMMIT;

        EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                    -20001,
                    'ERRO ENCONTRADOINSSCREN - '
                     || SQLCODE
                     || ' -ERROR- '
                     || SQLERRM
                );

               END;
        END;


    ELSE
   BEGIN
    UPDATE VND.ELO_SCREEN_LAYOUT
    SET 
    NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT ,
	IC_VISIBLE = P_IC_VISIBLE,
	IC_ATIVO = P_IC_ATIVO

    WHERE
    CD_ELO_SCREEN_LAYOUT = V_CD_ELO_SCREEN_LAYOUT
	AND CD_USUARIO = P_CD_USUARIO;
    COMMIT;
            EXCEPTION
        WHEN OTHERS THEN
            BEGIN
            V_TRAVA:='S';
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOUPDSCREEN - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

           END;
    END;


    END IF;

    END IF;

    OPEN P_RETORNO FOR
    SELECT CASE WHEN V_TRAVA = 'N' THEN 1 ELSE 0 END  AS P_SUCESSO
    FROM DUAL;       


    END PU_SCREEN_LAYOUT;



   PROCEDURE PU_SCREEN_LAYOUT_COLUMN(

		P_CD_ELO_SCREEN_LAYOUT_COLUMN IN VND.ELO_SCREEN_LAYOUT_COLUMN.CD_ELO_SCREEN_LAYOUT_COLUMN%TYPE,
		P_CD_ELO_SCREEN_COLUMN   IN VND.ELO_SCREEN_LAYOUT_COLUMN.CD_ELO_SCREEN_COLUMN%TYPE,
		P_CD_ELO_SCREEN_LAYOUT	IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE,
		P_NO_SCREEN             IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_CD_ELO_SCREEN			IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN%TYPE,
		P_NO_SCREEN_LAYOUT      IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,
		P_CD_USUARIO			IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_COLUMN				IN VND.ELO_SCREEN_LAYOUT_COLUMN.NO_COLUMN%TYPE,
		P_NU_ORDER 				IN VND.ELO_SCREEN_LAYOUT_COLUMN.NU_ORDER%TYPE,
		P_IC_VISIBLE			IN VND.ELO_SCREEN_LAYOUT_COLUMN.IC_VISIBLE%TYPE,
		P_IC_ATIVO				IN VND.ELO_SCREEN_LAYOUT_COLUMN.IC_ATIVO%TYPE,	

        P_RETORNO                    OUT T_CURSOR)		


    AS

    V_TRAVA VARCHAR2(1):='N';
    V_CD_ELO_SCREEN_LAYOUT               VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE;
	V_CD_ELO_SCREEN               		VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN%TYPE;
	V_CD_ELO_SCREEN_LAYOUT_COLUMN  	VND.ELO_SCREEN_LAYOUT_COLUMN.CD_ELO_SCREEN_LAYOUT_COLUMN%TYPE;


   BEGIN

    IF NVL(P_CD_ELO_SCREEN_LAYOUT, 0) = 0 THEN 

    BEGIN 
        SELECT E_LAY.CD_ELO_SCREEN_LAYOUT INTO V_CD_ELO_SCREEN_LAYOUT
        FROM VND.ELO_SCREEN_LAYOUT E_LAY
		INNER JOIN VND.ELO_SCREEN ESC 
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
        WHERE (ESC.NO_SCREEN = P_NO_SCREEN )
		AND  (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT )
		AND E_LAY.CD_USUARIO = P_CD_USUARIO
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN_LAYOUT:=P_CD_ELO_SCREEN_LAYOUT;

    END IF;

    IF NVL(P_CD_ELO_SCREEN, 0) = 0 THEN 

    BEGIN 
        SELECT E_LAY.CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
        FROM VND.ELO_SCREEN_LAYOUT E_LAY
		INNER JOIN VND.ELO_SCREEN ESC 
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
        WHERE (ESC.NO_SCREEN = P_NO_SCREEN )
		AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT )
		AND E_LAY.CD_USUARIO = P_CD_USUARIO
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN:=P_CD_ELO_SCREEN;

    END IF;	


    IF NVL(P_CD_ELO_SCREEN_LAYOUT_COLUMN, 0) = 0 THEN 

    BEGIN 
        SELECT E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN INTO V_CD_ELO_SCREEN_LAYOUT_COLUMN
        FROM VND.ELO_SCREEN_LAYOUT E_LAY
		INNER JOIN VND.ELO_SCREEN ESC 
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
		INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
		ON E_LAY.CD_ELO_SCREEN_LAYOUT = E_LC.CD_ELO_SCREEN_LAYOUT
        WHERE (ESC.NO_SCREEN = P_NO_SCREEN )
		AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT )
		AND ((P_NO_COLUMN IS NULL AND P_CD_ELO_SCREEN_COLUMN IS NOT NULL ) OR 
		(P_NO_COLUMN IS NOT NULL AND P_CD_ELO_SCREEN_COLUMN IS NULL ))
		AND 
		((P_NO_COLUMN IS NULL OR E_LC.NO_COLUMN = P_NO_COLUMN) OR 
		(P_CD_ELO_SCREEN_COLUMN IS NULL OR  E_LC.CD_ELO_SCREEN_COLUMN = P_CD_ELO_SCREEN_COLUMN))


		AND E_LAY.CD_USUARIO = P_CD_USUARIO
        AND ROWNUM = 1;
     EXCEPTION
        WHEN NO_DATA_FOUND THEN 
            V_TRAVA:='S';
        WHEN OTHERS THEN 

        BEGIN
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADONOS - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

            V_TRAVA:='S';
            END;

    END;

    ELSE 
        V_CD_ELO_SCREEN_LAYOUT_COLUMN:=P_CD_ELO_SCREEN_LAYOUT_COLUMN;

    END IF;	


    IF V_TRAVA = 'N' THEN          

    IF NVL(V_CD_ELO_SCREEN_LAYOUT_COLUMN, 0) = 0 THEN 
    BEGIN

       INSERT INTO VND.ELO_SCREEN_LAYOUT_COLUMN
         ( 
			CD_ELO_SCREEN_LAYOUT_COLUMN ,
			CD_ELO_SCREEN        ,
			CD_ELO_SCREEN_LAYOUT  ,
			CD_ELO_SCREEN_COLUMN , 
			NO_COLUMN,
			NU_ORDER,
			IC_VISIBLE,
			IC_ATIVO
           )
            VALUES ( 
            VND.SEQ_ELO_SCREEN_LAYOUT_COLUMN.NEXTVAL, 
			V_CD_ELO_SCREEN,
			V_CD_ELO_SCREEN_LAYOUT,
			P_CD_ELO_SCREEN_COLUMN,
			P_NO_COLUMN,
			P_NU_ORDER,
			'S', --IC_VISIBLE
			'S' --IC_ATIVO

            );
        COMMIT;

        EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                    -20001,
                    'ERRO ENCONTRADOINSSCREN - '
                     || SQLCODE
                     || ' -ERROR- '
                     || SQLERRM
                );

               END;
        END;


    ELSE
    BEGIN
    UPDATE VND.ELO_SCREEN_LAYOUT_COLUMN
    SET 
    NU_ORDER = P_NU_ORDER ,
	IC_VISIBLE = P_IC_VISIBLE,
	IC_ATIVO = P_IC_ATIVO

    WHERE
    CD_ELO_SCREEN_LAYOUT_COLUMN = V_CD_ELO_SCREEN_LAYOUT_COLUMN
	AND CD_ELO_SCREEN_LAYOUT = V_CD_ELO_SCREEN_LAYOUT;

    COMMIT;
            EXCEPTION
        WHEN OTHERS THEN
            BEGIN
            V_TRAVA:='S';
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOUPDSCREEN - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

           END;
    END;


    END IF;

    END IF;

    OPEN P_RETORNO FOR
    SELECT CASE WHEN V_TRAVA = 'N' THEN 1 ELSE 0 END  AS P_SUCESSO
    FROM DUAL;       


    END PU_SCREEN_LAYOUT_COLUMN;




   PROCEDURE PX_GET_SCREEN(
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    BEGIN

    OPEN P_RETORNO FOR
    SELECT  
    CD_ELO_SCREEN,
    NO_SCREEN,
    DS_SCREEN
    FROM VND.ELO_SCREEN 
    WHERE
    (NVL(P_CD_ELO_SCREEN, 0) = 0  OR CD_ELO_SCREEN = P_CD_ELO_SCREEN);

    END PX_GET_SCREEN;    

   PROCEDURE PX_GET_SCREEN(
        P_NO_SCREEN              IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    CD_ELO_SCREEN,
    NO_SCREEN,
    DS_SCREEN
    FROM VND.ELO_SCREEN 
    WHERE
    NO_SCREEN = P_NO_SCREEN;
    END PX_GET_SCREEN;   

   PROCEDURE PX_GET_SCREEN(
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    CD_ELO_SCREEN,
    NO_SCREEN,
    DS_SCREEN
    FROM VND.ELO_SCREEN ;

    END PX_GET_SCREEN;     



   PROCEDURE PX_GET_SCREEN_COLUMN(
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
		P_CD_ELO_SCREEN_COLUMN		 IN VND.ELO_SCREEN_COLUMN.CD_ELO_SCREEN_COLUMN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    BEGIN

    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_COL.CD_ELO_SCREEN_COLUMN,
	E_COL.NO_COLUMN,
	E_COL.NU_ORDER,
	E_COL.IC_MANDATORY,
    E_COL.NO_ALIAS_COLUMN

    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
	ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN
    WHERE
    E_COL.CD_ELO_SCREEN = P_CD_ELO_SCREEN
	AND E_COL.CD_ELO_SCREEN_COLUMN = P_CD_ELO_SCREEN_COLUMN;

    END PX_GET_SCREEN_COLUMN;    

   PROCEDURE PX_GET_SCREEN_COLUMN(
		P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
        P_NO_SCREEN              	IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_NO_COLUMN		 			IN VND.ELO_SCREEN_COLUMN.NO_COLUMN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

	V_CD_ELO_SCREEN               VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE;
    BEGIN

	IF NVL(P_CD_ELO_SCREEN, 0) = 0 THEN 
	BEGIN 
	SELECT CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
	FROM VND.ELO_SCREEN 
	WHERE 
	NO_SCREEN = P_NO_SCREEN;
	EXCEPTION 
	WHEN NO_DATA_FOUND THEN 
		V_CD_ELO_SCREEN:= 0;
	WHEN OTHERS THEN 
		V_CD_ELO_SCREEN:= 0; 
	END;

	ELSE
	V_CD_ELO_SCREEN:= P_CD_ELO_SCREEN;
	END IF;


    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_COL.CD_ELO_SCREEN_COLUMN,
	E_COL.NO_COLUMN,
	E_COL.NU_ORDER,
	E_COL.IC_MANDATORY	, 
    E_COL.NO_ALIAS_COLUMN
    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
	ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN	
    WHERE
    ESC.CD_ELO_SCREEN = V_CD_ELO_SCREEN
	AND NO_COLUMN = P_NO_COLUMN
	;
    END PX_GET_SCREEN_COLUMN;   

   PROCEDURE PX_GET_SCREEN_COLUMN(
		P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
        P_NO_SCREEN              	IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

	V_CD_ELO_SCREEN               VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE;
    BEGIN

	IF NVL(P_CD_ELO_SCREEN, 0) = 0 THEN 
	BEGIN 
	SELECT CD_ELO_SCREEN INTO V_CD_ELO_SCREEN
	FROM VND.ELO_SCREEN 
	WHERE 
	NO_SCREEN = P_NO_SCREEN;
	EXCEPTION 
	WHEN NO_DATA_FOUND THEN 
		V_CD_ELO_SCREEN:= 0;
	WHEN OTHERS THEN 
		V_CD_ELO_SCREEN:= 0; 
	END;

	ELSE
	V_CD_ELO_SCREEN:= P_CD_ELO_SCREEN;
	END IF;


    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_COL.CD_ELO_SCREEN_COLUMN,
	E_COL.NO_COLUMN,
	E_COL.NU_ORDER,
	E_COL.IC_MANDATORY,	
    E_COL.NO_ALIAS_COLUMN
    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
	ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN	
    WHERE
    ESC.CD_ELO_SCREEN = V_CD_ELO_SCREEN;
    END PX_GET_SCREEN_COLUMN;  	


   PROCEDURE PX_GET_SCREEN_COLUMN(
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_COL.CD_ELO_SCREEN_COLUMN,
	E_COL.NO_COLUMN,
	E_COL.NU_ORDER,
	E_COL.IC_MANDATORY,
    E_COL.NO_ALIAS_COLUMN
    FROM VND.ELO_SCREEN ESC 
	INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
	ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN;

    END PX_GET_SCREEN_COLUMN;     



   PROCEDURE PX_GET_SCREEN_LAYOUT(
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_SCREEN_LAYOUT			 IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    BEGIN

    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LAY.IC_VISIBLE,
	E_LAY.IC_ATIVO


    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
    WHERE
	E_LAY.IC_ATIVO = 'S'
    AND (NVL(P_CD_ELO_SCREEN, 0) = 0  OR E_LAY.CD_ELO_SCREEN = P_CD_ELO_SCREEN)
	AND (P_CD_USUARIO IS NULL OR E_LAY.CD_USUARIO = P_CD_USUARIO)
	AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT);

    END PX_GET_SCREEN_LAYOUT;    

   PROCEDURE PX_GET_SCREEN_LAYOUT(
        P_NO_SCREEN              IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_SCREEN_LAYOUT			 IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,		
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LAY.IC_VISIBLE,
	E_LAY.IC_ATIVO


    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
    WHERE
	E_LAY.IC_ATIVO = 'S'
	AND (P_CD_USUARIO IS NULL OR E_LAY.CD_USUARIO = P_CD_USUARIO)
	AND (NVL(P_NO_SCREEN_LAYOUT, '0') = '0' OR E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT)
    AND ESC.NO_SCREEN = P_NO_SCREEN;

    END PX_GET_SCREEN_LAYOUT; 


   PROCEDURE PX_GET_SCREEN_LAYOUT(
        P_NO_SCREEN              IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LAY.IC_VISIBLE,
	E_LAY.IC_ATIVO


    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
    WHERE
	E_LAY.IC_ATIVO = 'S'
	AND (NVL(P_CD_USUARIO, 0) = 0 OR E_LAY.CD_USUARIO = P_CD_USUARIO)
    AND ESC.NO_SCREEN = P_NO_SCREEN;

    END PX_GET_SCREEN_LAYOUT;   




   PROCEDURE PX_GET_SCREEN_LAYOUT(
 		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LAY.IC_VISIBLE,
	E_LAY.IC_ATIVO


    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
    WHERE
	E_LAY.IC_ATIVO = 'S'
	AND (E_LAY.CD_USUARIO = P_CD_USUARIO);



    END PX_GET_SCREEN_LAYOUT;  


   PROCEDURE PX_GET_SCREEN_LAYOUT(
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LAY.IC_VISIBLE,
	E_LAY.IC_ATIVO


    FROM VND.ELO_SCREEN ESC
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
    WHERE
	E_LAY.IC_ATIVO = 'S';

    END PX_GET_SCREEN_LAYOUT;      


   PROCEDURE PX_GET_SCREEN_LAYOUT_COLUMN(
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_SCREEN_LAYOUT			 IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,		
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN,
	E_LC.CD_ELO_SCREEN_COLUMN,
	E_LC.NO_COLUMN,
	E_LC.NU_ORDER,
	E_LC.IC_VISIBLE,
	E_LC.IC_ATIVO,
    E_COL.NO_ALIAS_COLUMN	

    FROM VND.ELO_SCREEN ESC
    INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
    ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN    
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
	ON E_LC.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
    AND E_COL.CD_ELO_SCREEN_COLUMN = E_LC.CD_ELO_SCREEN_COLUMN

    WHERE
	E_LAY.IC_ATIVO = 'S'
	--AND E_COL.IC_ATIVO = 'S'
    AND ESC.CD_ELO_SCREEN = P_CD_ELO_SCREEN
	AND (P_CD_USUARIO IS NULL OR E_LAY.CD_USUARIO = P_CD_USUARIO)
	AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT);

    END PX_GET_SCREEN_LAYOUT_COLUMN;   


   PROCEDURE PX_GET_SCREEN_LAYOUT_COLUMN(
        P_CD_ELO_SCREEN              IN VND.ELO_SCREEN.CD_ELO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_SCREEN_LAYOUT			 IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,
		P_NO_COLUMN					 IN VND.ELO_SCREEN_LAYOUT_COLUMN.NO_COLUMN%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    BEGIN

    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN,
	E_LC.CD_ELO_SCREEN_COLUMN,
	E_LC.NO_COLUMN,
	E_LC.NU_ORDER,
	E_LC.IC_VISIBLE,
	E_LC.IC_ATIVO, 
    E_COL.NO_ALIAS_COLUMN



    FROM VND.ELO_SCREEN ESC
    INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
    ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
	ON E_LC.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
    AND E_COL.CD_ELO_SCREEN_COLUMN = E_LC.CD_ELO_SCREEN_COLUMN

    WHERE
	E_LAY.IC_ATIVO = 'S'
	--AND E_COL.IC_ATIVO = 'S'
    AND (NVL(P_CD_ELO_SCREEN, 0) = 0  OR E_LAY.CD_ELO_SCREEN = P_CD_ELO_SCREEN)
	AND (P_CD_USUARIO IS NULL OR E_LAY.CD_USUARIO = P_CD_USUARIO)
	AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT)
	AND (E_LC.NO_COLUMN = P_NO_COLUMN);

    END PX_GET_SCREEN_LAYOUT_COLUMN;    

   PROCEDURE PX_GET_SCREEN_LAYOUT_COLUMN(
        P_NO_SCREEN              IN VND.ELO_SCREEN.NO_SCREEN%TYPE,
		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
		P_NO_SCREEN_LAYOUT			 IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,		
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN,
	E_LC.CD_ELO_SCREEN_COLUMN,
	E_LC.NO_COLUMN,
	E_LC.NU_ORDER,
	E_LC.IC_VISIBLE,
	E_LC.IC_ATIVO,
    E_COL.NO_ALIAS_COLUMN	

    FROM VND.ELO_SCREEN ESC
    INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
    ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN    
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
	ON E_LC.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
    AND E_COL.CD_ELO_SCREEN_COLUMN = E_LC.CD_ELO_SCREEN_COLUMN

    WHERE
	E_LAY.IC_ATIVO = 'S'
	--AND E_COL.IC_ATIVO = 'S'
    AND (NVL(P_NO_SCREEN, '0') = '0'  OR ESC.NO_SCREEN = P_NO_SCREEN)
	AND (P_CD_USUARIO IS NULL OR E_LAY.CD_USUARIO = P_CD_USUARIO)
	AND (E_LAY.NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT);

    END PX_GET_SCREEN_LAYOUT_COLUMN;   

   PROCEDURE PX_GET_SCREEN_LAYOUT_COLUMN(
 		P_CD_USUARIO				 IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN,
	E_LC.CD_ELO_SCREEN_COLUMN,
	E_LC.NO_COLUMN,
	E_LC.NU_ORDER,
	E_LC.IC_VISIBLE,
	E_LC.IC_ATIVO,
    E_COL.NO_ALIAS_COLUMN	

    FROM VND.ELO_SCREEN ESC
    INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
    ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
	ON E_LC.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
    AND E_COL.CD_ELO_SCREEN_COLUMN = E_LC.CD_ELO_SCREEN_COLUMN    

    WHERE
	E_LAY.IC_ATIVO = 'S'
	--AND E_COL.IC_ATIVO = 'S'
	AND ( E_LAY.CD_USUARIO = P_CD_USUARIO);


    END PX_GET_SCREEN_LAYOUT_COLUMN;  


   PROCEDURE PX_GET_SCREEN_LAYOUT_COLUMN(
        P_RETORNO                    OUT T_CURSOR)

    AS
    BEGIN
    OPEN P_RETORNO FOR
    SELECT  
    ESC.CD_ELO_SCREEN,
    ESC.NO_SCREEN,
    ESC.DS_SCREEN,
	E_LAY.CD_ELO_SCREEN_LAYOUT,
	E_LAY.NO_SCREEN_LAYOUT,
	E_LAY.CD_USUARIO,
	E_LC.CD_ELO_SCREEN_LAYOUT_COLUMN,
	E_LC.CD_ELO_SCREEN_COLUMN,
	E_LC.NO_COLUMN,
	E_LC.NU_ORDER,
	E_LC.IC_VISIBLE,
	E_LC.IC_ATIVO,
    E_COL.NO_ALIAS_COLUMN	

    FROM VND.ELO_SCREEN ESC
    INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
    ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
	ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
	INNER JOIN VND.ELO_SCREEN_LAYOUT_COLUMN E_LC
	ON E_LC.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
    AND E_COL.CD_ELO_SCREEN_COLUMN = E_LC.CD_ELO_SCREEN_COLUMN

    WHERE
	E_LAY.IC_ATIVO = 'S';
	--AND E_COL.IC_ATIVO = 'S';


    END PX_GET_SCREEN_LAYOUT_COLUMN;     




   PROCEDURE PI_CROSS_SCREEN_LAYOUT(

		P_CD_ELO_SCREEN			IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN%TYPE,
		P_NO_SCREEN_LAYOUT		IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,
		P_CD_USUARIO			IN VND.ELO_SCREEN_LAYOUT.CD_USUARIO%TYPE,
        P_RETORNO                    OUT T_CURSOR)

    AS

    V_TRAVA VARCHAR2(1):='N';
	V_CD_ELO_SCREEN_LAYOUT  VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE;
    V_NO_SCREEN  VARCHAR2(1):='I';

	BEGIN

    IF P_NO_SCREEN_LAYOUT IS NOT NULL AND P_CD_ELO_SCREEN > 0  THEN 

	BEGIN

        BEGIN
        SELECT 'U' INTO V_NO_SCREEN FROM VND.ELO_SCREEN_LAYOUT
        WHERE 
        NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT;

        EXCEPTION
        WHEN NO_DATA_FOUND THEN 
        V_NO_SCREEN:= 'I';
        WHEN OTHERS THEN
			BEGIN
			V_TRAVA:='S';
			RAISE_APPLICATION_ERROR(
			-20001,
			'ERRO ENCONTRADONOSCREEN - '
			|| SQLCODE
			|| ' -ERROR- '
			|| SQLERRM
			);

			END;


        END;

        IF NVL(V_NO_SCREEN, 'I') = 'I' THEN 
            BEGIN 


            SELECT 	VND.SEQ_ELO_SCREEN_LAYOUT.NEXTVAL INTO V_CD_ELO_SCREEN_LAYOUT
            FROM DUAL;


            BEGIN
            INSERT INTO VND.ELO_SCREEN_LAYOUT
            ( 
            CD_ELO_SCREEN_LAYOUT,
            CD_ELO_SCREEN,
            NO_SCREEN_LAYOUT,
            CD_USUARIO,
            IC_VISIBLE,
            IC_ATIVO
            )

            SELECT 
            V_CD_ELO_SCREEN_LAYOUT CD_ELO_SCREEN_LAYOUT, 
            P_CD_ELO_SCREEN CD_ELO_SCREEN,
            P_NO_SCREEN_LAYOUT NO_SCREEN_LAYOUT,
            P_CD_USUARIO,
            'S' IC_VISIBLE, 
            'S' IC_ATIVO
            FROM VND.ELO_SCREEN
            WHERE 
            CD_ELO_SCREEN = P_CD_ELO_SCREEN;
            COMMIT;

            EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOINSSCREN - '
                || SQLCODE
                || ' -ERROR- '
                || SQLERRM
                );

                END;
            END;
        END;
    END IF;
    END;

	ELSE

		V_TRAVA:= 'S';
    END IF;


	IF V_TRAVA = 'N' THEN 

		BEGIN 

       INSERT INTO VND.ELO_SCREEN_LAYOUT_COLUMN
         ( 
			CD_ELO_SCREEN_LAYOUT_COLUMN ,
			CD_ELO_SCREEN        ,
			CD_ELO_SCREEN_LAYOUT  ,
			CD_ELO_SCREEN_COLUMN , 
			NO_COLUMN,
			NU_ORDER,
			IC_VISIBLE,
			IC_ATIVO
           )
		SELECT  
		VND.SEQ_ELO_SCREEN_LAYOUT_COLUMN.NEXTVAL CD_ELO_SCREEN_LAYOUT_COLUMN, 
		ESC.CD_ELO_SCREEN,
		E_LAY.CD_ELO_SCREEN_LAYOUT,
		E_COL.CD_ELO_SCREEN_COLUMN,
		E_COL.NO_COLUMN,
		E_COL.NU_ORDER,
		'S' IC_VISIBLE,
		'S' IC_ATIVO
		FROM VND.ELO_SCREEN ESC
		INNER JOIN VND.ELO_SCREEN_COLUMN E_COL
		ON ESC.CD_ELO_SCREEN = E_COL.CD_ELO_SCREEN
		INNER JOIN VND.ELO_SCREEN_LAYOUT E_LAY
		ON ESC.CD_ELO_SCREEN = E_LAY.CD_ELO_SCREEN
		LEFT JOIN VND.ELO_SCREEN_LAYOUT_COLUMN NEWS
		ON 
		NEWS.CD_ELO_SCREEN_LAYOUT = E_LAY.CD_ELO_SCREEN_LAYOUT
		AND NEWS.NO_COLUMN = E_COL.NO_COLUMN

		WHERE
		E_LAY.IC_ATIVO = 'S'
        AND ESC.CD_ELO_SCREEN = P_CD_ELO_SCREEN  
		AND E_LAY.CD_ELO_SCREEN_LAYOUT = V_CD_ELO_SCREEN_LAYOUT	
		AND NEWS.CD_ELO_SCREEN_LAYOUT IS NULL;

        COMMIT;

        EXCEPTION
            WHEN OTHERS THEN
                BEGIN
                V_TRAVA:='S';
                RAISE_APPLICATION_ERROR(
                    -20001,
                    'ERRO ENCONTRADOINSSCREN - '
                     || SQLCODE
                     || ' -ERROR- '
                     || SQLERRM
                );

               END;
        END;	


	END IF;


    OPEN P_RETORNO FOR
    SELECT CASE WHEN V_TRAVA = 'N' THEN 1 ELSE 0 END  AS P_SUCESSO
    FROM DUAL;       


    END PI_CROSS_SCREEN_LAYOUT;



   PROCEDURE PU_NO_SCREEN_LAYOUT(

		P_CD_ELO_SCREEN_LAYOUT	IN VND.ELO_SCREEN_LAYOUT.CD_ELO_SCREEN_LAYOUT%TYPE,
		P_NO_SCREEN_LAYOUT      IN VND.ELO_SCREEN_LAYOUT.NO_SCREEN_LAYOUT%TYPE,

        P_RETORNO                    OUT T_CURSOR)

    AS

    V_TRAVA VARCHAR2(1):='N';

   BEGIN


   BEGIN
    UPDATE VND.ELO_SCREEN_LAYOUT
    SET 
    NO_SCREEN_LAYOUT = P_NO_SCREEN_LAYOUT 

    WHERE
    CD_ELO_SCREEN_LAYOUT = P_CD_ELO_SCREEN_LAYOUT;
    COMMIT;
            EXCEPTION
        WHEN OTHERS THEN
            BEGIN
            V_TRAVA:='S';
            RAISE_APPLICATION_ERROR(
                -20001,
                'ERRO ENCONTRADOUPDSCREEN - '
                 || SQLCODE
                 || ' -ERROR- '
                 || SQLERRM
            );

           END;
    END;


    OPEN P_RETORNO FOR
    SELECT CASE WHEN V_TRAVA = 'N' THEN 1 ELSE 0 END  AS P_SUCESSO
    FROM DUAL;       


    END PU_NO_SCREEN_LAYOUT;



END GX_ELO_SCREEN;
/