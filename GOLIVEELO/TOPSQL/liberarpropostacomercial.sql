
DECLARE 

CURSOR C_WHO_UPDATE IS 
WITH AGENDAMENTO AS 
(

SELECT AGE.CD_ELO_AGENDAMENTO, AGE.CD_WEEK, AGE.CD_POLO, AGE.CD_MACHINE, AGE.CD_CENTRO_EXPEDIDOR, 
AGE.CD_ELO_STATUS
FROM VND.ELO_AGENDAMENTO AGE
WHERE 
AGE.IC_ATIVO = 'S'

AND AGE.CD_ELO_STATUS IN (6,7,8 )  
),
--select * from AGENDAMENTO

CTE_CARTEIRA AS 
(
SELECT 

CT.CD_ELO_CARTEIRA ,
CT.NU_CONTRATO_SAP, 
CT.NU_ORDEM_VENDA,
CT.CD_ITEM_CONTRATO,
CT.CD_ELO_AGENDAMENTO_ITEM,
CT.QT_AGENDADA_CONFIRMADA,
CT.CD_STATUS_CEL_FINAL,
CT.CD_ELO_AGENDAMENTO,
AG.CD_ELO_STATUS,
CT.CD_TIPO_AGENDAMENTO, 
CT.CD_STATUS_REPLAN

FROM VND.ELO_CARTEIRA CT
INNER JOIN AGENDAMENTO AG
ON 
AG.CD_ELO_AGENDAMENTO = CT.CD_ELO_AGENDAMENTO
WHERE 
CT.IC_ATIVO = 'S'
AND CT.IC_COOPERATIVE = 'S'

AND NVL(CT.QT_AGENDADA_CONFIRMADA,0) >= 0
AND NOT(NVL(CT.CD_STATUS_CEL_FINAL, 62) = 59)
AND ( CT.CD_TIPO_AGENDAMENTO IN (22,23,24) 
        OR (CT.CD_TIPO_AGENDAMENTO = 25 AND NVL(CT.CD_STATUS_REPLAN, 34) IN ( 33, 34))
        OR (CT.CD_TIPO_AGENDAMENTO = 25 AND CT.CD_STATUS_REPLAN = 32 AND CT.CD_STATUS_CEL_FINAL <> 59  )
        OR (CT.CD_TIPO_AGENDAMENTO = 25 AND CT.CD_STATUS_REPLAN = 32 AND CT.CD_STATUS_CEL_FINAL = 59 and NVL(CT.QT_AGENDADA_CONFIRMADA,0) = 0  )
        OR (CT.CD_TIPO_AGENDAMENTO IS NULL 
        AND EXISTS (SELECT 1 FROM VND.VW_ELO_AGENDAMENTO_ITEM_ADICAO IIS WHERE IIS.CD_ELO_AGENDAMENTO_ITEM = CT.CD_ELO_AGENDAMENTO_ITEM))
        OR (CT.CD_TIPO_AGENDAMENTO IS NULL 
        AND EXISTS (SELECT 1 FROM VND.ELO_CARTEIRA_HIST IIS WHERE IIS.CD_ELO_CARTEIRA = CT.CD_ELO_CARTEIRA AND IIS.CD_TIPO_AGENDAMENTO IS NOT NULL ))

)
)
--SELECT DISTINCT GD.NU_CONTRATO_SAP, CTR.DH_ULT_INTERFACE FROM CTE_CONTRATO_PEDIDOS GD

SELECT 

CT.CD_ELO_CARTEIRA ,
CT.NU_CONTRATO_SAP, 
CT.NU_ORDEM_VENDA,
CT.CD_ITEM_CONTRATO,
CT.CD_ELO_AGENDAMENTO_ITEM,
CT.QT_AGENDADA_CONFIRMADA,
CT.CD_STATUS_CEL_FINAL,
CT.CD_ELO_AGENDAMENTO,
CT.CD_ELO_STATUS,
CT.CD_TIPO_AGENDAMENTO, 
CT.CD_STATUS_REPLAN

FROM CTE_CARTEIRA CT

;


V_LIMIT NUMBER:=800;
V_QUANTITYCART NUMBER:=800;


TYPE ELO_CARTEIRA_r IS RECORD
(


CD_ELO_CARTEIRA  VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
NU_CONTRATO_SAP  VND.ELO_CARTEIRA.NU_CONTRATO_SAP%TYPE, 
NU_ORDEM_VENDA VND.ELO_CARTEIRA.NU_ORDEM_VENDA%TYPE,
CD_ITEM_CONTRATO VND.ELO_CARTEIRA.CD_ITEM_CONTRATO%TYPE,
CD_ELO_AGENDAMENTO_ITEM VND.ELO_CARTEIRA.CD_ELO_AGENDAMENTO_ITEM%TYPE,
QT_AGENDADA_CONFIRMADA VND.ELO_CARTEIRA.QT_AGENDADA_CONFIRMADA%TYPE,
CD_STATUS_CEL_FINAL VND.ELO_CARTEIRA.CD_STATUS_CEL_FINAL%TYPE,
CD_ELO_AGENDAMENTO VND.ELO_CARTEIRA.CD_ELO_AGENDAMENTO%TYPE,
CD_ELO_STATUS VND.ELO_AGENDAMENTO.CD_ELO_STATUS%TYPE,
CD_TIPO_AGENDAMENTO VND.ELO_CARTEIRA.CD_TIPO_AGENDAMENTO%TYPE,
CD_STATUS_REPLAN VND.ELO_CARTEIRA.CD_STATUS_REPLAN%TYPE

); 

TYPE ELO_CARTEIRA_t IS TABLE OF ELO_CARTEIRA_r
INDEX BY PLS_INTEGER;
tof_ELO_CARTEIRA ELO_CARTEIRA_t;

tof_ELO_ITEM ELO_CARTEIRA_t;


CURSOR C_GROUP_LIBERADO (PI_AGENDAMENTO_ITEM VND.ELO_AGENDAMENTO_WEEK.CD_ELO_AGENDAMENTO_ITEM%TYPE,
                          PI_CD_ELO_CARTEIRA VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE) IS 
SELECT 
DISTINCT FF.CD_ELO_AGENDAMENTO_WEEK, FF.NU_DOCUMENTO, FF.CD_ELO_AGENDAMENTO_GROUPING, 
FF.CD_ELO_VBAK_PROTOCOLO , FF.CD_ELO_CARTEIRA , FF.CD_ELO_AGENDAMENTO_ITEM, 0 ID
FROM (


--TODOS OS CENÁRIOS SO TEM CARTEIRA EXCLUSIVA COM VOLUME TOTALMENTE CORTADO

--CENARIO 1 TEM AGENDAMENTO GROUPING COM VALORES E PROTOCOLOS COM VALORES 
SELECT  GRP.CD_ELO_AGENDAMENTO_WEEK, GRP.NU_DOCUMENTO, GRP.CD_ELO_AGENDAMENTO_GROUPING, 
PROTO.CD_ELO_VBAK_PROTOCOLO , PROTO.CD_ELO_CARTEIRA , EC.CD_ELO_AGENDAMENTO_ITEM 

FROM VND.ELO_AGENDAMENTO_WEEK WWE 
INNER JOIN VND.ELO_AGENDAMENTO_GROUPING GRP
ON WWE.CD_ELO_AGENDAMENTO_WEEK = GRP.CD_ELO_AGENDAMENTO_WEEK
INNER JOIN VND.ELO_CARTEIRA EC
ON EC.CD_ELO_AGENDAMENTO_ITEM = WWE.CD_ELO_AGENDAMENTO_ITEM 
INNER JOIN VND.ELO_VBAK_PROTOCOLO PROTO
ON EC.CD_ELO_CARTEIRA = PROTO.CD_ELO_CARTEIRA 
WHERE WWE.CD_ELO_AGENDAMENTO_ITEM = PI_AGENDAMENTO_ITEM
AND EC.CD_ELO_CARTEIRA = PI_CD_ELO_CARTEIRA
AND WWE.QT_SEMANA  > 0
AND PROTO.QT_AGENDADA_PROTOCOLO > 0
AND PROTO.IC_ATIVO = 'S'
AND EC.IC_ATIVO = 'S'
AND GRP.NU_DOCUMENTO = PROTO.NU_PROTOCOLO
AND GRP.SG_TIPO_DOCUMENTO = 'P'
AND GRP.QT_AGENDADA > 0 

UNION 
--CENARIO 2 TEM AGENDAMENTO GROUPING COM VALORES E PROTOCOLOS COM VALORES 
--MAS SEM NAO TEM AGENDAMENTO WEEK OR NAO TEM VBAK PROTOCOLO 
SELECT  GRP.CD_ELO_AGENDAMENTO_WEEK, GRP.NU_DOCUMENTO, GRP.CD_ELO_AGENDAMENTO_GROUPING,
nvl(PROTO.CD_ELO_VBAK_PROTOCOLO,0) CD_ELO_VBAK_PROTOCOLO , 
nvl(PROTO.CD_ELO_CARTEIRA,0) CD_ELO_CARTEIRA, EC.CD_ELO_AGENDAMENTO_ITEM

 
FROM VND.ELO_AGENDAMENTO_WEEK WWE 
INNER JOIN VND.ELO_AGENDAMENTO_GROUPING GRP
ON WWE.CD_ELO_AGENDAMENTO_WEEK = GRP.CD_ELO_AGENDAMENTO_WEEK
INNER JOIN VND.ELO_CARTEIRA EC
ON EC.CD_ELO_AGENDAMENTO_ITEM = WWE.CD_ELO_AGENDAMENTO_ITEM 
LEFT JOIN VND.ELO_VBAK_PROTOCOLO PROTO
ON EC.CD_ELO_CARTEIRA = PROTO.CD_ELO_CARTEIRA 
WHERE WWE.CD_ELO_AGENDAMENTO_ITEM = PI_AGENDAMENTO_ITEM
AND EC.CD_ELO_CARTEIRA = PI_CD_ELO_CARTEIRA
AND NVL(WWE.QT_SEMANA,0)  >= 0
AND NVL(PROTO.QT_AGENDADA_PROTOCOLO,0) >=0
AND NVL(PROTO.IC_ATIVO,'S') = 'S'
AND EC.IC_ATIVO = 'S'
AND GRP.NU_DOCUMENTO = NVL(PROTO.NU_PROTOCOLO, GRP.NU_DOCUMENTO)
AND GRP.SG_TIPO_DOCUMENTO = 'P'
AND GRP.QT_AGENDADA > 0
) FF            
;

TYPE ELO_GROUPING_r IS RECORD
(


CD_ELO_AGENDAMENTO_WEEK  VND.ELO_AGENDAMENTO_GROUPING.CD_ELO_AGENDAMENTO_WEEK%TYPE,
NU_DOCUMENTO  VND.ELO_AGENDAMENTO_GROUPING.NU_DOCUMENTO%TYPE, 
CD_ELO_AGENDAMENTO_GROUPING VND.ELO_AGENDAMENTO_GROUPING.CD_ELO_AGENDAMENTO_GROUPING%TYPE,
CD_ELO_VBAK_PROTOCOLO VND.ELO_VBAK_PROTOCOLO.CD_ELO_VBAK_PROTOCOLO%TYPE,
CD_ELO_CARTEIRA VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE,
CD_ELO_AGENDAMENTO_ITEM VND.ELO_CARTEIRA.CD_ELO_AGENDAMENTO_ITEM%TYPE,
ID NUMBER
); 

TYPE ELO_GROUPING_T IS TABLE OF ELO_GROUPING_r
INDEX BY PLS_INTEGER;
tof_ELO_GROUPING ELO_GROUPING_T;

tof_ELO_GROUPING_ALL ELO_GROUPING_T;


V_ID NUMBER:=0;


BEGIN

    
BEGIN


    BEGIN 
    OPEN    C_WHO_UPDATE;                               
    FETCH   C_WHO_UPDATE BULK COLLECT INTO tof_ELO_CARTEIRA LIMIT V_LIMIT;
    CLOSE   C_WHO_UPDATE;
    EXCEPTION  
    WHEN OTHERS THEN 
    BEGIN
    RAISE_APPLICATION_ERROR(-20001, 'ERRO ENCONTRADO: GX_ELO_BATCH_ISSUE.303 - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
    --ROLLBACK;
    END;
    
    END;
    
    V_ID:=1;
    
    
	IF tof_ELO_CARTEIRA.COUNT > 0 THEN 
	BEGIN 
		FOR i_cart in tof_ELO_CARTEIRA.FIRST .. tof_ELO_CARTEIRA.LAST
		LOOP
           
          
            if nvl(tof_ELO_CARTEIRA(i_cart).QT_AGENDADA_CONFIRMADA, 0) = 0 
            or (tof_ELO_CARTEIRA(i_cart).QT_AGENDADA_CONFIRMADA > 0 and nvl(tof_ELO_CARTEIRA(i_cart).CD_STATUS_CEL_FINAL, 62) <> 59) then 
            begin
            
            
                BEGIN
                V_QUANTITYCART:=0;
                
                --SE TIVER UMA CARTEIRA NO ITEM  DA SEMANA QUE TEM 
                --VOLUME PROGRAMADO STATUS CEL OK NÃO PODE LIBERAR PROTOCOLO PARCIAL
                SELECT COUNT(1) INTO V_QUANTITYCART
                FROM VND.ELO_CARTEIRA EC 
                WHERE EC.CD_ELO_AGENDAMENTO_ITEM = TOF_ELO_CARTEIRA(I_CART).CD_ELO_AGENDAMENTO_ITEM
                AND EC.QT_AGENDADA_CONFIRMADA > 0
                AND (EC.CD_TIPO_AGENDAMENTO IN (22,23,24) OR (EC.CD_TIPO_AGENDAMENTO = 25 AND EC.CD_STATUS_REPLAN = 32)) 
                AND EC.CD_STATUS_CEL_FINAL = 59;
                Exception
                when no_data_found then
                    V_QUANTITYCART:=0;
                    
                END;
                
                
                IF NVL(V_QUANTITYCART,0) = 0 THEN 
                BEGIN 
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT+1).CD_ELO_CARTEIRA:= tof_ELO_CARTEIRA(i_cart).CD_ELO_CARTEIRA;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).NU_CONTRATO_SAP:= tof_ELO_CARTEIRA(i_cart).NU_CONTRATO_SAP;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).NU_ORDEM_VENDA:= tof_ELO_CARTEIRA(i_cart).NU_ORDEM_VENDA;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_ITEM_CONTRATO:= tof_ELO_CARTEIRA(i_cart).CD_ITEM_CONTRATO;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_ELO_AGENDAMENTO_ITEM:= tof_ELO_CARTEIRA(i_cart).CD_ELO_AGENDAMENTO_ITEM;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).QT_AGENDADA_CONFIRMADA:= tof_ELO_CARTEIRA(i_cart).QT_AGENDADA_CONFIRMADA;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_STATUS_CEL_FINAL:= tof_ELO_CARTEIRA(i_cart).CD_STATUS_CEL_FINAL;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_ELO_AGENDAMENTO:= tof_ELO_CARTEIRA(i_cart).CD_ELO_AGENDAMENTO;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_ELO_STATUS:= tof_ELO_CARTEIRA(i_cart).CD_ELO_STATUS;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_TIPO_AGENDAMENTO:= tof_ELO_CARTEIRA(i_cart).CD_TIPO_AGENDAMENTO;
                    tof_ELO_ITEM(tof_ELO_ITEM.COUNT).CD_STATUS_REPLAN:= tof_ELO_CARTEIRA(i_cart).CD_STATUS_REPLAN;
                    
                END;
                END IF;
            
            end;
            end if;

		END LOOP; 
		
		IF tof_ELO_ITEM.COUNT > 0 THEN 
		BEGIN 
		
			FOR i_cart in tof_ELO_ITEM.FIRST .. tof_ELO_ITEM.LAST
            LOOP
                
                BEGIN 
                OPEN    C_GROUP_LIBERADO(tof_ELO_ITEM(i_cart).CD_ELO_AGENDAMENTO_ITEM, tof_ELO_ITEM(i_cart).CD_ELO_CARTEIRA  );                               
                FETCH   C_GROUP_LIBERADO BULK COLLECT INTO tof_ELO_GROUPING LIMIT V_LIMIT;
                CLOSE   C_GROUP_LIBERADO;
                EXCEPTION  
                WHEN OTHERS THEN 
                BEGIN
                RAISE_APPLICATION_ERROR(-20001, 'ERRO ENCONTRADO: GX_ELO_BATCH_ISSUE.303 - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
                --ROLLBACK;
                END;
                
                END;  
                
                
                IF tof_ELO_GROUPING.COUNT > 0 THEN 
                BEGIN
                
                FOR i_grup in tof_ELO_GROUPING.FIRST .. tof_ELO_GROUPING.LAST
                LOOP
                

                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT+1).CD_ELO_AGENDAMENTO_WEEK:= tof_ELO_GROUPING(i_grup).CD_ELO_AGENDAMENTO_WEEK;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).NU_DOCUMENTO:= tof_ELO_GROUPING(i_grup).NU_DOCUMENTO;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).CD_ELO_AGENDAMENTO_GROUPING:= tof_ELO_GROUPING(i_grup).CD_ELO_AGENDAMENTO_GROUPING;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).CD_ELO_VBAK_PROTOCOLO:= tof_ELO_GROUPING(i_grup).CD_ELO_VBAK_PROTOCOLO;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).CD_ELO_CARTEIRA:= tof_ELO_GROUPING(i_grup).CD_ELO_CARTEIRA;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).CD_ELO_AGENDAMENTO_ITEM:= tof_ELO_GROUPING(i_grup).CD_ELO_AGENDAMENTO_ITEM;
                tof_ELO_GROUPING_ALL(tof_ELO_GROUPING_ALL.COUNT).ID:= V_ID;
                V_ID:=V_ID+1;
                
                
                END LOOP;
                
                END ;
                END IF;
                
                
            
            END LOOP;
            
            
            IF tof_ELO_GROUPING_ALL.COUNT > 0 THEN 
            BEGIN
            
            FORALL i_cart in indices of tof_ELO_GROUPING_ALL
            INSERT INTO VND.ELO_GROUPING_PROCESS_TMP
              (ID      ,   CD_ELO_AGENDAMENTO_WEEK  ,   NU_DOCUMENTO ,   CD_ELO_AGENDAMENTO_GROUPING  ,
            CD_ELO_VBAK_PROTOCOLO  ,  CD_ELO_CARTEIRA   ,   CD_ELO_AGENDAMENTO_ITEM ,   DS_VERSAO)
            VALUES 
            (
            tof_ELO_GROUPING_ALL(i_cart).id,
            tof_ELO_GROUPING_ALL(i_cart).CD_ELO_AGENDAMENTO_WEEK, 
            tof_ELO_GROUPING_ALL(i_cart).NU_DOCUMENTO, 
            tof_ELO_GROUPING_ALL(i_cart).CD_ELO_AGENDAMENTO_GROUPING, 
            tof_ELO_GROUPING_ALL(i_cart).CD_ELO_VBAK_PROTOCOLO, 
            tof_ELO_GROUPING_ALL(i_cart).CD_ELO_CARTEIRA,
            tof_ELO_GROUPING_ALL(i_cart).CD_ELO_AGENDAMENTO_ITEM,
            'NOTA:1'
            
            );
            COMMIT;     
            
            
            
            
            END;
            END IF;

		
		
		END;
		END IF;
		
		

	END;
	END IF;   
	
	 
    
END;


END;

/*
select * from vnd.elo_agendamento_week item 
where not exists (select 1 from vnd.elo_agendamento_item wees
where item.cd_elo_agendamento_item = wees.cd_elo_agendamento_item
);

select * from vnd.elo_agendamento_item 
where cd_elo_agendamento_item in (71753, 67799);

select * from vnd.elo_agendamento_week
where cd_elo_agendamento_item in (71753)or cd_elo_agendamento_week in (27905, 28726);

select * from vnd.elo_carteira 
where cd_elo_agendamento_item in (71753, 67799);


select * from vnd.elo_agendamento_grouping
where  cd_elo_agendamento_week in (27905, 28726);

SELECT * FROM ELO_GROUPING_PROCESS_TMP;
TRUNCATE TABLE VND.ELO_GROUPING_PROCESS_TMP;


SELECT * FROM VND.ELO_AGENDAMENTO_GROUPING G 
INNER JOIN ELO_GROUPING_PROCESS_TMP TM
ON G.CD_ELO_AGENDAMENTO_GROUPING = TM.CD_ELO_AGENDAMENTO_GROUPING;

SELECT  AGE.CD_WEEK, AGE.CD_POLO, AGE.CD_CENTRO_EXPEDIDOR, AGE.CD_ELO_STATUS, STAS.DS_STATUS,
EC.NU_CONTRATO_SAP, EC.CD_ITEM_CONTRATO, EC.NU_ORDEM_VENDA, EC.CD_PRODUTO_SAP, EC.NO_PRODUTO_SAP,
EC.CD_INCOTERMS, EC.IC_COOPERATIVE, 
EC.CD_STATUS_CEL_FINAL, EC.QT_AGENDADA_CONFIRMADA, EC.CD_TIPO_AGENDAMENTO, EC.CD_STATUS_REPLAN,
PROTO.NU_PROTOCOLO, PROTO.QT_AGENDADA_PROTOCOLO, PROTO.IC_ATIVO, WEE.QT_SEMANA,

 G.CD_ELO_AGENDAMENTO_GROUPING, G.NU_DOCUMENTO, G.QT_AGENDADA,  G.QT_SALDO, 
 
 
 TM.* FROM ELO_GROUPING_PROCESS_TMP TM 
LEFT JOIN VND.ELO_AGENDAMENTO_GROUPING G 
ON G.CD_ELO_AGENDAMENTO_GROUPING = TM.CD_ELO_AGENDAMENTO_GROUPING
INNER JOIN VND.ELO_CARTEIRA EC
ON EC.CD_ELO_CARTEIRA = TM.CD_ELO_CARTEIRA
INNER JOIN VND.ELO_AGENDAMENTO AGE
ON EC.CD_ELO_AGENDAMENTO = AGE.CD_ELO_AGENDAMENTO 
INNER JOIN VND.ELO_STATUS STAS
ON STAS.CD_ELO_STATUS = AGE.CD_ELO_STATUS
LEFT JOIN VND.ELO_VBAK_PROTOCOLO PROTO
ON 
PROTO.CD_ELO_CARTEIRA = TM.CD_ELO_CARTEIRA
LEFT JOIN VND.ELO_AGENDAMENTO_WEEK WEE
ON 
TM.CD_ELO_AGENDAMENTO_WEEK = WEE.CD_ELO_AGENDAMENTO_WEEK
 


*/










