*&---------------------------------------------------------------------*
*& Report  ZSDR3077_CRG_TABELAS_NV
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zsdr3077_crg_tabelas_nv
       NO STANDARD PAGE HEADING
       LINE-COUNT 65
       LINE-SIZE  120
       MESSAGE-ID zxunity.

*----------------------------------------------------------------------*
*                             MOSAIC                                   *
*----------------------------------------------------------------------*
* PROJETO...: NetVendas                                                *
*----------------------------------------------------------------------*
*                                                                      *
* AUTOR.....: André Ferian                                             *
* DATA......: 06.05.2003                                               *
* PROGRAMA..: Z_CRG_TABELAS_NV                                         *
* TRANSAÇÃO.: ZNVTAN                                                   *
* DESCRIÇÃO.: Carga em tabelas para o NETVENDAS                        *
*                                                                      *
*----------------------------------------------------------------------*
*                      HISTÓRICO DE ALTERAÇÕES                         *
*----------------------------------------------------------------------*
* DATA       |   CHAMADO      | DESENVOLVEDOR  | REQUEST               *
*----------------------------------------------------------------------*
* 09.02.2006 | NAR3182998     | AFERIAN        | DT1K932556            *
*----------------------------------------------------------------------*
*REPORT z_crg_tabelas_nv
*-------------------------------------------------------------------------------------*
*                     Modification History                                            *
*-------------------------------------------------------------------------------------*
*Date        | Name                | Transport            | Description               *
*                                     Request             |                           *
*-------------------------------------------------------------------------------------*
* 08/22/2011 | Ramanjaneya Reddy |   EDXK909295           | porting the program from  *
*                                                            QAO to EDX               *
*-------------------------------------------------------------------------------------*
* old program Name            | Old Tcode |New program Name                |New Tcode *
*-------------------------------------------------------------------------------------*
* Z_CRG_TABELAS_NV         | ZNVTAN       |ZSDR3077_CRG_TABELAS_NV    |ZSDR3077_NVTAN *
*                                                                                     *
*-------------------------------------------------------------------------------------*
*-------------------------------------------------------------------------------------*
* 09/14/2011 | Mahesh Byreddy |              |  Changes carried-out in subroutines    *
*                                         processa_dados_produto, processa_tipo_ordem *
*                 And added routines processa_dados_produto_v1, processa_tipo_ordem_v1*
*-------------------------------------------------------------------------------------*
** 06.02.2012 | Sergio Umlauf  | EDXK914105  | Changes in selects for TVM3 and TVM4.  *
*-------------------------------------------------------------------------------------*
*02/03/2012   | Sergio Umlauf  | EDXK915153  | Fixed selects for all entries.         *
*-------------------------------------------------------------------------------------*
*02/04/2012   | Sergio Umlauf  | EDXK916107  | Fixed Units of Measurement logic.      *
*-------------------------------------------------------------------------------------*
*03/04/2012   | Sergio Umlauf  | EDXK916147  | Fixed Product x Plant logic.           *
*-------------------------------------------------------------------------------------*
*07/14/2014   | Sergio Umlauf  | ED2K911066  | Correct the MOL database INSERT and    *             "CHG112963
*                                               UPDATE logics to restrict error       *             "CHG112963
*                                               entries in SAP logs.                  *             "CHG112963
*-------------------------------------------------------------------------------------*             "CHG112963
* 09/28/2015     BJOSHI          EDAK906802    Include USD MOL flag for VND.TIPO_ORDEM*             "CHG128174
*-------------------------------------------------------------------------------------*             "CHG128174
* 09/19/2017     SNAYAK          ED2K919439    Added companys code logic to insert and*             "CHG155287
*                                              update company code data in MOL table  *             "CHG155287
*                                              VND.REGISTRO and CTF.CENTRO_EXPEDIDOR  *             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
* 10/16/2017     SNAYAK          ED2K919621    Added logic to update MOL table        *             "CHG155287
*                                              CTF.USUARIO                            *             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
* 10/17/2017     SNAYAK          ED2K919921    Added one more logic to update MOL     *             "CHG155287
*                                              table CTF.USUARIO                      *             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
* 10/20/2017     SNAYAK          ED2K919983    Adjust the logic to update MOL         *             "CHG155287
*                                              table CTF.USUARIO                      *             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
* 10/25/2017     SNAYAK          ED2K920057    Adjust the logic for report trigger in *             "CHG155287
*                                              background                             *             "CHG155287
*-------------------------------------------------------------------------------------*             "CHG155287
*&---------------------------------------------------------------------*                            "CHG128174
*&                                                                                                  "CHG128174
*&        Declaring structures using TYPES keyword                     *                            "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
TYPES:                                                                                              "CHG128174
       BEGIN OF ty_r_auart,                                                                         "CHG128174
         sign(1)        TYPE c,                                                                     "CHG128174
         option(2)      TYPE c,                                                                     "CHG128174
         low            TYPE auart,                                                                 "CHG128174
         high           TYPE auart,                                                                 "CHG128174
       END OF ty_r_auart.                                                                           "CHG128174
                                                                                                    "CHG128174
                                                                                                    "CHG128174
*----------------------------------------------------------------------*
* Tabelas internas-----------------------------------------------------*
*----------------------------------------------------------------------*
*Denominações dos setores
DATA: BEGIN OF t_t016t OCCURS 0,
      spras LIKE t016t-spras,          "Código de idioma................
      brsch LIKE t016t-brsch,          "Código do setor industrial......
      brtxt LIKE t016t-brtxt,          "Denominação do código do setor..
END OF t_t016t.
*Texto code do setor industrial (mestre de clientes)
DATA: BEGIN OF t_tbrct OCCURS 0,
      spras LIKE tbrct-spras,          "Código de idioma................
      braco LIKE tbrct-braco,          "Code de setor industrial........
      vtext LIKE tbrct-vtext,          "Denominação.....................
END OF t_tbrct.
* Denominação dos grupos de contas
DATA: BEGIN OF t_t077x OCCURS 0,
      ktokd LIKE t077x-ktokd,          "Grupo de contas do cliente......
      txt30 LIKE t077x-txt30,          "Denominação do grupo de contas..
END OF t_t077x.
* Denominação dos grupos de contas Fornecedor
DATA: BEGIN OF t_t077y OCCURS 0,
      ktokk LIKE t077y-ktokk,          "Grupo de contas do fornecedor......
      txt30 LIKE t077y-txt30,          "Denominação do grupo de contas..
END OF t_t077y.

* Tipo de Impostos
DATA: BEGIN OF t_tp_imposto OCCURS 0,
      cd_tipo   LIKE j_1baj-taxtyp,    "Tipo de imposto.................
      cd_grupo  LIKE j_1baj-taxgrp,    "Grupo do imposto................
END OF t_tp_imposto.
***
*Descrição dos tipos de impostos
DATA: BEGIN OF t_ds_imposto OCCURS 0,
     cd_tipo   LIKE j_1bajt-taxtyp,    "Tipo de imposto.................
     ds_tipo   LIKE j_1bajt-ttypetxt,  "Descrição do tipo de imposto....
END OF t_ds_imposto.
***

*Códigos dos impostos
DATA: BEGIN OF t_cd_imposto OCCURS 0,
      cd_imposto LIKE j_1btxsdct-taxcode,  "Código do imposto SD........
      ds_imposto LIKE j_1btxsdct-txt,  "SD descrição do código do im
END OF t_cd_imposto.
***
*Grupo de material 4: denominação                                                                   "CHG72212
DATA :BEGIN OF t_cultura OCCURS 0,
      cd_cultura LIKE tvm4t-mvgr4,     "Grupo de material 4.............                            "CHG72212
      ds_cultura LIKE tvm4t-bezei,     "Denominação.....................                            "CHG72212
END OF t_cultura.
***
*Grupo de material 3: denominação                                                                   "CHG72212
DATA :BEGIN OF t_sacaria OCCURS 0,
      cd_sacaria LIKE tvm3t-mvgr3,     "Grupo de material 3.............                            "CHG72212
      ds_sacaria LIKE tvm3t-bezei,     "Denominação.....................                            "CHG72212
END OF t_sacaria.
***
*Documentos de venda: motivos ordem: textos
DATA: BEGIN OF t_motivo_ordem OCCURS 0,
      cd_motivo LIKE tvaut-augru,      "Motivo da Ordem.................
      ds_motivo LIKE tvaut-bezei,      "Denominação.....................
END OF t_motivo_ordem.
***
*Denominações para grupos de mercadorias
DATA: BEGIN OF t_linha_produto OCCURS 0,
      cd_produto LIKE t023t-matkl,     "Grupo de mercadorias............
* Alteração - Borges - 07/08/2008
      begru      LIKE t023-begru,
* Fim - alteração -
      ds_produto LIKE t023t-wgbez,   "Denominação do grupo de mercadoria
END OF t_linha_produto.
***
* Cabeçalho dos materiais ( Produtos)
DATA: BEGIN OF t_produto OCCURS 0,
      cd_produto LIKE mara-matnr,      "Nº material.....................
      cd_linha   LIKE mara-matkl,      "Grupo de mercadorias............
      cd_unidade LIKE mara-meins,      "Unidade medida base.............
      matnr(50) TYPE c,
      mtart      LIKE mara-mtart,
      lvorm      LIKE mara-lvorm,
      ersda      LIKE mara-ersda,     "data de criação
      laeda      LIKE mara-laeda,     "data modificação
      mstav      LIKE mara-mstav,
      ergew      TYPE mara-ergew,
      ergei      TYPE mara-ergei,
      ervol      TYPE mara-ervol,
      ervoe      TYPE mara-ervoe,
      spart      TYPE mara-spart,                                                                   "CHG72212
      magrv      TYPE mara-magrv,                                                                   "CHG72212
      dh_criacao(10),
      dh_altera(10),
END OF t_produto.
***

DATA: BEGIN OF t_mara OCCURS 0,
      matnr   LIKE mara-matnr,      "Nº material.....................
      matkl   LIKE mara-matkl,      "Grupo de mercadorias............
END OF t_mara.

DATA: BEGIN OF t_product_sales_area OCCURS 0,                                                       "CHG72212
            matnr   LIKE mvke-matnr,                                                                "CHG72212
            vkorg   LIKE mvke-vkorg,                                                                "CHG72212
            vtweg   LIKE mvke-vtweg,                                                                "CHG72212
      END OF t_product_sales_area.                                                                  "CHG72212

* Texto descritivo dos materiais
DATA: BEGIN OF t_descricao OCCURS 0,
      cd_produto LIKE mara-matnr,      "Nº material.....................
      ds_produto LIKE makt-maktx,      "Texto breve de material.........
END OF t_descricao.
****
* Registros ministério da agricultura
DATA: BEGIN OF t_ausp OCCURS 0,
      objek  LIKE ausp-objek,
      atinn  LIKE ausp-atinn,
      atwrt  LIKE ausp-atwrt,
END OF t_ausp.
***
* Componentes quimicos em % da formula CONFORME REGISTRO NO MINISTÉRIO DA AGRICULTURA
DATA: t_ztmm_regmin LIKE ztmm_regmin OCCURS 0 WITH HEADER LINE.
***
* TABELA COM AS GARANTIAS DO PRODUTO
DATA: t_ztpp_garant LIKE TABLE OF ztpp_garant WITH HEADER LINE.

* Tabela para selecionar o custo do material
DATA: BEGIN OF t_ckmlhd OCCURS 0,
      kalnr LIKE ckmlhd-kalnr,
      matnr LIKE ckmlhd-matnr,
      bwkey LIKE ckmlhd-bwkey,
END OF t_ckmlhd.
***
* Tabela para selecionar o custo do material
DATA: BEGIN OF t_ckmlcr OCCURS 0,
      kalnr LIKE ckmlcr-kalnr,
      bdatj LIKE ckmlcr-bdatj,
      poper LIKE ckmlcr-poper,
      stprs LIKE ckmlcr-stprs,
      pvprs LIKE ckmlcr-pvprs,
      curtp LIKE ckmlcr-curtp,
END OF t_ckmlcr.
*Condições de pagamento
DATA: BEGIN OF t_pagamento OCCURS 0,
      cd_pagamento LIKE t052u-zterm,   "Chave de condições de pagamento.
      ds_pagamento LIKE t052u-text1,   "Descrição do cod pagamento......
END OF t_pagamento.
***
*Clientes: zonas de distribuição
DATA: BEGIN OF t_zona OCCURS 0,
      cd_zona LIKE t171t-bzirk,   "Zona de distribuição.................
      ds_zona LIKE t171t-bztxt,   "Denominação da zona de distribuição..
END OF t_zona.
***
*Clientes: Incoterms: textos
DATA: BEGIN OF t_incoterms OCCURS 0,
      cd_incoterms LIKE tinct-inco1,   "Incoterms - parte 1.............
      ds_incoterms LIKE tinct-bezei,   "Denominação.....................
END OF t_incoterms.
***
*Documentos de venda: tipos: textos
DATA: BEGIN OF t_tipo_ordem OCCURS 0,
      auart         LIKE tvakt-auart,  "Tipo de documento de venda......
      bezei         LIKE tvakt-bezei,  "Denominação.....................
      vkorg         LIKE tvakz-vkorg,                                                               "CHG72212
      vtweg         LIKE tvakz-vtweg,                                                               "CHG72212
      spart         LIKE tvakz-spart,                                                               "CHG72212
      vbtyp         LIKE tvak-vbtyp,                                                                "CHG72212
      usd_flag      TYPE char1,        "flag for USD or BRL as per doc type                         "CHG128174
END OF t_tipo_ordem.                                                                                "CHG72212
***

DATA: BEGIN OF t_sales_org OCCURS 0,                                                                "CHG72212
        vkorg   LIKE tvkot-vkorg,                                                                   "CHG72212
        vtext   LIKE tvkot-vtext,                                                                   "CHG72212
      END OF t_sales_org.                                                                           "CHG72212

DATA: BEGIN OF t_dist_channel OCCURS 0,                                                             "CHG72212
        vtweg   LIKE tvtwt-vtweg,                                                                   "CHG72212
        vtext   LIKE tvtwt-vtext,                                                                   "CHG72212
      END OF t_dist_channel.                                                                        "CHG72212

DATA: BEGIN OF t_sales_division OCCURS 0,                                                           "CHG72212
        spart   LIKE tspat-spart,                                                                   "CHG72212
        vtext   LIKE tspat-vtext,                                                                   "CHG72212
      END OF t_sales_division.                                                                      "CHG72212

DATA: BEGIN OF t_status_contrato_sap OCCURS 0,                                                      "CHG72212
          kdkgr LIKE tvkggt-kdkgr,                                                                  "CHG72212
          vtext LIKE tvkggt-vtext,                                                                  "CHG72212
      END OF t_status_contrato_sap.                                                                 "CHG72212

DATA: BEGIN OF t_blocking_reason OCCURS 0,                                                          "CHG72212
          lifsp LIKE tvlst-lifsp,                                                                   "CHG72212
          vtext LIKE tvlst-vtext,                                                                   "CHG72212
      END OF t_blocking_reason.                                                                     "CHG72212

* Código da moeda
DATA: BEGIN OF t_moeda OCCURS 0,
      waers LIKE  tcurt-waers,         "Código da moeda.................
      ds_tipo_moeda LIKE  tcurt-ltext, "Texto descritivo................
      cd_tipo_moeda(4),
END OF t_moeda.
***
* Texto para tipo de nota fiscal
DATA: BEGIN OF t_tipo_nf OCCURS 0,
      cd_tipo_nf LIKE j_1baat-nftype,  "Tipo de nota fiscal.............
      ds_tipo_nf LIKE j_1baat-nfttxt,  "Texto do tipo de nota fiscal....
END OF t_tipo_nf.
***
* Tipos de meio auxiliar de expedição: denominações
DATA: BEGIN OF t_transporte OCCURS 0,
      cd_transporte LIKE tvtyt-traty,  "Categoria de transporte.........
      ds_transporte LIKE tvtyt-vtext,  "Denominação.....................
END OF t_transporte.
***
* Denominação de códigos do Razão Especial
DATA: BEGIN OF t_razao OCCURS 0,
      cd_razao LIKE t074t-shbkz,   "Código do Razão Especial............
      ds_razao LIKE t074t-ltext,   "Texto descritivo do cód. de operação
END OF t_razao.
***
* Tabela para o Motivo da Recusa
DATA: BEGIN OF t_motivo_recusa OCCURS 0,
     cd_recusa LIKE tvagt-abgru, "Motivo de recusa p/cotações e ordens..
     ds_recusa LIKE tvagt-bezei, "Denominação...........................
END OF t_motivo_recusa.
***
* Tabela para o Bloquei de Remessa
DATA: BEGIN OF t_bloqueio_remessa OCCURS 0,
      cd_remessa LIKE tvlst-lifsp,  "Proposta para bloqueio de remessas.
      ds_remessa LIKE tvlst-vtext,  "Denominação........................
END OF t_bloqueio_remessa.
***
* Classes de risco p/ administração de crédito : textos
DATA: BEGIN OF t_risco OCCURS 0,
      cd_classe_risco LIKE t691t-ctlpc,"Administração de crédito:classe
      ds_classe_risco LIKE t691t-rtext,"Denominação da classe de risco.
END OF t_risco.
***
*Unidade de organização: grupos de vendedores: textos
DATA: BEGIN OF t_tvgrt OCCURS 0,
      spras LIKE tvgrt-spras,  "Código de idioma........................
      vkgrp LIKE tvgrt-vkgrp,  "Grupo de vendedores.....................
      bezei LIKE tvgrt-bezei,  "Denominação.............................
      cd_usuario      TYPE n LENGTH 8,                                                              "CHG112963
      cd_usuario_sup  TYPE n LENGTH 8,                                                              "CHG112963
END OF t_tvgrt.
***
* Segmento do cliente
DATA: BEGIN OF t_t151t OCCURS 0,
      kdgrp  LIKE t151t-kdgrp,
      ktext  LIKE t151t-ktext,
END OF t_t151t.
***
* Centros/filiais
DATA: BEGIN OF t_centro OCCURS 0,
      centro    LIKE t001w-werks,
      nome      LIKE t001w-name1,
      endereco  LIKE t001w-stras,
      cidade    LIKE t001w-ort01,
      cep       LIKE t001w-pstlz,
      regio     LIKE t001w-regio,
      estado(2),
      cd_municipio(6),
      bukrs     TYPE bukrs,                                                                         "CHG155287
END OF t_centro.
***
* Unidades de medida
DATA: BEGIN OF t_t006 OCCURS 0.
        INCLUDE STRUCTURE t006.
DATA: END OF t_t006.
***
* Dimensões unidades SAP
DATA: BEGIN OF t_t006d OCCURS 0.
        INCLUDE STRUCTURE t006d.
DATA: END OF t_t006d.
***
* Descrições das unidades SAP
DATA: BEGIN OF t_t006a OCCURS 0.
        INCLUDE STRUCTURE t006a.
DATA: END OF t_t006a.
***
* Bloqueio de Faturamento
DATA: BEGIN OF t_bloq_fatura OCCURS 0,
      faksp LIKE tvfst-faksp,   "Bloqueio
      vtext LIKE tvfst-vtext,   "Denominação
END OF t_bloq_fatura.
***
* Lista de preço
DATA: BEGIN OF t_lista OCCURS 0,
      pltyp LIKE t189t-pltyp,  "Ctg.lista de preços
      ptext LIKE t189t-ptext,  "Texto (comprimento 20)
END OF t_lista.
***
* Setor de atividade
DATA: BEGIN OF t_tspat OCCURS 0,
      spart(2) TYPE c,
      vtext LIKE tspat-vtext,
END OF t_tspat.

* Tabela para selecionar dados do setores no oracle
DATA: BEGIN OF t_setor OCCURS 0,
     cd_setor_atividade(9) TYPE n,
     sg_setor_atividade(2),
END OF t_setor.
* Tabela para o motivo do boqueio do Crédito
DATA: BEGIN OF t_ztsd_motbloq OCCURS 0,
      cod_mot LIKE ztsd_motbloq-cod_mot,
      descr   LIKE ztsd_motbloq-descr,
END OF t_ztsd_motbloq.

DATA: BEGIN OF t_ztmm_regmin_2 OCCURS 0,
      cod_reg  TYPE ztmm_regmin-cod_reg,
      cod_reg1 TYPE ztmm_regmin-cod_reg,
      bukrs    TYPE ztmm_regmin-bukrs,                                                              "CHG155287
      n        TYPE ztmm_regmin-n,
      p        TYPE ztmm_regmin-p,
      k        TYPE ztmm_regmin-k,
      obsoleto TYPE ztmm_regmin-obsoleto,
END OF t_ztmm_regmin_2.

*Formas de Pagamento
DATA: BEGIN OF t_tvzbt OCCURS 0,
      zterm LIKE tvzbt-zterm,      "Forma de Pagamento.................
      vtext LIKE tvzbt-vtext,      "Denominação.....................
END OF t_tvzbt.
***

*Municipios
DATA: BEGIN OF t_j_1btxjurt OCCURS 0,
      taxjurcode  TYPE j_1btxjurt-taxjurcode,
      nome        TYPE j_1btxjurt-text,
END OF t_j_1btxjurt.
***

DATA: BEGIN OF t_tvakz OCCURS 0,
      auart LIKE tvakz-auart,
END OF t_tvakz.

DATA: BEGIN OF t_tvegrt OCCURS 0,
      magrv LIKE tvegrt-magrv,
      bezei LIKE tvegrt-bezei,
END OF t_tvegrt.

DATA: BEGIN OF t_tervh OCCURS 0,
      magrv LIKE tervh-magrv,
      traty LIKE tervh-traty,
END OF t_tervh.

TYPES: BEGIN OF st_tipo_pgto,
        mschl TYPE t040-mschl,
        text1 TYPE t040a-text1,
       END OF st_tipo_pgto,                                                                         "CHG112963

       BEGIN OF st_tvkbz,                                                                           "CHG112963
         vkorg TYPE tvkbz-vkorg,                                                                    "CHG112963
         vtweg TYPE tvkbz-vtweg,                                                                    "CHG112963
         spart TYPE tvkbz-spart,                                                                    "CHG112963
         vkbur TYPE tvkbz-vkbur,                                                                    "CHG112963
       END OF st_tvkbz,                                                                             "CHG112963

       BEGIN OF st_tvkbt,                                                                           "CHG112963
         spras      TYPE tvkbt-spras,                                                               "CHG112963
         vkbur      TYPE tvkbt-vkbur,                                                               "CHG112963
         bezei      TYPE tvkbt-bezei,                                                               "CHG112963
         cd_usuario TYPE n LENGTH 8,                                                                "CHG112963
       END OF st_tvkbt,                                                                             "CHG112963

       BEGIN OF st_tvbvk,                                                                           "CHG112963
         vkbur TYPE tvbvk-vkbur,                                                                    "CHG112963
         vkgrp TYPE tvbvk-vkgrp,                                                                    "CHG112963
       END OF st_tvbvk.                                                                             "CHG112963

DATA: wa_tipo_pgto TYPE t040a,
      it_tipo_pgto TYPE STANDARD TABLE OF t040a,                                                    "CHG112963
      wa_tvkbz     TYPE st_tvkbz,                                                                   "CHG112963
      it_tvkbz     TYPE STANDARD TABLE OF st_tvkbz,                                                 "CHG112963
      wa_tvkbt     TYPE st_tvkbt,                                                                   "CHG112963
      it_tvkbt     TYPE STANDARD TABLE OF st_tvkbt,                                                 "CHG112963
      wa_tvbvk     TYPE st_tvbvk,                                                                   "CHG112963
      it_tvbvk     TYPE STANDARD TABLE OF st_tvbvk.                                                 "CHG112963
                                                                                                    "CHG155287
TYPES : BEGIN OF ty_t001k,                                                                          "CHG155287
          bwkey TYPE t001k-bwkey,                                                                   "CHG155287
          bukrs TYPE t001k-bukrs,                                                                   "CHG155287
        END OF ty_t001k.                                                                            "CHG155287
                                                                                                    "CHG155287
DATA : itab_t001k  TYPE STANDARD TABLE OF ty_t001k,                                                 "CHG155287
       wa_t001k    TYPE ty_t001k,                                                                   "CHG155287
       itab_centro LIKE  TABLE OF t_centro,                                                         "CHG155287
       wa_centro   LIKE LINE OF itab_centro.                                                        "CHG155287
                                                                                                    "CHG155287
                                                                                                    "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
*&                                                                                                  "CHG128174
*&        Declaring Ranges                                             *                            "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
DATA:  r_auart    TYPE STANDARD TABLE OF ty_r_auart.                                                "CHG128174
                                                                                                    "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
*&                                                                                                  "CHG128174
*&        Declaring Workareas                                          *                            "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
* Declaring work area for vbak                                                                      "CHG128174
DATA :  wa_r_auart    TYPE ty_r_auart.                                                              "CHG128174
                                                                                                    "CHG128174
*----------------------------------------------------------------------*
* Constantes-----------------------------------------------------------*
*----------------------------------------------------------------------*
CONSTANTS: c_spras LIKE j_1bagt-spras VALUE 'P', "Idioma para seleção
           c_texto(10) TYPE c VALUE 'EM BRANCO',  "Para campos em branco
           c_atnam TYPE cabn-atnam VALUE 'GARANTIA'.

CONSTANTS:
           c_n     TYPE clobjdat-smbez VALUE 'N',
           c_p     TYPE clobjdat-smbez VALUE 'P',
           c_k     TYPE clobjdat-smbez VALUE 'K',
           c_s     TYPE clobjdat-smbez VALUE 'S',
           c_ca    TYPE clobjdat-smbez VALUE 'CA',
           c_mg    TYPE clobjdat-smbez VALUE 'MG',
           c_zn    TYPE clobjdat-smbez VALUE 'ZN',
           c_b     TYPE clobjdat-smbez VALUE 'B',
           c_co    TYPE clobjdat-smbez VALUE 'CO',
           c_cu    TYPE clobjdat-smbez VALUE 'CU',
           c_fe    TYPE clobjdat-smbez VALUE 'FE',
           c_mn    TYPE clobjdat-smbez VALUE 'MN',
           c_mo    TYPE clobjdat-smbez VALUE 'MO'.

*----------------------------------------------------------------------*
* Variáveis Globais----------------------------------------------------*
*----------------------------------------------------------------------*
DATA: w_codigo(8) TYPE n,              " Sequencia dos cod.dos usuarios.
      w_cep(8),
      w_hh_inicio  LIKE sy-uzeit,       " hora de inicio
      w_dt_inicio  LIKE sy-datum,      " data de inicio
      w_dt_ult     LIKE sy-datum,      " data da ultima modificação
      w_hh_ult     LIKE sy-uzeit,
      w_data(21),
      w_data_custo(10),
      wcd_custo_n(9),
      w_modi(9),
      wcd_custo(9),
      w_cd_segmento_cliente(5) TYPE n,
      w_cd_segmento_cliente_max(5) TYPE n,
      w_cd_setor(4),                                                                                "CHG72212
      w_cd_sub_setor(4) TYPE n.                                                                     "CHG72212

DATA: w_cd_segmento(05) TYPE c,
      w_no_segmento(255),
      w_ic_ativo(1),
      w_dh_ult_alteracao(21),          "Data da ALTERAÇ~CAO DO REGISTRO
      v_atinn TYPE cabn-atinn,
      sg_estado(2) TYPE c,                                                                          "CHG72212
      cd_estado(5) TYPE n,                                                                          "CHG72212
      cd_municipio(6) TYPE n,                                                                       "CHG72212
      cd_ibge(10) TYPE n.                                                                           "CHG72212

RANGES: r_begru FOR t023-begru,                                                                     "CHG72212
        r_vtweg FOR knvv-vtweg,                                                                     "CHG72212
        r_vkorg FOR knvp-vkorg.                                                                     "CHG72212

DATA:   t_range TYPE TABLE OF string,                                                               "CHG72212
        wa_range LIKE LINE OF t_range,                                                              "CHG72212
        t_taxjurcode TYPE TABLE OF string,                                                          "CHG72212
        wa_taxjurcode LIKE LINE OF t_taxjurcode.                                                    "CHG72212

DATA:
      v_n             TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_p             TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_k             TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_s             TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_ca            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_mg            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_zn            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_b             TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_co            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_cu            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_fe            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_mn            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_mo            TYPE p LENGTH 8 DECIMALS 4,                                                   "CHG72212
      v_objek         TYPE ausp-objek,                                                              "CHG72212
      v_datum         TYPE sy-datum,                                                                "CHG72212
      itab_objectdata TYPE TABLE OF clobjdat,                                                       "CHG72212
      wa_objectdata   LIKE LINE OF itab_objectdata,                                                 "CHG72212
      itab_class      TYPE TABLE OF sclass,                                                         "CHG72212
      v_smbez         TYPE clobjdat-smbez.                                                          "CHG112963

DATA: l_const1 TYPE char50,                                                                         "CHG72212
      l_const2 TYPE char50,                                                                         "CHG72212
      l_const3 TYPE char50,                                                                         "CHG72212
      l_const4 TYPE char50,                                                                         "CHG72212
      t_const TYPE STANDARD TABLE OF ztut_valu WITH HEADER LINE,                                    "CHG128174
      gv_const TYPE char50.                                                                         "CHG128174

CONSTANTS: c_const1 TYPE char50 VALUE '001_INS',                                                    "CHG72212
           c_const2 TYPE char50 VALUE '002_INS',                                                    "CHG72212
           c_const3 TYPE char50 VALUE '003_INS',                                                    "CHG72212
           c_const4 TYPE char50 VALUE '003_INS',                                                    "CHG128174
           c_const5 TYPE char50 VALUE '005_INS',                                                    "CHG128174
           c_comma  TYPE char1  VALUE ',',                                                          "CHG128174
           c_eq     TYPE char2  VALUE 'EQ',                                                         "CHG128174
           c_i      TYPE char1  VALUE 'I'.                                                          "CHG128174


*----------------------------------------------------------------------*
* Select-Options e Parameters------------------------------------------*
*----------------------------------------------------------------------*
************************************************************************
*DADOS DOS CLIENTES - Selecione Abaixo as Tabelas Para Carga no Oracle -
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-t14.
SELECTION-SCREEN BEGIN OF LINE.
* Carga: do Setor
SELECTION-SCREEN COMMENT 01(15) text-t15.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_setor AS CHECKBOX DEFAULT 'X'.
* Carga: do Sub Setor
SELECTION-SCREEN COMMENT 50(19) text-t16.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_ssetor AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Grupos de Clientes
SELECTION-SCREEN COMMENT 01(25) text-t17.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_gcont AS CHECKBOX DEFAULT 'X'.
* Carga: Territórios
SELECTION-SCREEN COMMENT 50(19) text-t34.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_terra AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Seguimento do Cliente
SELECTION-SCREEN COMMENT 01(25) text-t35.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_segme AS CHECKBOX DEFAULT 'X'.
* Carga: Municípios
SELECTION-SCREEN COMMENT 50(19) text-t43.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_munic AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN ULINE.
***********************************************************************
*DADOS DOS PEDIDOS - Selecione Abaixo as Tabelas Para Carga no Oracle -
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-t01.
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Código do Imposto
SELECTION-SCREEN COMMENT 01(24) text-t03.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_cdimp AS CHECKBOX DEFAULT 'X'.
* Carga: Bloq. Faturamento
SELECTION-SCREEN COMMENT 50(25) text-t33.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_bloq AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga Tipo de Imposto
SELECTION-SCREEN COMMENT 01(22) text-t04.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_tpimp AS CHECKBOX DEFAULT 'X'.
* Carga Cultura
SELECTION-SCREEN COMMENT 50(14) text-t05.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_cultu AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga sacaria
SELECTION-SCREEN COMMENT 01(14) text-t06.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_saca AS CHECKBOX DEFAULT 'X'.
* Carga Motivo da Ordem
SELECTION-SCREEN COMMENT 50(22) text-t07.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_mordem AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga Dados dos produtos
SELECTION-SCREEN COMMENT 01(25) text-t08.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_prod AS CHECKBOX DEFAULT 'X'.
* Carga: Código do Pagamento
SELECTION-SCREEN COMMENT 50(26) text-t09.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_paga AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
* Carga: Zona Distribuição
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 01(25) text-t11.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_zona AS CHECKBOX DEFAULT 'X'.
* Carga: Dados Incoterms
SELECTION-SCREEN COMMENT 50(23) text-t12.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_inco AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Setor de Atividade
SELECTION-SCREEN COMMENT 01(25) text-t37.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_ativi AS CHECKBOX DEFAULT 'X'.
* Carga: Tipos de Ordens
SELECTION-SCREEN COMMENT 50(22) text-t13.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_ordem AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Tipos de Moedas
SELECTION-SCREEN COMMENT 01(22) text-t19.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_moeda AS CHECKBOX DEFAULT 'X'.
* Carga: Motivo da Recusa
SELECTION-SCREEN COMMENT 50(23) text-t26.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_recusa AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Bloqueio de Remessa
SELECTION-SCREEN COMMENT 01(23) text-t27.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_remess AS CHECKBOX DEFAULT 'X'.
* Carga: Dos Escritórios de Vendas
SELECTION-SCREEN COMMENT 50(25) text-t29.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_escrit AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Centro Expedidor
SELECTION-SCREEN COMMENT 01(23) text-t30.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_centro AS CHECKBOX DEFAULT 'X'.
* Carga: Unidade Medida SAP
SELECTION-SCREEN COMMENT 50(25) text-t31.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_medida AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Lista de Preço
SELECTION-SCREEN COMMENT 01(23) text-t32.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_lista AS CHECKBOX DEFAULT 'X'.
* Carga: Formas de Pagamento                                                                        "CHG72212
SELECTION-SCREEN COMMENT 50(26) text-t42.                                                           "CHG72212
SELECTION-SCREEN POSITION 77.                                                                       "CHG72212
PARAMETERS p_fpgto AS CHECKBOX DEFAULT 'X'.                                                         "CHG72212
SELECTION-SCREEN END OF LINE.
************************************************************************
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Motivo Bloqueio Credito
SELECTION-SCREEN COMMENT 01(25) text-t38.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_mbcre AS CHECKBOX DEFAULT 'X'.
* Carga: tabela VND.REGISTRO
SELECTION-SCREEN COMMENT 50(26) text-t39.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_regi AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
************************************************************************                            "CHG72212
SELECTION-SCREEN BEGIN OF LINE.                                                                     "CHG72212
* Carga: Grupo de Material                                                                          "CHG72212
SELECTION-SCREEN COMMENT 01(25) text-t44.                                                           "CHG72212
SELECTION-SCREEN POSITION 27.                                                                       "CHG72212
PARAMETERS p_grpma AS CHECKBOX DEFAULT 'X'.                                                         "CHG72212
* Load: Dunning Key                                                                                 "CHG72212
SELECTION-SCREEN COMMENT 50(25) text-t45.                                                           "CHG72212
SELECTION-SCREEN POSITION 77.                                                                       "CHG72212
PARAMETERS p_tppgt AS CHECKBOX DEFAULT 'X'.                                                         "CHG72212
SELECTION-SCREEN END OF LINE.                                                                       "CHG72212

SELECTION-SCREEN END OF BLOCK b2.
************************************************************************
* DADOS DAS NOTAS FISCAIS
* Selecione Abaixo as Tabelas Para Carga no Oracle -
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE text-t20.
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Categoria Transporte
SELECTION-SCREEN COMMENT 01(25) text-t23.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_transp AS CHECKBOX DEFAULT 'X'.
* Carga: Tipos Notas Fiscais
SELECTION-SCREEN COMMENT 50(26) text-t22.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_nf AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b3.
************************************************************************
* DADOS DO FATURAMENTO
* Selecione Abaixo as Tabelas Para Carga no Oracle -
SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME TITLE text-t24.
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Código Razão
SELECTION-SCREEN COMMENT 01(25) text-t25.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_razao AS CHECKBOX DEFAULT 'X'.
* Carga: Classes de Risco
SELECTION-SCREEN COMMENT 50(23) text-t28.
SELECTION-SCREEN POSITION 77.
PARAMETERS p_risco AS CHECKBOX DEFAULT 'X'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b4.
************************************************************************
* DADOS DO Fornecedor
* Selecione Abaixo as Tabelas Para Carga no Oracle -
SELECTION-SCREEN BEGIN OF BLOCK b5 WITH FRAME TITLE text-t40.
SELECTION-SCREEN BEGIN OF LINE.
* Carga: Grupo dos fornecedores
SELECTION-SCREEN COMMENT 01(26) text-t41.
SELECTION-SCREEN POSITION 27.
PARAMETERS p_gfor AS CHECKBOX DEFAULT 'X'.
* update ZTSD_COST                                                                                  "CHG155287
SELECTION-SCREEN COMMENT 50(23) text-t46.                                                           "CHG155287
SELECTION-SCREEN POSITION 77.                                                                       "CHG155287
PARAMETERS chk_ztsd AS CHECKBOX DEFAULT 'X'.                                                        "CHG155287
SELECTION-SCREEN END OF LINE.                                                                       "CHG155287
SELECTION-SCREEN END OF BLOCK b5.                                                                   "CHG155287

************************************************************************




*&---------------------------------------------------------------------*
*&                          Lógica Principal                           *
*&---------------------------------------------------------------------*
INITIALIZATION.                                                                                     "CHG155287
SET PF-STATUS 'ZSDR3077'.                                                                           "CHG155287
AT SELECTION-SCREEN.                                                                                "CHG155287
  CASE sy-ucomm.                                                                                    "CHG155287
    WHEN 'SELECT'.                                                                                  "CHG155287
      chk_ztsd  = 'X'.                                                                              "CHG155287
      p_ativi   = 'X'.                                                                              "CHG155287
      p_bloq    = 'X'.                                                                              "CHG155287
      p_cdimp   = 'X'.                                                                              "CHG155287
      p_centro  = 'X'.                                                                              "CHG155287
      p_cultu   = 'X'.                                                                              "CHG155287
      p_escrit  = 'X'.                                                                              "CHG155287
      p_fpgto   = 'X'.                                                                              "CHG155287
      p_gcont   = 'X'.                                                                              "CHG155287
      p_gfor    = 'X'.                                                                              "CHG155287
      p_grpma   = 'X'.                                                                              "CHG155287
      p_inco    = 'X'.                                                                              "CHG155287
      p_lista   = 'X'.                                                                              "CHG155287
      p_mbcre   = 'X'.                                                                              "CHG155287
      p_medida  = 'X'.                                                                              "CHG155287
      p_moeda   = 'X'.                                                                              "CHG155287
      p_mordem  = 'X'.                                                                              "CHG155287
      p_munic   = 'X'.                                                                              "CHG155287
      p_nf      = 'X'.                                                                              "CHG155287
      p_ordem   = 'X'.                                                                              "CHG155287
      p_paga    = 'X'.                                                                              "CHG155287
      p_prod    = 'X'.                                                                              "CHG155287
      p_razao   = 'X'.                                                                              "CHG155287
      p_recusa  = 'X'.                                                                              "CHG155287
      p_regi    = 'X'.                                                                              "CHG155287
      p_remess  = 'X'.                                                                              "CHG155287
      p_risco   = 'X'.                                                                              "CHG155287
      p_saca    = 'X'.                                                                              "CHG155287
      p_segme   = 'X'.                                                                              "CHG155287
      p_setor   = 'X'.                                                                              "CHG155287
      p_ssetor  = 'X'.                                                                              "CHG155287
      p_terra   = 'X'.                                                                              "CHG155287
      p_tpimp   = 'X'.                                                                              "CHG155287
      p_tppgt   = 'X'.                                                                              "CHG155287
      p_transp  = 'X'.                                                                              "CHG155287
      p_zona    = 'X'.                                                                              "CHG155287
      p_ativi   = 'X'.                                                                              "CHG155287
    WHEN 'DESELECT'.                                                                                "CHG155287
      CLEAR : p_bloq,                                                                               "CHG155287
              p_cdimp,                                                                              "CHG155287
              p_centro,                                                                             "CHG155287
              p_cultu,                                                                              "CHG155287
              p_escrit,                                                                             "CHG155287
              p_fpgto,                                                                              "CHG155287
              p_gcont,                                                                              "CHG155287
              p_gfor ,                                                                              "CHG155287
              p_grpma ,                                                                             "CHG155287
              p_inco ,                                                                              "CHG155287
              p_lista ,                                                                             "CHG155287
              p_mbcre ,                                                                             "CHG155287
              p_medida ,                                                                            "CHG155287
              p_moeda ,                                                                             "CHG155287
              p_mordem ,                                                                            "CHG155287
              p_munic ,                                                                             "CHG155287
              p_nf,                                                                                 "CHG155287
              p_ordem ,                                                                             "CHG155287
              p_paga ,                                                                              "CHG155287
              p_prod ,                                                                              "CHG155287
              p_razao ,                                                                             "CHG155287
              p_recusa,                                                                             "CHG155287
              p_regi ,                                                                              "CHG155287
              p_remess,                                                                             "CHG155287
              p_risco ,                                                                             "CHG155287
              p_saca ,                                                                              "CHG155287
              p_segme ,                                                                             "CHG155287
              p_setor ,                                                                             "CHG155287
              p_ssetor,                                                                             "CHG155287
              p_terra ,                                                                             "CHG155287
              p_tpimp,                                                                              "CHG155287
              p_tppgt,                                                                              "CHG155287
              p_transp,                                                                             "CHG155287
              chk_ztsd,                                                                             "CHG155287
              p_ativi,                                                                              "CHG155287
              p_zona.                                                                               "CHG155287
    WHEN OTHERS    .                                                                                "CHG155287
     IF sy-ucomm = 'EXECUTE' OR sy-batch = 'X'.                                                     "CHG155287
       PERFORM change_const.                                                                        "CHG72212
       CLEAR: l_const1, l_const2, l_const3, l_const4.                                               "CHG72212
       READ TABLE t_const WITH KEY progr = sy-repid                                                 "CHG72212
                                      posit = c_const1.                                             "CHG72212
       IF sy-subrc = 0.                                                                             "CHG72212
         l_const1 = t_const-value.                                                                  "CHG72212
         CLEAR t_const.                                                                             "CHG72212
         SPLIT l_const1 AT ',' INTO TABLE t_range.                                                  "CHG72212
         LOOP AT t_range INTO wa_range.                                                             "CHG72212
           PERFORM fill_range_begru USING: wa_range.                                                "CHG72212
         ENDLOOP.                                                                                   "CHG72212
         CLEAR t_range.                                                                             "CHG72212
       ENDIF.                                                                                       "CHG72212

       READ TABLE t_const WITH KEY progr = sy-repid                                                 "CHG72212
                                      posit = c_const2.                                             "CHG72212
       IF sy-subrc = 0.                                                                             "CHG72212
         l_const2 = t_const-value.                                                                  "CHG72212
         CLEAR t_const.                                                                             "CHG72212
         SPLIT l_const2 AT ',' INTO TABLE t_range.                                                  "CHG72212
         LOOP AT t_range INTO wa_range.                                                             "CHG72212
           PERFORM fill_range_vkorg USING: wa_range.                                                "CHG72212
         ENDLOOP.                                                                                   "CHG72212
         CLEAR t_range.                                                                             "CHG72212
       ENDIF.                                                                                       "CHG72212
       READ TABLE t_const WITH KEY progr = sy-repid                                                 "CHG72212
                                   posit = c_const3.                                                "CHG72212
       IF sy-subrc = 0.                                                                             "CHG72212
         l_const3 = t_const-value.                                                                  "CHG72212
         CLEAR t_const.                                                                             "CHG72212
         SPLIT l_const3 AT ',' INTO TABLE t_range.                                                  "CHG72212
         LOOP AT t_range INTO wa_range.                                                             "CHG72212
           PERFORM fill_range_vtweg USING: wa_range.                                                "CHG72212
         ENDLOOP.                                                                                   "CHG72212
         CLEAR t_range.                                                                             "CHG72212
       ENDIF.                                                                                       "CHG72212
       READ TABLE t_const WITH KEY progr = sy-repid                                                 "CHG72212
                                   posit = c_const4.                                                "CHG72212
       IF sy-subrc = 0.                                                                             "CHG72212
         l_const4 = t_const-value.                                                                  "CHG72212
       ENDIF.                                                                                       "CHG128174
                                                                                                    "CHG128174
* Get the values of contract type AUART                                                             "CHG128174
       CLEAR t_const.                                                                               "CHG128174
       READ TABLE t_const WITH KEY progr = sy-repid                                                 "CHG128174
                                   posit = c_const5.                                                "CHG128174
       IF sy-subrc = 0.                                                                             "CHG128174
         gv_const = t_const-value.                                                                  "CHG128174
         CLEAR t_range.                                                                             "CHG128174
         SPLIT gv_const AT c_comma INTO TABLE t_range.                                              "CHG128174
         LOOP AT t_range INTO wa_range.                                                             "CHG128174
           CLEAR  wa_r_auart.                                                                       "CHG128174
           wa_r_auart-low    = wa_range.                                                            "CHG128174
           wa_r_auart-option = c_eq.                                                                "CHG128174
           wa_r_auart-sign   = c_i.                                                                 "CHG128174
           APPEND wa_r_auart TO r_auart.                                                            "CHG128174
         ENDLOOP.                                                                                   "CHG128174
       ENDIF.                                                                                       "CHG128174

* Guardando a data e hora do inicio da interface
       w_hh_inicio = sy-uzeit.
       w_dt_inicio = sy-datum.

* Perform para conectar no banco de dados
       PERFORM conecta.

* VERIFICANDO SE É PARA EXECUTAR OU NÃO O PROGRAMA
       CALL FUNCTION 'Z_VERIFICA_EXECUCAO_NET'
         EXPORTING
           cprog    = sy-cprog
         EXCEPTIONS
           resposta = 1
           OTHERS   = 2.

       IF sy-subrc <> 0.
*   Parêmetro IC_EXECUÇÃO não está ativo no Orcale
         MESSAGE i000 WITH text-m39.
         PERFORM desconecta.
         STOP.
       ENDIF.

* Selecionando a data para seleção de dados
       CALL FUNCTION 'Z_SELECAO_DATA_NET'
         EXPORTING
           cprog     = sy-cprog
         IMPORTING
           dt_inicio = w_dt_ult
           hh_inicio = w_hh_ult.

* Perform Principal para processamento das tabelas de que fazem
* Parde do relacionamento das tabelas de Cliente, Usuários e Fazendas
       PERFORM processa_dados_clientes.
***
* Perform Principal para processamento das tabelas de que fazem
* Parte do relacionamento das tabelas de Pedidos
       PERFORM processa_dados_pedidos.
***
* Perform Principal para processamento das tabelas de que fazem
* Parte do relacionamento das tabelas de Notas Fiscais
       PERFORM processa_dados_nf.
***
* Perform Principal para processamento das tabelas que fazem
* Parte o relecionamrnto das tabelas do financeiro
       PERFORM processa_financeiro.
***
* Perform para os dados relacionados com os fornecedores
       PERFORM processa_fornecedor.
* **

* ATUALIZANDO NO ORACLE A ULTIMA EXECUÇÃO DA INTERFACE NO ORACLE
       CALL FUNCTION 'Z_ATUALIZACAO_NET'
         EXPORTING
           cprog     = sy-cprog
           dt_inicio = w_dt_inicio
           hh_inicio = w_hh_inicio.

* Processamento Efetuado!
       MESSAGE i000 WITH text-m14.
***
* Perform para desconectar com a base de dados
       PERFORM desconecta.
     ENDIF.                                                                                         "CHG155287
  ENDCASE.                                                                                          "CHG155287
*&---------------------------------------------------------------------*
*&      Form  processa_dados_clientes
*&---------------------------------------------------------------------*
FORM processa_dados_clientes.
************************************************************************
* Processamento: Seleção de dados e Inclusão dos registros no Oracle   *
************************************************************************
  IF p_setor = 'X'.
    PERFORM processa_dados_setor.
  ENDIF.
***
  IF p_ssetor = 'X'.
    PERFORM processa_dados_subsetor.
  ENDIF.
***
  IF p_gcont = 'X'.
    PERFORM processa_grupos_contas.
  ENDIF.
***
  IF p_terra = 'X'.
    PERFORM processa_territorio.
  ENDIF.
***
  IF p_segme = 'X'.
    PERFORM processa_segmento_cliente.
  ENDIF.
***
  IF p_munic = 'X'.
    PERFORM processa_municipio.
  ENDIF.
ENDFORM.                    "processa_dados_clientes
*&---------------------------------------------------------------------*
*&      Form  processa_dados_pedidos
*&---------------------------------------------------------------------*
FORM processa_dados_pedidos.
************************************************************************
* Processamento: Seleção de dados e Inclusão dos registros no Oracle   *
************************************************************************
  IF p_tpimp = 'X'.
    PERFORM processa_dados_tipo_imposto.
  ENDIF.
***
  IF p_cdimp = 'X'.
    PERFORM processa_dados_codigo_imposto.
  ENDIF.
***
  IF p_cultu = 'X'.
    PERFORM processa_dados_cultura.
  ENDIF.
***
  IF p_saca = 'X'.
    PERFORM processa_dados_sacaria.
  ENDIF.
***
  IF p_mordem = 'X'.
    PERFORM processa_dados_motivo_ordem.
  ENDIF.
***
  IF p_medida = 'X'.
    PERFORM processa_unidade_medida_sap.
  ENDIF.
***
  IF p_prod = 'X'.                                                                                  "CHG72212
    PERFORM processa_dados_produto.
  ENDIF.
***
  IF p_paga = 'X'.
    PERFORM processa_dados_cond_pagamento.
  ENDIF.
***
  IF p_zona = 'X'.
    PERFORM processa_zona_distribuicao.
  ENDIF.
***
  IF p_inco = 'X'.
    PERFORM processa_incoterms.
  ENDIF.
***
  IF p_ordem = 'X'.
    PERFORM processa_tipo_ordem.
  ENDIF.
***
  IF p_moeda = 'X'.
*   Atualiza a tabela no Oracle de Tipos de Moedas
    PERFORM processa_moeda.
  ENDIF.
***
  IF p_recusa = 'X'.
*   Atualiza no Oracle a tabela Motivo da Recusa
    PERFORM processa_recusa.
  ENDIF.
***
  IF p_remess = 'X'.
*   Atualiza no Oracle a Tabela Bloqueio de Remessa
    PERFORM processa_remessa.
  ENDIF.
***
  IF p_escrit = 'X'.
    PERFORM processa_escritorios_de_vendas.
  ENDIF.
***
  IF chk_ztsd IS NOT INITIAL.                                                                        "CHG155287
    PERFORM process_ztsd_cost.                                                                       "CHG155287
  ENDIF.                                                                                             "CHG155287
  IF p_centro = 'X'.
    PERFORM processa_centro_expedidor.
  ENDIF.
****
  IF p_bloq = 'X'.
    PERFORM processa_bloq_faturamento.
  ENDIF.
***
  IF p_lista = 'X'.
    PERFORM processa_lista_preco.
  ENDIF.
***
  IF p_ativi = 'X'.
    PERFORM carga_setor_atividade.
  ENDIF.
***
  IF p_mbcre = 'X'.
    PERFORM carga_motivo_bloqueio_credito.
  ENDIF.
***
  IF p_regi = 'X'.
    PERFORM carga_tabela_registro. " ZTMM_REGMIN
  ENDIF.
***                                                                                                 "CHG72212
  IF p_fpgto = 'X'.                                                                                 "CHG72212
    PERFORM carga_formas_pagamento.                                                                 "CHG72212
  ENDIF.                                                                                            "CHG72212
***                                                                                                 "CHG72212
  IF p_grpma = 'X'.                                                                                 "CHG72212
    PERFORM carga_grupo_material.                                                                   "CHG72212
  ENDIF.                                                                                            "CHG72212
***                                                                                                 "CHG72212
  IF p_tppgt = 'X'.                                                                                 "CHG72212
    PERFORM carga_tipo_pgto.                                                                        "CHG72212
  ENDIF.                                                                                            "CHG72212

  EXEC SQL.
    COMMIT
  ENDEXEC.

ENDFORM.                    "processa_dados_pedidos

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_TIPO_IMPOSTO
*&---------------------------------------------------------------------*
FORM processa_dados_tipo_imposto.
* Selecionando da tabela j_1baj todos os tipos de impostos
  SELECT taxtyp taxgrp INTO TABLE t_tp_imposto FROM j_1baj.

  IF sy-subrc <> 0.
*   Dados dos tipos de Impostos não foram Encontrados
    WRITE: / text-m02.
    ULINE.
    EXIT.
  ENDIF.

  SORT t_tp_imposto BY cd_tipo.

* Selecioando a descrição dos tipos de impostos.
  SELECT taxtyp ttypetxt INTO TABLE t_ds_imposto
          FROM j_1bajt FOR ALL ENTRIES IN t_tp_imposto
          WHERE spras = c_spras
          AND   taxtyp = t_tp_imposto-cd_tipo.

  IF sy-subrc <> 0.
*   Dados da descrição dos tipos de Impostos não foram Encontrados
    WRITE: / text-m03, c_spras.
    ULINE.
*    exit.
  ENDIF.

  SORT t_ds_imposto BY cd_tipo.
*Alimentando a tabela de tipos de impostos no Oracle
  LOOP AT t_tp_imposto.
    READ TABLE t_ds_imposto WITH KEY cd_tipo = t_tp_imposto-cd_tipo
                                                      BINARY SEARCH.
    IF sy-subrc <> 0 OR t_ds_imposto-ds_tipo IS INITIAL.
      t_ds_imposto-ds_tipo = c_texto.  "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_TIPO_IMPOSTO                                                                                      /* CHG112963 */
        INTO :t_tp_imposto-cd_tipo                                                                                /* CHG112963 */
        FROM VND.TIPO_IMPOSTO                                                                                     /* CHG112963 */
       WHERE CD_TIPO_IMPOSTO = :t_tp_imposto-cd_tipo                                                              /* CHG112963 */
         AND CD_GRUPO_IMPOSTO = :t_tp_imposto-cd_grupo                                                            /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.TIPO_IMPOSTO (                                                                            /* CHG112963 */
          CD_TIPO_IMPOSTO,                                                                                        /* CHG112963 */
          CD_GRUPO_IMPOSTO,                                                                                       /* CHG112963 */
          DS_TIPO_IMPOSTO                                                                                         /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_tp_imposto-cd_tipo,                                                                                  /* CHG112963 */
          :t_tp_imposto-cd_grupo,                                                                                 /* CHG112963 */
          :t_ds_imposto-ds_tipo                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.TIPO_IMPOSTO                                                                                   /* CHG112963 */
           SET DS_TIPO_IMPOSTO = :t_ds_imposto-ds_tipo                                                            /* CHG112963 */
         WHERE CD_TIPO_IMPOSTO = :t_tp_imposto-cd_tipo                                                            /* CHG112963 */
           AND CD_GRUPO_IMPOSTO = :t_tp_imposto-cd_grupo                                                          /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963

    CLEAR t_ds_imposto.
  ENDLOOP.
ENDFORM.                               " PROCESSA_DADOS_TIPO_IMPOSTO
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_CODIGO_IMPOSTO
*&---------------------------------------------------------------------*
*       text
FORM processa_dados_codigo_imposto.
* Selecionando todos os códigos de impostos
  SELECT taxcode txt INTO TABLE t_cd_imposto
                     FROM j_1btxsdct
                     WHERE langu = c_spras.
  IF sy-subrc <> 0.
*  Dados doS códigos de impostos não foram Encontrados
    WRITE: / text-m04, c_spras.
    ULINE.
    EXIT.
  ENDIF.

*Alimentando a tabela de códigos de impostos no Oracle
  LOOP AT t_cd_imposto.
    IF t_cd_imposto-ds_imposto IS INITIAL.
      t_cd_imposto-ds_imposto = c_texto. "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_CODIGO_IMPOSTO                                                                                    /* CHG112963 */
        INTO :t_cd_imposto-cd_imposto                                                                             /* CHG112963 */
        FROM VND.CODIGO_IMPOSTO                                                                                   /* CHG112963 */
       WHERE CD_CODIGO_IMPOSTO = :t_cd_imposto-cd_imposto                                                         /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.CODIGO_IMPOSTO (                                                                          /* CHG112963 */
          CD_CODIGO_IMPOSTO,                                                                                      /* CHG112963 */
          DS_CODIGO_IMPOSTO                                                                                       /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_cd_imposto-cd_imposto,                                                                               /* CHG112963 */
          :t_cd_imposto-ds_imposto                                                                                /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.CODIGO_IMPOSTO                                                                                 /* CHG112963 */
           SET DS_CODIGO_IMPOSTO = :t_cd_imposto-ds_imposto                                                       /* CHG112963 */
         WHERE CD_CODIGO_IMPOSTO = :t_cd_imposto-cd_imposto                                                       /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963

  ENDLOOP.

ENDFORM.                               " PROCESSA_DADOS_CODIGO_IMPOSTO

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_CULTURA
FORM processa_dados_cultura.
*Selecionando dados do tipo da cultura na tabela TVM4T                                              "CHG72212
  SELECT a~mvgr4 b~bezei                                                                            "CHG72212
INTO TABLE t_cultura                                                                                "CHG72212
    FROM tvm4   AS a                                                                                "CHG72212
LEFT OUTER JOIN tvm4t  AS b                                                                         "CHG72212
      ON a~mvgr4 = b~mvgr4                                                                          "CHG72212
     AND b~spras = c_spras.                                                                         "CHG72212

  IF sy-subrc <> 0.
*  Dados do tipo da cultura  não foram Encontrados para
    WRITE: / text-m05, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela no Oracle dados da cultura
  LOOP AT t_cultura.
    IF t_cultura-ds_cultura IS INITIAL.
      t_cultura-ds_cultura = c_texto.  " Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_CULTURA_SAP                                                                                       /* CHG112963 */
        INTO :t_cultura-cd_cultura                                                                                /* CHG112963 */
        FROM CTF.CULTURA_SAP                                                                                      /* CHG112963 */
       WHERE CD_CULTURA_SAP = :t_cultura-cd_cultura                                                               /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.CULTURA_SAP (                                                                             /* CHG112963 */
          CD_CULTURA_SAP,                                                                                         /* CHG112963 */
          DS_CULTURA_SAP                                                                                          /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_cultura-cd_cultura,                                                                                  /* CHG112963 */
          :t_cultura-ds_cultura                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE CTF.CULTURA_SAP                                                                                    /* CHG112963 */
           SET DS_CULTURA_SAP = :t_cultura-ds_cultura                                                             /* CHG112963 */
         WHERE CD_CULTURA_SAP = :t_cultura-cd_cultura                                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_DADOS_CULTURA
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_SACARIA
*&---------------------------------------------------------------------*
FORM processa_dados_sacaria.

*Selecionando dados do tipo sacaria na tabela TVM3T                                                 "CHG72212

  SELECT a~mvgr3 b~bezei                                                                            "CHG72212
INTO TABLE t_sacaria                                                                                "CHG72212
    FROM tvm3   AS a                                                                                "CHG72212
LEFT OUTER JOIN tvm3t  AS b                                                                         "CHG72212
      ON a~mvgr3 = b~mvgr3                                                                          "CHG72212
     AND b~spras = c_spras.                                                                         "CHG72212

  IF sy-subrc <> 0.
*  Dados do tipo sacaria não foram Encontrados para
    WRITE: / text-m06, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela no Oracle dados da cultura
  LOOP AT t_sacaria.
    IF t_sacaria-ds_sacaria IS INITIAL.
      t_sacaria-ds_sacaria  = c_texto. " Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_SACARIA                                                                                           /* CHG112963 */
        INTO :t_sacaria-cd_sacaria                                                                                /* CHG112963 */
        FROM VND.SACARIA                                                                                          /* CHG112963 */
       WHERE CD_SACARIA = :t_sacaria-cd_sacaria                                                                   /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.SACARIA (                                                                                 /* CHG112963 */
          CD_SACARIA,                                                                                             /* CHG112963 */
          DS_SACARIA                                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_sacaria-cd_sacaria,                                                                                  /* CHG112963 */
          :t_sacaria-ds_sacaria                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.SACARIA                                                                                        /* CHG112963 */
           SET DS_SACARIA = :t_sacaria-ds_sacaria                                                                 /* CHG112963 */
         WHERE CD_SACARIA = :t_sacaria-cd_sacaria                                                                 /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_DADOS_SACARIA
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_MOTIVO_ORDEM
*&---------------------------------------------------------------------*
FORM processa_dados_motivo_ordem.
  SELECT augru bezei INTO TABLE t_motivo_ordem
                     FROM tvaut
                     WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados do motivo da ordem não foram Encontrados para
    WRITE: / text-m07, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela no Oracle de Motivo da Ordem
  LOOP AT t_motivo_ordem.
    IF t_motivo_ordem-ds_motivo IS INITIAL.
      t_motivo_ordem-ds_motivo = c_texto." Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_MOTIVO_ORDEM                                                                                      /* CHG112963 */
        INTO :t_motivo_ordem-cd_motivo                                                                            /* CHG112963 */
        FROM VND.MOTIVO_ORDEM                                                                                     /* CHG112963 */
       WHERE CD_MOTIVO_ORDEM = :t_motivo_ordem-cd_motivo                                                          /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.MOTIVO_ORDEM (                                                                            /* CHG112963 */
          CD_MOTIVO_ORDEM,                                                                                        /* CHG112963 */
          DS_MOTIVO_ORDEM                                                                                         /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_motivo_ordem-cd_motivo,                                                                              /* CHG112963 */
          :t_motivo_ordem-ds_motivo                                                                               /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.MOTIVO_ORDEM                                                                                   /* CHG112963 */
           SET DS_MOTIVO_ORDEM = :t_motivo_ordem-ds_motivo                                                        /* CHG112963 */
         WHERE CD_MOTIVO_ORDEM = :t_motivo_ordem-cd_motivo                                                        /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_DADOS_MOTIVO_ORDEM
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_PRODUTO
*&---------------------------------------------------------------------*
FORM processa_dados_produto.
  DATA: w_commit(3) TYPE n,
        w_bloqueio(1).
* Selecionando todas as linhas de produtos com idioma  = PT

  SELECT a~matkl a~begru b~wgbez
         FROM t023 AS a INNER JOIN
         t023t AS b ON a~matkl EQ b~matkl
         INTO TABLE t_linha_produto
         WHERE b~spras = c_spras.

  DATA:  v_vendavel(1)   TYPE c.

  IF sy-subrc <> 0.
*  Dados da linha do produto não foram Encontrados para
    WRITE: / text-m18, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  SELECT matnr vkorg vtweg                                                                          "CHG72212
      INTO TABLE t_product_sales_area                                                               "CHG72212
        FROM mvke                                                                                   "CHG72212
      WHERE vkorg IN r_vkorg                                                                        "CHG72212
        AND vtweg IN r_vtweg.                                                                       "CHG72212

  IF NOT t_product_sales_area[] IS INITIAL.
    SORT t_product_sales_area BY matnr.
*   All products from Brazil sales areas, with their material group.
*   If a material group exists in this table, it is marked as sellable
    SELECT matnr matkl
       INTO TABLE t_mara
         FROM mara
         FOR ALL ENTRIES IN t_product_sales_area
         WHERE matnr = t_product_sales_area-matnr.

*   Selecionando todos os Materiais da tabela MARA para carga
*   na tabela produto_sap no Oracle
    SELECT matnr matkl meins matnr mtart lvorm ersda laeda mstav ergew ergei ervol ervoe spart magrv"CHG72212
       INTO TABLE t_produto
         FROM mara
         FOR ALL ENTRIES IN t_product_sales_area
         WHERE matnr = t_product_sales_area-matnr
           AND ersda >= w_dt_ult.

    SELECT matnr matkl meins matnr mtart lvorm ersda laeda mstav ergew ergei ervol ervoe spart magrv"CHG72212
       APPENDING TABLE t_produto
         FROM mara
         FOR ALL ENTRIES IN t_product_sales_area
         WHERE matnr = t_product_sales_area-matnr
           AND laeda >= w_dt_ult.
  ENDIF.


  IF t_produto[] IS INITIAL.
*   Dados dos Produtos não foram Encontrados
    WRITE: / text-m19.
    ULINE.
    EXIT.
  ENDIF.

  IF p_prod <> 'X'.
    EXIT.
  ENDIF.

* Alimentando a tabela Linha_produto_sap no Oracle
  SORT t_product_sales_area BY matnr.
  LOOP AT t_linha_produto.

    CLEAR v_vendavel.

    SORT t_mara BY matkl.
    READ TABLE t_mara WITH KEY matkl = t_linha_produto-cd_produto BINARY SEARCH.
    IF sy-subrc <> 0.
*      No product found with this material group.
      v_vendavel = 'N'.
    ELSE.
      v_vendavel = 'S'.
    ENDIF.

    IF t_linha_produto-ds_produto IS INITIAL.
      t_linha_produto-ds_produto = c_texto. "Em Branco
    ENDIF.

    EXEC SQL.
      SELECT CD_LINHA_PRODUTO_SAP                                                                                 /* CHG112963 */
        INTO :t_linha_produto-cd_produto                                                                          /* CHG112963 */
        FROM CTF.LINHA_PRODUTO_SAP                                                                                /* CHG112963 */
       WHERE CD_LINHA_PRODUTO_SAP = :t_linha_produto-cd_produto                                                   /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.LINHA_PRODUTO_SAP (                                                                       /* CHG112963 */
          CD_LINHA_PRODUTO_SAP,                                                                                   /* CHG112963 */
          NO_LINHA_PRODUTO_SAP,                                                                                   /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          IC_VENDAVEL                                                                                             /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_linha_produto-cd_produto,                                                                            /* CHG112963 */
          :t_linha_produto-ds_produto,                                                                            /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          :v_vendavel                                                                                             /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.
      EXEC SQL.
        UPDATE CTF.LINHA_PRODUTO_SAP                                                                              /* CHG112963 */
           SET NO_LINHA_PRODUTO_SAP = :t_linha_produto-ds_produto,                                                /* CHG112963 */
               IC_ATIVO             = 'S',                                                                        /* CHG112963 */
               IC_VENDAVEL          = :v_vendavel                                                                 /* CHG112963 */
         WHERE CD_LINHA_PRODUTO_SAP = :t_linha_produto-cd_produto                                                 /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

  SORT t_produto BY matnr.
* Selecionando todas as descrições dos Materiais (Produtos)
  SELECT matnr maktx
    INTO TABLE t_descricao
      FROM makt
      FOR ALL ENTRIES IN t_produto
    WHERE matnr = t_produto-matnr(18)
      AND spras = c_spras.

  IF sy-subrc <> 0.
*   Descricão dos Produtos não foram encontrados
    WRITE: / text-m20.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a Tabela de Produdo_Sap No Oracle
  SORT t_descricao BY cd_produto.

  LOOP AT t_produto.

    CLEAR: t_descricao, t_ausp, t_ztpp_garant, t_ztmm_regmin.
    CLEAR: v_n, v_p, v_k, v_s, v_ca, v_mg,                                                          "CHG72212
           v_zn, v_b, v_co, v_cu, v_fe, v_mn, v_mo.                                                 "CHG72212
    CLEAR: v_objek, itab_class, itab_objectdata.                                                    "CHG72212

    READ TABLE t_descricao WITH KEY cd_produto = t_produto-cd_produto
                                                        BINARY SEARCH.

    IF sy-subrc <> 0 OR t_descricao-ds_produto IS INITIAL.
      t_descricao-ds_produto = c_texto."Em Branco
    ENDIF.


*   Quando for X alterar para N
    IF t_produto-lvorm = 'X' OR t_produto-lvorm = 'x'.
      t_produto-lvorm = 'N'.
    ELSE.
      t_produto-lvorm = 'S'.
    ENDIF.

*   Verificando se o material está ou não bloqueado                                                 "CHG72212
    IF t_produto-mstav IS INITIAL.                                                                  "CHG72212
      w_bloqueio = 'N'.                                                                             "CHG72212
    ELSE.                                                                                           "CHG72212
      w_bloqueio = 'S'.                                                                             "CHG72212
    ENDIF.                                                                                          "CHG72212

    v_objek = t_produto-cd_produto.                                                                 "CHG72212

*convert date format from DDMMYYYY to MMDDYYYY                                                      "CHG72212
    CLEAR v_datum.                                                                                  "CHG72212
    CALL FUNCTION 'RP_FORMATING_DATE'                                                               "CHG72212
      EXPORTING                                                                                     "CHG72212
        date_i             = sy-datum                                                               "CHG72212
      IMPORTING                                                                                     "CHG72212
        date_o             = v_datum                                                                "CHG72212
          .                                                                                         "CHG72212

    CALL FUNCTION 'CLAF_CLASSIFICATION_OF_OBJECTS'                                                  "CHG72212
      EXPORTING                                                                                     "CHG72212
       classtype                  = '001'                                                           "CHG72212
       features                   = 'X'                                                             "CHG72212
       object                     = v_objek                                                         "CHG72212
       key_date                   = v_datum                                                         "CHG72212
       initial_charact            = ' '                                                             "CHG72212
      TABLES                                                                                        "CHG72212
       t_class                    = itab_class                                                      "CHG72212
       t_objectdata               = itab_objectdata                                                 "CHG72212
     EXCEPTIONS                                                                                     "CHG72212
      no_classification          = 1                                                                "CHG72212
      no_classtypes              = 2                                                                "CHG72212
      invalid_class_type         = 3                                                                "CHG72212
      OTHERS                     = 4                                                                "CHG72212
                  .                                                                                 "CHG72212

    LOOP AT itab_objectdata INTO wa_objectdata.                                                     "CHG72212
      PERFORM acha_teor.
    ENDLOOP.                                                                                        "CHG72212


*   Formatando as datas para formato Oracle
    t_produto-dh_criacao(2)   = t_produto-ersda+6(2).                                               "CHG72212
    t_produto-dh_criacao+2(1) = '/'.                                                                "CHG72212
    t_produto-dh_criacao+3(2) = t_produto-ersda+4(2).                                               "CHG72212
    t_produto-dh_criacao+5(1) = '/'.                                                                "CHG72212
    t_produto-dh_criacao+6(4) = t_produto-ersda(4).                                                 "CHG72212
    IF t_produto-dh_criacao = '00/00/0000'.
      t_produto-dh_criacao = '31/12/9999'.
    ENDIF.
    t_produto-dh_altera(2)   = t_produto-laeda+6(2).                                                "CHG72212
    t_produto-dh_altera+2(1) = '/'.                                                                 "CHG72212
    t_produto-dh_altera+3(2) = t_produto-laeda+4(2).                                                "CHG72212
    t_produto-dh_altera+5(1) = '/'.                                                                 "CHG72212
    t_produto-dh_altera+6(4) = t_produto-laeda(4).                                                  "CHG72212
    IF t_produto-dh_altera = '00/00/0000'.
      t_produto-dh_altera = '31/12/9999'.
    ENDIF.

    EXEC SQL.
      SELECT CD_PRODUTO_SAP                                                                                       /* CHG112963 */
        INTO :t_produto-cd_produto                                                                                /* CHG112963 */
        FROM CTF.PRODUTO_SAP                                                                                      /* CHG112963 */
       WHERE CD_PRODUTO_SAP = :t_produto-cd_produto                                                               /* CHG112963 */
    ENDEXEC.

    IF sy-subrc <> 0.                                                                               "CHG112963
*     Incluindo os registros dos produtos
      EXEC SQL.
        INSERT INTO CTF.PRODUTO_SAP (                                                                             /* CHG112963 */
          CD_PRODUTO_SAP,                                                                                         /* CHG112963 */
          CD_UNIDADE_MEDIDA_SAP,                                                                                  /* CHG112963 */
          CD_LINHA_PRODUTO_SAP,                                                                                   /* CHG112963 */
          NO_PRODUTO_SAP,                                                                                         /* CHG112963 */
          SG_PRODUTO_SERVICO,                                                                                     /* CHG112963 */
          IC_PRODUTO_CARGILL,                                                                                     /* CHG112963 */
          SG_COMERCIALIZACAO,                                                                                     /* CHG112963 */
          SG_ESTADO_FISICO,                                                                                       /* CHG112963 */
          PC_NITROGENIO,                                                                                          /* CHG112963 */
          PC_FOSFORO,                                                                                             /* CHG112963 */
          PC_POTASSIO,                                                                                            /* CHG112963 */
          PC_ENXOFRE,                                                                                             /* CHG112963 */
          DH_INCLUSAO,                                                                                            /* CHG112963 */
          DH_ULT_ALTERACAO,                                                                                       /* CHG112963 */
          PC_CALCIO,                                                                                              /* CHG112963 */
          PC_MAGNESIO,                                                                                            /* CHG112963 */
          PC_ZINCO,                                                                                               /* CHG112963 */
          PC_BORO,                                                                                                /* CHG112963 */
          PC_COBALTO,                                                                                             /* CHG112963 */
          PC_COBRE,                                                                                               /* CHG112963 */
          PC_FERRO,                                                                                               /* CHG112963 */
          PC_MANGANES,                                                                                            /* CHG112963 */
          PC_MOLIBDENIO,                                                                                          /* CHG112963 */
          CD_TIPO_MATERIAL,                                                                                       /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          IC_BLOQUEIO,                                                                                            /* CHG112963 */
          QT_PESO_EMBALAGEM,                                                                                      /* CHG112963 */
          CD_UNIDADE_MEDIDA_PESO,                                                                                 /* CHG112963 */
          QT_VOLUME_EMBALAGEM,                                                                                    /* CHG112963 */
          CD_UNIDADE_MEDIDA_VOLUME,                                                                               /* CHG112963 */
          CD_SALES_DIVISION,                                                                                      /* CHG112963 */
          CD_GRUPO_MATERIAL                                                                                       /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_produto-cd_produto,                                                                                  /* CHG112963 */
          DECODE( :t_produto-cd_unidade, ' ', NULL, :t_produto-cd_unidade ),                                      /* CHG112963 */
          DECODE( :t_produto-cd_linha, ' ', NULL, :t_produto-cd_linha ),                                          /* CHG112963 */
          :t_descricao-ds_produto,                                                                                /* CHG112963 */
          'P',                                                                                                    /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          'A',                                                                                                    /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          :v_n,                                                                                                   /* CHG112963 */
          :v_p,                                                                                                   /* CHG112963 */
          :v_k,                                                                                                   /* CHG112963 */
          :v_s,                                                                                                   /* CHG112963 */
          TO_DATE( :t_produto-dh_criacao, 'DD/MM/YYYY' ),                                                         /* CHG112963 */
          TO_DATE( :t_produto-dh_altera, 'DD/MM/YYYY' ),                                                          /* CHG112963 */
          :v_ca,                                                                                                  /* CHG112963 */
          :v_mg,                                                                                                  /* CHG112963 */
          :v_zn,                                                                                                  /* CHG112963 */
          :v_b,                                                                                                   /* CHG112963 */
          :v_co,                                                                                                  /* CHG112963 */
          :v_cu,                                                                                                  /* CHG112963 */
          :v_fe,                                                                                                  /* CHG112963 */
          :v_mn,                                                                                                  /* CHG112963 */
          :v_mo,                                                                                                  /* CHG112963 */
          :t_produto-mtart,                                                                                       /* CHG112963 */
          :t_produto-lvorm,                                                                                       /* CHG112963 */
          :w_bloqueio,                                                                                            /* CHG112963 */
          :t_produto-ergew,                                                                                       /* CHG112963 */
          DECODE( :t_produto-ergei, ' ', null, :t_produto-ergei ),                                                /* CHG112963 */
          :t_produto-ervol,                                                                                       /* CHG112963 */
          DECODE( :t_produto-ervoe, ' ', null, :t_produto-ervoe ),                                                /* CHG112963 */
          :t_produto-spart,                                                                                       /* CHG112963 */
          :t_produto-magrv                                                                                        /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
*        added spart field in above block                                                           "CHG72212
*     Alterando os registros dos produtos
      EXEC SQL.
        UPDATE CTF.PRODUTO_SAP                                                                                    /* CHG112963 */
           SET CD_UNIDADE_MEDIDA_SAP    = DECODE( :t_produto-cd_unidade, ' ', NULL, :t_produto-cd_unidade ),      /* CHG112963 */
               CD_LINHA_PRODUTO_SAP     = DECODE( :t_produto-cd_linha, ' ', NULL, :t_produto-cd_linha ),          /* CHG112963 */
               NO_PRODUTO_SAP           = :t_descricao-ds_produto,                                                /* CHG112963 */
               SG_PRODUTO_SERVICO       = 'P',                                                                    /* CHG112963 */
               IC_PRODUTO_CARGILL       = 'S',                                                                    /* CHG112963 */
               SG_COMERCIALIZACAO       = 'A',                                                                    /* CHG112963 */
               SG_ESTADO_FISICO         = 'S',                                                                    /* CHG112963 */
               PC_NITROGENIO            = :v_n,                                                                   /* CHG112963 */
               PC_FOSFORO               = :v_p,                                                                   /* CHG112963 */
               PC_POTASSIO              = :v_k,                                                                   /* CHG112963 */
               PC_ENXOFRE               = :v_s,                                                                   /* CHG112963 */
               DH_INCLUSAO              = TO_DATE( :t_produto-dh_criacao, 'DD/MM/YYYY' ),                         /* CHG112963 */
               DH_ULT_ALTERACAO         = TO_DATE( :t_produto-dh_altera, 'DD/MM/YYYY' ),                          /* CHG112963 */
               PC_CALCIO                = :v_ca,                                                                  /* CHG112963 */
               PC_MAGNESIO              = :v_mg,                                                                  /* CHG112963 */
               PC_ZINCO                 = :v_zn,                                                                  /* CHG112963 */
               PC_BORO                  = :v_b,                                                                   /* CHG112963 */
               PC_COBALTO               = :v_co,                                                                  /* CHG112963 */
               PC_COBRE                 = :v_cu,                                                                  /* CHG112963 */
               PC_FERRO                 = :v_fe,                                                                  /* CHG112963 */
               PC_MANGANES              = :v_mn,                                                                  /* CHG112963 */
               PC_MOLIBDENIO            = :v_mo,                                                                  /* CHG112963 */
               CD_TIPO_MATERIAL         = :t_produto-mtart,                                                       /* CHG112963 */
               IC_ATIVO                 = :t_produto-lvorm,                                                       /* CHG112963 */
               IC_BLOQUEIO              = :w_bloqueio,                                                            /* CHG112963 */
               QT_PESO_EMBALAGEM        = :t_produto-ergew,                                                       /* CHG112963 */
               CD_UNIDADE_MEDIDA_PESO   = DECODE( :t_produto-ergei, ' ', NULL, :t_produto-ergei ),                /* CHG112963 */
               QT_VOLUME_EMBALAGEM      = :t_produto-ervol,                                                       /* CHG112963 */
               CD_UNIDADE_MEDIDA_VOLUME = DECODE( :t_produto-ervoe, ' ', NULL, :t_produto-ervoe ),                /* CHG112963 */
               CD_SALES_DIVISION        = :t_produto-spart,                                                       /* CHG112963 */
               CD_GRUPO_MATERIAL        = :t_produto-magrv                                                        /* CHG112963 */
         WHERE CD_PRODUTO_SAP = :t_produto-cd_produto                                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
*      added spart field in above block                                                             "CHG72212

    w_commit = w_commit + 1.

    IF w_commit = 100.
      EXEC SQL.
        COMMIT
      ENDEXEC.
      CLEAR w_commit.
    ENDIF.

  ENDLOOP.

  PERFORM processa_dados_produto_v1.                                                                "CHG72212

*  Perform para carga do produto centro
  PERFORM carga_produto_centro. "MARC CTF.PRODUTO_CENTRO

ENDFORM.                               " PROCESSA_DADOS_PRODUTO
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_COND_PAGAMENTO
*&---------------------------------------------------------------------*
FORM processa_dados_cond_pagamento.
* Selecionando dados das condições de pagamentos
  SELECT zterm text1 INTO TABLE t_pagamento
                      FROM t052u
                      WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados das condições de pagamento não foram Encontrados para
    WRITE: / text-m08, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando dados na tabela do Oracle das condicoes de pagamento
  LOOP AT t_pagamento.
    IF t_pagamento-ds_pagamento IS INITIAL.
      t_pagamento-ds_pagamento = c_texto.
    ENDIF.

    EXEC SQL.
      SELECT CD_CONDICOES_PAGAMENTO                                                                               /* CHG112963 */
        INTO :t_pagamento-cd_pagamento                                                                            /* CHG112963 */
        FROM VND.CONDICOES_PAGAMENTO                                                                              /* CHG112963 */
       WHERE CD_CONDICOES_PAGAMENTO = :t_pagamento-cd_pagamento                                                   /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.CONDICOES_PAGAMENTO (                                                                     /* CHG112963 */
          CD_CONDICOES_PAGAMENTO,
          DS_CONDICOES_PAGAMENTO
        ) VALUES (
          :t_pagamento-cd_pagamento,
          :t_pagamento-ds_pagamento
        )
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.CONDICOES_PAGAMENTO                                                                            /* CHG112963 */
           SET DS_CONDICOES_PAGAMENTO = :t_pagamento-ds_pagamento                                                 /* CHG112963 */
         WHERE CD_CONDICOES_PAGAMENTO = :t_pagamento-cd_pagamento                                                 /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_DADOS_COND_PAGAMENTO
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_ZONA_DISTRIBUICAO
*&---------------------------------------------------------------------*
FORM processa_zona_distribuicao.
* Selecionando todas as zonas de distribuição com idioma PT
  SELECT bzirk bztxt INTO TABLE t_zona
                     FROM t171t
                     WHERE spras = c_spras.

  IF sy-subrc <> 0.
*    Dados da zona de Distribuição não foram encontrados para
    WRITE: / text-m11, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Carga na tabela de zona de distribuição no Oracle
  LOOP AT t_zona.
    IF t_zona-ds_zona IS INITIAL.
      t_zona-ds_zona = c_texto.        "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_ZONA_DISTRIBUICAO                                                                                 /* CHG112963 */
        INTO :t_zona-cd_zona                                                                                      /* CHG112963 */
        FROM VND.ZONA_DISTRIBUICAO                                                                                /* CHG112963 */
       WHERE CD_ZONA_DISTRIBUICAO = :t_zona-cd_zona                                                               /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.ZONA_DISTRIBUICAO (                                                                       /* CHG112963 */
          CD_ZONA_DISTRIBUICAO,                                                                                   /* CHG112963 */
          DS_ZONA_DISTRIBUICAO                                                                                    /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_zona-cd_zona,                                                                                        /* CHG112963 */
          :t_zona-ds_zona                                                                                         /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.ZONA_DISTRIBUICAO                                                                              /* CHG112963 */
           SET DS_ZONA_DISTRIBUICAO = :t_zona-ds_zona                                                             /* CHG112963 */
         WHERE CD_ZONA_DISTRIBUICAO = :t_zona-cd_zona                                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                               " PROCESSA_ZONA_DISTRIBUICAO

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_INCOTERMS
*&---------------------------------------------------------------------*
FORM processa_incoterms.
* Selecionando todos os Incoterms com idioma = PT
  SELECT inco1 bezei INTO TABLE t_incoterms
                     FROM tinct
                     WHERE spras = c_spras.
  IF sy-subrc <> 0.
*    Dados dos Incoterms não foram encontrados para
    WRITE: / text-m12, c_spras.
    ULINE.
    EXIT.
  ENDIF.


* Alimentando a tabela de Incoterms no Oralce
  LOOP AT t_incoterms.

    IF t_incoterms-ds_incoterms IS INITIAL.
      t_incoterms-ds_incoterms = c_texto.   " Em Branco
    ENDIF.

    EXEC SQL.
      SELECT CD_INCOTERMS                                                                                         /* CHG112963 */
        INTO :t_incoterms-cd_incoterms                                                                            /* CHG112963 */
        FROM VND.INCOTERMS                                                                                        /* CHG112963 */
       WHERE CD_INCOTERMS = :t_incoterms-cd_incoterms                                                             /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.INCOTERMS (                                                                               /* CHG112963 */
          CD_INCOTERMS,                                                                                           /* CHG112963 */
          DS_INCOTERMS                                                                                            /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_incoterms-cd_incoterms,                                                                              /* CHG112963 */
          :t_incoterms-ds_incoterms                                                                               /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.INCOTERMS                                                                                      /* CHG112963 */
           SET DS_INCOTERMS = :t_incoterms-ds_incoterms                                                           /* CHG112963 */
         WHERE CD_INCOTERMS = :t_incoterms-cd_incoterms                                                           /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.


ENDFORM.                               " PROCESSA_INCOTERMS

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_TIPO_ORDEM
*&---------------------------------------------------------------------*
FORM processa_tipo_ordem.
* Selecionando todos os tipos de ordens com idioma = PT

  SELECT a~auart a~bezei b~vkorg b~vtweg b~spart c~vbtyp                                            "CHG72212
    INTO CORRESPONDING FIELDS OF TABLE t_tipo_ordem                                                 "CHG72212
    FROM (                                                                                          "CHG72212
            ( tvakt AS a INNER JOIN tvakz AS b ON a~auart = b~auart )                               "CHG72212
            INNER JOIN tvak AS c ON a~auart = c~auart                                               "CHG72212
         )                                                                                          "CHG72212
   WHERE a~spras = c_spras                                                                          "CHG72212
     AND b~vkorg IN r_vkorg                                                                         "CHG72212
     AND b~vtweg IN r_vtweg.                                                                        "CHG72212

  IF sy-subrc <> 0.
*    Dados tipos de Ordens não foram encontrados para
    WRITE: / text-m13, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela de tipo de ordem no Oracle
  LOOP AT t_tipo_ordem.
    IF t_tipo_ordem-bezei IS INITIAL.
      t_tipo_ordem-bezei = c_texto.   " Em Branco
    ENDIF.                                                                                          "CHG128174
                                                                                                    "CHG128174
* If document type auart is one among the USD document types, flag the entry as USD.                "CHG128174
    IF t_tipo_ordem-auart IN r_auart.                                                               "CHG128174
      t_tipo_ordem-usd_flag = c_s.                                                                  "CHG128174
    ELSE.                                                                                           "CHG128174
      t_tipo_ordem-usd_flag = c_n.                                                                  "CHG128174
    ENDIF.
    MODIFY t_tipo_ordem TRANSPORTING usd_flag.                                                      "CHG128174
                                                                                                    "CHG128174

*  added VKORG VTWEG SPART VBTYP into the above block                                               "CHG128174
    EXEC SQL.
      SELECT CD_TIPO_ORDEM                                                                                        /* CHG112963 */
        INTO :t_tipo_ordem-auart                                                                                  /* CHG112963 */
        FROM VND.TIPO_ORDEM
       WHERE CD_TIPO_ORDEM            = :t_tipo_ordem-auart
         AND CD_SALES_ORG             = :t_tipo_ordem-vkorg
         AND CD_DISTRIBUTION_CHANNEL  = :t_tipo_ordem-vtweg
         AND CD_SALES_DIVISION        = :t_tipo_ordem-spart
    ENDEXEC.

    IF sy-subrc <> 0.
      EXEC SQL.
        INSERT INTO VND.TIPO_ORDEM (                                                                              /* CHG112963 */
          CD_TIPO_ORDEM,
          DS_TIPO_ORDEM,
          CD_SALES_ORG,
          CD_DISTRIBUTION_CHANNEL,
          CD_SALES_DIVISION,
          SG_CATEGORY,                                                                                            /* CHG128174 */
          IC_USD_TIPO_ORDEM                                                                                       /* CHG128174 */
        ) VALUES (
          :t_tipo_ordem-auart,
          :t_tipo_ordem-bezei,
          :t_tipo_ordem-vkorg,
          :t_tipo_ordem-vtweg,
          :t_tipo_ordem-spart,
          :t_tipo_ordem-vbtyp,                                                                                    /* CHG128174 */
          :t_tipo_ordem-usd_flag                                                                                  /* CHG128174 */
        )
      ENDEXEC.
    ELSE.
*  added VKORG VTWEG SPART VBTYP into the above block                                               "CHG72212
      EXEC SQL.
        UPDATE VND.TIPO_ORDEM                                                                                     /* CHG112963 */
           SET DS_TIPO_ORDEM            = :t_tipo_ordem-bezei,                                                    /* CHG112963 */
               SG_CATEGORY              = :t_tipo_ordem-vbtyp,                                                    /* CHG128174 */
               IC_USD_TIPO_ORDEM        = :t_tipo_ordem-usd_flag                                                  /* CHG128174 */
         WHERE CD_TIPO_ORDEM            = :t_tipo_ordem-auart                                                     /* CHG112963 */
           AND CD_SALES_ORG             = :t_tipo_ordem-vkorg                                                     /* CHG112963 */
           AND CD_DISTRIBUTION_CHANNEL  = :t_tipo_ordem-vtweg                                                     /* CHG112963 */
           AND CD_SALES_DIVISION        = :t_tipo_ordem-spart                                                     /* CHG112963 */
      ENDEXEC.
    ENDIF.

  ENDLOOP.

  PERFORM processa_tipo_ordem_v1.                                                                   "CHG72212

ENDFORM.                               " PROCESSA_TIPO_ORDEM
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_SETOR
*&---------------------------------------------------------------------*
FORM processa_dados_setor.
* Selecionando dados do Setor
  SELECT spras brsch brtxt INTO TABLE t_t016t
                                FROM t016t
                                WHERE spras = c_spras.
  IF sy-subrc <> 0.
*  Dados do Setor não foram Encontrados Para
    WRITE: / text-m15, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Inclusão do setor
  DESCRIBE TABLE t_t016t.
  IF sy-tfill NE 0.
    DO sy-tfill TIMES.
      READ TABLE t_t016t INDEX sy-index.

      EXEC SQL.
        SELECT CD_SETOR
          FROM CTF.SETOR
          INTO :w_cd_setor
         WHERE CD_SETOR = :t_t016t-brsch
      ENDEXEC.                                                                                      "CHG72212

      IF sy-subrc <> 0.                                                                             "CHG72212
        EXEC SQL.
          INSERT INTO CTF.SETOR (
              CD_SETOR,
              DS_SETOR
          ) VALUES (
              :t_t016t-brsch,
              :t_t016t-brtxt
          )
        ENDEXEC.
      ELSE.                                                                                         "CHG72212
        EXEC SQL.
          UPDATE CTF.SETOR                                                                                        /* CHG112963 */
             SET DS_SETOR = :t_t016t-brtxt                                                                        /* CHG112963 */
           WHERE CD_SETOR = :t_t016t-brsch                                                                        /* CHG112963 */
        ENDEXEC.
      ENDIF.                                                                                        "CHG72212
    ENDDO.
  ENDIF.

ENDFORM.                               " PROCESSA_DADOS_SETOR

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_SUBSETOR
*&---------------------------------------------------------------------*
FORM processa_dados_subsetor.
* Selecionando dados do Subsetor
  SELECT spras braco vtext INTO TABLE t_tbrct
                           FROM tbrct
                           WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados do Subsetor não foram Encontrados Para
    WRITE: / text-m16, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* inclusão do Subsetor
  DESCRIBE TABLE t_tbrct.
  IF sy-tfill NE 0.
    DO sy-tfill TIMES.
      READ TABLE t_tbrct INDEX sy-index.
      EXEC SQL.
        SELECT CD_SUB_SETOR
          FROM CTF.SUB_SETOR
          INTO :w_cd_sub_setor
         WHERE CD_SUB_SETOR = :t_tbrct-braco
      ENDEXEC.                                                                                      "CHG72212
      IF sy-subrc <> 0.                                                                             "CHG72212
        EXEC SQL.
          INSERT INTO CTF.SUB_SETOR (                                                                             /* CHG112963 */
            CD_SUB_SETOR,                                                                                         /* CHG112963 */
            DS_SUB_SETOR                                                                                          /* CHG112963 */
          ) VALUES (                                                                                              /* CHG112963 */
            :t_tbrct-braco,                                                                                       /* CHG112963 */
            :t_tbrct-vtext                                                                                        /* CHG112963 */
          )                                                                                                       /* CHG112963 */
        ENDEXEC.
      ELSE.                                                                                         "CHG72212
        EXEC SQL.
          UPDATE CTF.SUB_SETOR                                                                                    /* CHG112963 */
             SET DS_SUB_SETOR = :t_tbrct-vtext                                                                    /* CHG112963 */
           WHERE CD_SUB_SETOR = :t_tbrct-braco                                                                    /* CHG112963 */
        ENDEXEC.
      ENDIF.                                                                                        "CHG72212
    ENDDO.
  ENDIF.

ENDFORM.                               " PROCESSA_DADOS_SUBSETOR
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_GRUPOS_CONTAS
*&---------------------------------------------------------------------*
FORM processa_grupos_contas.
* Selecionando Denominação dos grupos de contas
  SELECT ktokd txt30  INTO TABLE t_t077x FROM t077x
         WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados dos grupos de contas não foram Encontrados Para
    WRITE: / text-m17, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Dando Carga na Denominação dos grupos de contas
  DESCRIBE TABLE t_t077x.
  IF sy-tfill NE 0.
    DO sy-tfill TIMES.
      READ TABLE t_t077x INDEX sy-index.

      EXEC SQL.
        SELECT CD_GRUPO_CLIENTES                                                                                  /* CHG112963 */
          INTO :t_t077x-ktokd                                                                                     /* CHG112963 */
          FROM CTF.GRUPO_CLIENTES                                                                                 /* CHG112963 */
         WHERE CD_GRUPO_CLIENTES = :t_t077x-ktokd                                                                 /* CHG112963 */
      ENDEXEC.                                                                                      "CHG72212

      IF sy-subrc <> 0.                                                                             "CHG72212
        EXEC SQL.
          INSERT INTO CTF.GRUPO_CLIENTES (
            CD_GRUPO_CLIENTES,
            DS_GRUPO_CLIENTES
          ) VALUES (
            :t_t077x-ktokd,
            :t_t077x-txt30
          )
        ENDEXEC.
      ELSE.                                                                                         "CHG72212
        EXEC SQL.
          UPDATE CTF.GRUPO_CLIENTES                                                                               /* CHG112963 */
             SET DS_GRUPO_CLIENTES = :t_t077x-txt30                                                               /* CHG112963 */
           WHERE CD_GRUPO_CLIENTES = :t_t077x-ktokd                                                               /* CHG112963 */
        ENDEXEC.
      ENDIF.                                                                                        "CHG72212
    ENDDO.
  ENDIF.

ENDFORM.                               " PROCESSA_GRUPOS_CONTAS

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_MOEDA
*&---------------------------------------------------------------------*
FORM processa_moeda.
* Selecionando todos os tipos de moedas igual a PT
  SELECT waers ltext INTO TABLE t_moeda
                      FROM tcurt
                      WHERE spras = c_spras.
  IF sy-subrc <> 0.
*  Dados dos tipos de moedas não foram Encontrados Para
    WRITE: / text-m21, c_spras.
    ULINE.
    EXIT.
  ENDIF.
* Incluido na tabela Tipo_Moeda no Oracle
  LOOP AT t_moeda.
    t_moeda-cd_tipo_moeda = t_moeda-waers(4).

    IF t_moeda-ds_tipo_moeda IS INITIAL.
      t_moeda-ds_tipo_moeda = c_texto. "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_TIPO_MOEDA
        INTO :t_moeda-cd_tipo_moeda
        FROM CTF.TIPO_MOEDA
       WHERE CD_TIPO_MOEDA = :t_moeda-cd_tipo_moeda
    ENDEXEC.

    IF sy-subrc <> 0.
      EXEC SQL.
        INSERT INTO CTF.TIPO_MOEDA (                                                                              /* CHG112963 */
          CD_TIPO_MOEDA,                                                                                          /* CHG112963 */
          DS_TIPO_MOEDA                                                                                           /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_moeda-cd_tipo_moeda,                                                                                 /* CHG112963 */
          :t_moeda-ds_tipo_moeda                                                                                  /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.
    ELSE.
      EXEC SQL.
        UPDATE CTF.TIPO_MOEDA                                                                                     /* CHG112963 */
           SET DS_TIPO_MOEDA = :t_moeda-ds_tipo_moeda                                                             /* CHG112963 */
         WHERE CD_TIPO_MOEDA = :t_moeda-cd_tipo_moeda                                                             /* CHG112963 */
      ENDEXEC.
    ENDIF.

  ENDLOOP.

ENDFORM.                               " PROCESSA_MOEDA
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_NF
*&---------------------------------------------------------------------*
FORM processa_dados_nf.

  IF p_nf = 'X'.
    PERFORM processa_dados_tipo_notafiscal.
  ENDIF.

  IF p_transp = 'X'.
    PERFORM processa_dados_cate_transporte.
  ENDIF.

  EXEC SQL.
    COMMIT
  ENDEXEC.

ENDFORM.                               " PROCESSA_DADOS_NF

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_TIPO_NOTAFISCAL
*&---------------------------------------------------------------------*
FORM processa_dados_tipo_notafiscal.
* Seleciona todos os tipos de notas ficais
  SELECT nftype nfttxt INTO TABLE t_tipo_nf
                       FROM j_1baat
                       WHERE spras = c_spras.
  IF sy-subrc <> 0.
*  Dados de tipos de notas fiscais não foram Encontrados para
    WRITE: / text-m23, c_spras.
    ULINE.
    EXIT.
  ENDIF.

*Alimentando a tabela de tipos de notas fiscais no Oracle
  LOOP AT t_tipo_nf.

    IF t_tipo_nf-ds_tipo_nf IS INITIAL.
      t_tipo_nf-ds_tipo_nf = c_texto.  "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_TIPO_NOTA_FISCAL                                                                                  /* CHG112963 */
        INTO :t_tipo_nf-cd_tipo_nf                                                                                /* CHG112963 */
        FROM VND.TIPO_NOTA_FISCAL                                                                                 /* CHG112963 */
       WHERE CD_TIPO_NOTA_FISCAL = :t_tipo_nf-cd_tipo_nf                                                          /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.TIPO_NOTA_FISCAL (                                                                        /* CHG112963 */
          CD_TIPO_NOTA_FISCAL,                                                                                    /* CHG112963 */
          DS_TIPO_NOTA_FISCAL                                                                                     /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_tipo_nf-cd_tipo_nf,                                                                                  /* CHG112963 */
          :t_tipo_nf-ds_tipo_nf                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.TIPO_NOTA_FISCAL                                                                               /* CHG112963 */
           SET DS_TIPO_NOTA_FISCAL = :t_tipo_nf-ds_tipo_nf                                                        /* CHG112963 */
         WHERE CD_TIPO_NOTA_FISCAL = :t_tipo_nf-cd_tipo_nf                                                        /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                               " PROCESSA_DADOS_TIPO_NOTAFISCAL

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_CATE_TRANSPORTE
*&---------------------------------------------------------------------*
FORM processa_dados_cate_transporte.
* Selecionando todos os tipos de transportes
  SELECT traty vtext INTO TABLE t_transporte
                      FROM tvtyt
                      WHERE spras = c_spras.
  IF sy-subrc <> 0.
*  Dados dos transportes não foram Encontrados para
    WRITE: / text-m24, c_spras.
    ULINE.
    EXIT.
  ENDIF.


*Alimentando a tabela dos tipos de transportes no Oracle
  LOOP AT t_transporte.

    IF t_transporte-ds_transporte IS INITIAL.
      t_transporte-ds_transporte = c_texto.  "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_CAT_TRANSPORTE                                                                                    /* CHG112963 */
        INTO :t_transporte-cd_transporte                                                                          /* CHG112963 */
        FROM VND.CAT_TRANSPORTE                                                                                   /* CHG112963 */
       WHERE CD_CAT_TRANSPORTE = :t_transporte-cd_transporte                                                      /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.CAT_TRANSPORTE (                                                                          /* CHG112963 */
          CD_CAT_TRANSPORTE,                                                                                      /* CHG112963 */
          DS_CAT_TRANSPORTE                                                                                       /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_transporte-cd_transporte,                                                                            /* CHG112963 */
          :t_transporte-ds_transporte                                                                             /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.CAT_TRANSPORTE                                                                                 /* CHG112963 */
           SET DS_CAT_TRANSPORTE = :t_transporte-ds_transporte                                                    /* CHG112963 */
         WHERE CD_CAT_TRANSPORTE = :t_transporte-cd_transporte                                                    /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                               " PROCESSA_DADOS_CATE_TRANSPORTE
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_FInANCEIRO
*&---------------------------------------------------------------------*
FORM processa_financeiro.
  IF p_razao = 'X'.
    PERFORM porcessa_cod_razao.
  ENDIF.

  IF p_risco = 'X'.
    PERFORM processa_classe_risco.
  ENDIF.

ENDFORM.                               " PROCESSA_FIANCEIRO

*&---------------------------------------------------------------------*
*&      Form  PORCESSA_COD_RAZAO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM porcessa_cod_razao.
  SELECT shbkz ltext INTO TABLE t_razao FROM t074t
               WHERE spras = c_spras
                 AND  koart = 'D'.
  IF sy-subrc <> 0.
*  Dados COD RAZÃO  não foram Encontrados para
    WRITE: / text-m26, c_spras.
    ULINE.
    EXIT.
  ENDIF.

*Alimentando a tabela com os Codigos do Razao no Oracle
  LOOP AT t_razao.

    IF t_razao-ds_razao IS INITIAL.
      t_razao-ds_razao = c_texto.      "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_RAZAO                                                                                             /* CHG112963 */
        INTO :t_razao-cd_razao                                                                                    /* CHG112963 */
        FROM VND.RAZAO                                                                                            /* CHG112963 */
       WHERE CD_RAZAO = :t_razao-cd_razao                                                                         /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.RAZAO (                                                                                   /* CHG112963 */
          CD_RAZAO,                                                                                               /* CHG112963 */
          DS_RAZAO                                                                                                /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_razao-cd_razao,                                                                                      /* CHG112963 */
          :t_razao-ds_razao                                                                                       /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.RAZAO                                                                                          /* CHG112963 */
           SET DS_RAZAO = :t_razao-ds_razao                                                                       /* CHG112963 */
         WHERE CD_RAZAO = :t_razao-cd_razao                                                                       /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PORCESSA_COD_RAZAO
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_RECUSA
*&---------------------------------------------------------------------*
FORM processa_recusa.
  SELECT abgru bezei INTO TABLE t_motivo_recusa FROM tvagt
         WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados Motivo Recusa  não foram Encontrados para
    WRITE: / text-m27, c_spras.
    ULINE.
    EXIT.
  ENDIF.

*Alimentando a tabela com os Codigos motivos recusa no Oracle
  LOOP AT t_motivo_recusa.

    IF t_motivo_recusa-ds_recusa IS INITIAL.
      t_motivo_recusa-ds_recusa = c_texto.      "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_MOTIVO_RECUSA                                                                                     /* CHG112963 */
        INTO :t_motivo_recusa-cd_recusa                                                                           /* CHG112963 */
        FROM VND.MOTIVO_RECUSA                                                                                    /* CHG112963 */
       WHERE CD_MOTIVO_RECUSA = :t_motivo_recusa-cd_recusa                                                        /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.MOTIVO_RECUSA (                                                                           /* CHG112963 */
          CD_MOTIVO_RECUSA,                                                                                       /* CHG112963 */
          DS_MOTIVO_RECUSA                                                                                        /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_motivo_recusa-cd_recusa,                                                                             /* CHG112963 */
          :t_motivo_recusa-ds_recusa                                                                              /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.MOTIVO_RECUSA                                                                                  /* CHG112963 */
           SET DS_MOTIVO_RECUSA = :t_motivo_recusa-ds_recusa                                                      /* CHG112963 */
         WHERE CD_MOTIVO_RECUSA = :t_motivo_recusa-cd_recusa                                                      /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_RECUSA

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_REMESSA
*&---------------------------------------------------------------------*
FORM processa_remessa.
  SELECT lifsp vtext INTO TABLE t_bloqueio_remessa FROM tvlst
         WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados Bloqueio de Remessa não foram Encontrados para
    WRITE: / text-m28, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela com Dados Bloqueio de Remessa do Razao no Oracle
  LOOP AT t_bloqueio_remessa.

    IF t_bloqueio_remessa-ds_remessa IS INITIAL.
      t_bloqueio_remessa-ds_remessa = c_texto.  "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_BLOQUEIO_REMESSA                                                                                  /* CHG112963 */
        INTO :t_bloqueio_remessa-cd_remessa                                                                       /* CHG112963 */
        FROM VND.BLOQUEIO_REMESSA                                                                                 /* CHG112963 */
       WHERE CD_BLOQUEIO_REMESSA = :t_bloqueio_remessa-cd_remessa                                                 /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.BLOQUEIO_REMESSA (                                                                        /* CHG112963 */
          CD_BLOQUEIO_REMESSA,                                                                                    /* CHG112963 */
          DS_BLOQUEIO_REMESSA                                                                                     /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_bloqueio_remessa-cd_remessa,                                                                         /* CHG112963 */
          :t_bloqueio_remessa-ds_remessa                                                                          /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.BLOQUEIO_REMESSA                                                                               /* CHG112963 */
           SET DS_BLOQUEIO_REMESSA = :t_bloqueio_remessa-ds_remessa                                               /* CHG112963 */
         WHERE CD_BLOQUEIO_REMESSA = :t_bloqueio_remessa-cd_remessa                                               /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_REMESSA
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_CLASSE_RISCO
*&---------------------------------------------------------------------*
FORM processa_classe_risco.
  SELECT ctlpc rtext INTO TABLE t_risco FROM t691t
         WHERE spras = c_spras.

  IF sy-subrc <> 0.
*  Dados Classe de Risco não foram Encontrados para
    WRITE: / text-m29, c_spras.
    ULINE.
    EXIT.
  ENDIF.

*  Alimentando a tabela com Dados da Classes de Risco no Oracle
  LOOP AT t_risco.

    IF t_risco-ds_classe_risco IS INITIAL.
      t_risco-ds_classe_risco = c_texto.  "Em branco
    ENDIF.

    EXEC SQL.
      SELECT CD_CLASSE_RISCO                                                                                      /* CHG112963 */
        INTO :t_risco-cd_classe_risco                                                                             /* CHG112963 */
        FROM VND.CLASSE_RISCO                                                                                     /* CHG112963 */
       WHERE CD_CLASSE_RISCO = :t_risco-cd_classe_risco                                                           /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.CLASSE_RISCO (                                                                            /* CHG112963 */
          CD_CLASSE_RISCO,                                                                                        /* CHG112963 */
          DS_CLASSE_RISCO                                                                                         /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_risco-cd_classe_risco,                                                                               /* CHG112963 */
          :t_risco-ds_classe_risco                                                                                /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.CLASSE_RISCO                                                                                   /* CHG112963 */
           SET DS_CLASSE_RISCO = :t_risco-ds_classe_risco                                                         /* CHG112963 */
         WHERE CD_CLASSE_RISCO = :t_risco-cd_classe_risco                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_CLASSE_RISCO
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_ESCRITORIOS_DE_VENDAS
*&---------------------------------------------------------------------*
FORM processa_escritorios_de_vendas.

  "Sales offices for Brazil's sales organizations                                                   "CHG112963
  SELECT vkorg                                                                                      "CHG112963
         vtweg                                                                                      "CHG112963
         spart                                                                                      "CHG112963
         vkbur                                                                                      "CHG112963
    INTO TABLE it_tvkbz                                                                             "CHG112963
    FROM tvkbz                                                                                      "CHG112963
   WHERE vkorg IN r_vkorg.                                                                          "CHG112963

  SORT it_tvkbz BY vkbur.                                                                           "CHG112963
  DELETE ADJACENT DUPLICATES FROM it_tvkbz COMPARING vkbur.                                         "CHG112963

  IF NOT it_tvkbz IS INITIAL.                                                                       "CHG112963
    "Sales offices' descriptions                                                                    "CHG112963
    SELECT spras                                                                                    "CHG112963
           vkbur                                                                                    "CHG112963
           bezei                                                                                    "CHG112963
      INTO TABLE it_tvkbt                                                                           "CHG112963
      FROM tvkbt                                                                                    "CHG112963
       FOR ALL ENTRIES IN it_tvkbz                                                                  "CHG112963
     WHERE vkbur = it_tvkbz-vkbur                                                                   "CHG112963
       AND spras = c_spras.                                                                         "CHG112963

    "Sales offices x Sales groups                                                                   "CHG112963
    SELECT vkbur                                                                                    "CHG112963
           vkgrp                                                                                    "CHG112963
      FROM tvbvk                                                                                    "CHG112963
      INTO TABLE it_tvbvk                                                                           "CHG112963
       FOR ALL ENTRIES IN it_tvkbz                                                                  "CHG112963
     WHERE vkbur = it_tvkbz-vkbur.                                                                  "CHG112963

    SORT it_tvbvk BY vkgrp.                                                                         "CHG112963
    DELETE ADJACENT DUPLICATES FROM it_tvbvk COMPARING vkgrp.                                       "CHG112963

    IF NOT it_tvbvk IS INITIAL.                                                                     "CHG112963
      "Sales groups' descriptions                                                                   "CHG112963
      SELECT spras                                                                                  "CHG112963
             vkgrp                                                                                  "CHG112963
             bezei                                                                                  "CHG112963
        FROM tvgrt                                                                                  "CHG112963
        INTO TABLE t_tvgrt                                                                          "CHG112963
         FOR ALL ENTRIES IN it_tvbvk                                                                "CHG112963
       WHERE vkgrp = it_tvbvk-vkgrp                                                                 "CHG112963
         AND spras = c_spras.                                                                       "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDIF.


  EXEC SQL.
    SELECT MAX(CD_USUARIO)                                                                                        /* CHG112963 */
      FROM CTF.USUARIO                                                                                            /* CHG112963 */
      INTO :w_codigo                                                                                              /* CHG112963 */
  ENDEXEC.


  "Sales offices
  LOOP AT it_tvkbt INTO wa_tvkbt.                                                                   "CHG112963
    EXEC SQL.
      SELECT CD_USUARIO                                                                                           /* CHG112963 */
        FROM CTF.USUARIO                                                                                          /* CHG112963 */
        INTO :wa_tvkbt-cd_usuario                                                                                 /* CHG112963 */
       WHERE CD_USUARIO_ORIGINAL = :wa_tvkbt-vkbur                                                                /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF wa_tvkbt-bezei IS INITIAL.                                                                   "CHG112963
      wa_tvkbt-bezei = c_texto.                                                                     "CHG112963
    ENDIF.                                                                                          "CHG112963

    IF sy-subrc = 0.                                                                                "CHG112963
      "Sales office already exists in MOL                                                           "CHG112963
      EXEC SQL.                                                                                                   /* CHG112963 */
        UPDATE CTF.USUARIO                                                                                        /* CHG112963 */
           SET NO_USUARIO = :wa_tvkbt-bezei                                                                       /* CHG112963 */
         WHERE CD_USUARIO = :wa_tvkbt-cd_usuario                                                                  /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      "Sales office does not exist in MOL                                                           "CHG112963
      ADD 1 TO w_codigo.                                                                            "CHG112963

      EXEC SQL.
        INSERT INTO CTF.USUARIO (                                                                                 /* CHG112963 */
          CD_USUARIO,                                                                                             /* CHG112963 */
          CD_USUARIO_ORIGINAL,                                                                                    /* CHG112963 */
          CD_TIPO_USUARIO,                                                                                        /* CHG112963 */
          NO_USUARIO,                                                                                             /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          DH_INCLUSAO,                                                                                            /* CHG112963 */
          DS_SENHA,                                                                                               /* CHG112963 */
          CD_LOGIN,                                                                                               /* CHG112963 */
          IC_BLOQUEADO                                                                                            /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :w_codigo,                                                                                              /* CHG112963 */
          :wa_tvkbt-vkbur,                                                                                        /* CHG112963 */
          '2',                                                                                                    /* CHG112963 */
          :wa_tvkbt-bezei,                                                                                        /* CHG112963 */
          'N',                                                                                                    /* CHG112963 */
          SYSDATE,                                                                                                /* CHG112963 */
          'mosaic1',                                                                                              /* CHG112963 */
          :w_codigo,                                                                                              /* CHG112963 */
          'S'                                                                                                     /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963

      wa_tvkbt-cd_usuario = w_codigo.                                                               "CHG112963
    ENDIF.                                                                                          "CHG112963

    MODIFY it_tvkbt INDEX sy-tabix FROM wa_tvkbt TRANSPORTING cd_usuario.                           "CHG112963
  ENDLOOP.                                                                                          "CHG112963


  "Sales groups                                                                                     "CHG112963
  LOOP AT t_tvgrt.
    "Sales office for the Sales group                                                               "CHG112963
    READ TABLE it_tvbvk INTO wa_tvbvk WITH KEY vkgrp = t_tvgrt-vkgrp.                               "CHG112963
    IF sy-subrc = 0.                                                                                "CHG112963
      READ TABLE it_tvkbt INTO wa_tvkbt WITH KEY vkbur = wa_tvbvk-vkbur.                            "CHG112963
      IF sy-subrc = 0.                                                                              "CHG112963
        t_tvgrt-cd_usuario_sup = wa_tvkbt-cd_usuario.                                               "CHG112963
      ENDIF.                                                                                        "CHG112963
    ENDIF.                                                                                          "CHG112963

    IF t_tvgrt-bezei IS INITIAL.
      t_tvgrt-bezei = c_texto.
    ENDIF.

    EXEC SQL.
      SELECT CD_USUARIO                                                                                           /* CHG112963 */
        FROM CTF.USUARIO                                                                                          /* CHG112963 */
        INTO :t_tvgrt-cd_usuario                                                                                  /* CHG112963 */
       WHERE CD_USUARIO_ORIGINAL = :t_tvgrt-vkgrp                                                                 /* CHG112963 */
    ENDEXEC.

    IF sy-subrc = 0.                                                                                "CHG112963
      "Sales group already exists in MOL                                                            "CHG112963
      EXEC SQL.                                                                                                   /* CHG112963 */
        UPDATE CTF.USUARIO                                                                                        /* CHG112963 */
           SET NO_USUARIO = :t_tvgrt-bezei,                                                                       /* CHG112963 */
               CD_USUARIO_SUPERIOR = DECODE(:t_tvgrt-cd_usuario_sup, 0, NULL, :t_tvgrt-cd_usuario_sup)            /* CHG112963 */
         WHERE CD_USUARIO = :t_tvgrt-cd_usuario                                                                   /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      "Sales group does not exist in MOL                                                            "CHG112963
      ADD 1 TO w_codigo.                                                                            "CHG112963

      EXEC SQL.
        INSERT INTO CTF.USUARIO (                                                                                 /* CHG112963 */
          CD_USUARIO,                                                                                             /* CHG112963 */
          CD_USUARIO_ORIGINAL,                                                                                    /* CHG112963 */
          CD_TIPO_USUARIO,                                                                                        /* CHG112963 */
          NO_USUARIO,                                                                                             /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          DH_INCLUSAO,                                                                                            /* CHG112963 */
          DS_SENHA,                                                                                               /* CHG112963 */
          CD_LOGIN,                                                                                               /* CHG112963 */
          IC_BLOQUEADO,                                                                                           /* CHG112963 */
          CD_USUARIO_SUPERIOR                                                                                     /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :w_codigo,                                                                                              /* CHG112963 */
          :t_tvgrt-vkgrp,                                                                                         /* CHG112963 */
          '4',                                                                                                    /* CHG112963 */
          :t_tvgrt-bezei,                                                                                         /* CHG112963 */
          'N',                                                                                                    /* CHG112963 */
          SYSDATE,                                                                                                /* CHG112963 */
          'mosaic1',                                                                                              /* CHG112963 */
          :w_codigo,                                                                                              /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          DECODE(:t_tvgrt-cd_usuario_sup, 0, NULL, :t_tvgrt-cd_usuario_sup)                                       /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                    "processa_escritorios_de_vendas
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_CENTRO_EXPEDIDOR
*&---------------------------------------------------------------------*
FORM processa_centro_expedidor.
  SELECT werks name1 stras ort01 pstlz regio
         INTO TABLE t_centro
         FROM t001w
   WHERE vkorg IN r_vkorg                                                                           "CHG72212
     AND vtweg IN r_vtweg.                                                                          "CHG72212
                                                                                                    "CHG155287
  IF sy-subrc = 0.                                                                                  "CHG155287
    CLEAR itab_t001k.                                                                               "CHG155287
    SELECT bwkey                                                                                    "CHG155287
           bukrs                                                                                    "CHG155287
      FROM t001k                                                                                    "CHG155287
      INTO TABLE itab_t001k                                                                         "CHG155287
      FOR ALL ENTRIES IN t_centro                                                                   "CHG155287
      WHERE bwkey = t_centro-centro.                                                                "CHG155287
                                                                                                    "CHG155287
      IF sy-subrc = 0.                                                                              "CHG155287
        LOOP AT t_centro.                                                                           "CHG155287
          READ TABLE itab_t001k INTO wa_t001k WITH KEY bwkey = t_centro-centro.                     "CHG155287
          IF sy-subrc = 0.                                                                          "CHG155287
            wa_centro-centro       = t_centro-centro.                                               "CHG155287
            wa_centro-nome         = t_centro-nome.                                                 "CHG155287
            wa_centro-endereco     = t_centro-endereco.                                             "CHG155287
            wa_centro-cidade       = t_centro-cidade.                                               "CHG155287
            wa_centro-cep          = t_centro-cep.                                                  "CHG155287
            wa_centro-regio        = t_centro-regio.                                                "CHG155287
            wa_centro-bukrs        = wa_t001k-bukrs.                                                "CHG155287
            APPEND wa_centro TO itab_centro.                                                        "CHG155287
            CLEAR wa_centro.                                                                        "CHG155287
          ENDIF.                                                                                    "CHG155287
        ENDLOOP.                                                                                    "CHG155287
      ENDIF.                                                                                        "CHG155287
      CLEAR t_centro.                                                                               "CHG155287
      t_centro[] = itab_centro.                                                                     "CHG155287
  ENDIF.                                                                                            "CHG155287

  IF sy-subrc <> 0.
*   Dados dos Centros de Expedição não foram encontrados
    WRITE: / text-m31.
    ULINE.
    EXIT.
  ENDIF.

  w_data(2)   = sy-datum+6(2).                                                                      "CHG72212
  w_data+2(1) = '/'.                                                                                "CHG72212
  w_data+3(2) = sy-datum+4(2).                                                                      "CHG72212
  w_data+5(1) = '/'.                                                                                "CHG72212
  w_data+6(4) = sy-datum(4).                                                                        "CHG72212
  WRITE sy-uzeit TO w_data+11(10).                                                                  "CHG72212

  SORT t_centro BY centro.

  LOOP AT t_centro.

    EXEC SQL.
      SELECT CD_ESTADO                                                                                            /* CHG112963 */
        INTO :t_centro-estado                                                                                     /* CHG112963 */
        FROM CTF.ESTADO                                                                                           /* CHG112963 */
       WHERE SG_ESTADO = :t_centro-regio                                                                          /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc = 0.
      EXEC SQL.
        SELECT CD_MUNICIPIO                                                                                       /* CHG112963 */
          INTO :t_centro-cd_municipio                                                                             /* CHG112963 */
          FROM CTF.MUNICIPIO                                                                                      /* CHG112963 */
         WHERE UPPER(NO_MUNICIPIO) = UPPER(:t_centro-cidade)                                                      /* CHG112963 */
           AND CD_ESTADO = :t_centro-estado                                                                       /* CHG112963 */
      ENDEXEC.
    ENDIF.

    IF t_centro-nome IS INITIAL.
      t_centro-nome = c_texto.         "Em branco
    ENDIF.

    CONCATENATE t_centro-cep(5) t_centro-cep+6(3) INTO w_cep.

    EXEC SQL.
      SELECT CD_CENTRO_EXPEDIDOR                                                                                  /* CHG112963 */
        INTO :t_centro-centro                                                                                     /* CHG112963 */
        FROM CTF.CENTRO_EXPEDIDOR                                                                                 /* CHG112963 */
       WHERE CD_CENTRO_EXPEDIDOR = :t_centro-centro                                                               /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.CENTRO_EXPEDIDOR (                                                                        /* CHG112963 */
          CD_CENTRO_EXPEDIDOR,                                                                                    /* CHG112963 */
          DS_CENTRO_EXPEDIDOR,                                                                                    /* CHG112963 */
          DS_ENDERECO,                                                                                            /* CHG112963 */
          CD_COMPANY_CODE,                                                                                        /* CHG155287 */
          NU_CEP,                                                                                                 /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          IC_CENTRO_EXPEDIDOR,                                                                                    /* CHG112963 */
          IC_PONTO,                                                                                               /* CHG112963 */
          CD_ESTADO,                                                                                              /* CHG112963 */
          CD_MUNICIPIO,                                                                                           /* CHG112963 */
          DH_INCLUSAO                                                                                             /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_centro-centro,                                                                                       /* CHG112963 */
          :t_centro-nome,                                                                                         /* CHG112963 */
          :t_centro-endereco,                                                                                     /* CHG112963 */
          :t_centro-bukrs,                                                                                        /* CHG155287 */
          :w_cep,                                                                                                 /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          'N',                                                                                                    /* CHG112963 */
          DECODE(:t_centro-estado, ' ', NULL, :t_centro-estado),                                                  /* CHG112963 */
          DECODE(:t_centro-cd_municipio, ' ', NULL, :t_centro-cd_municipio),                                      /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                                               /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE CTF.CENTRO_EXPEDIDOR                                                                               /* CHG112963 */
           SET DS_CENTRO_EXPEDIDOR  = :t_centro-nome,                                                             /* CHG112963 */
               DS_ENDERECO          = :t_centro-endereco,                                                         /* CHG112963 */
               CD_COMPANY_CODE      = :t_centro-bukrs,                                                            /* CHG155287 */
               NU_CEP               = :w_cep,                                                                     /* CHG112963 */
               CD_ESTADO            = DECODE(:t_centro-estado, ' ', NULL, :t_centro-estado),                      /* CHG112963 */
               CD_MUNICIPIO         = DECODE(:t_centro-cd_municipio, ' ', NULL, :t_centro-cd_municipio),          /* CHG112963 */
               DH_ULT_ALTERACAO     = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                   /* CHG112963 */
         WHERE CD_CENTRO_EXPEDIDOR  = :t_centro-centro                                                            /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                               " PROCESSA_CENTRO_EXPEDIDOR

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_UNIDADE_MEDIDA_SAP
*&---------------------------------------------------------------------*
FORM processa_unidade_medida_sap.
* Selecionando as unidades de medidas SAP
  SELECT * INTO TABLE t_t006 FROM t006.
  SORT t_t006 BY msehi.

  IF sy-subrc <> 0.
*  Dados de unidade de medida Sap não existe
    WRITE: / text-m32.
    ULINE.
    EXIT.
  ENDIF.

* Selecionando as Dimensões de cada unidade de medida
  SELECT * INTO TABLE t_t006d FROM t006d.
  SORT t_t006d BY dimid.

* Selecionando as descriçõs das unidades
  SELECT * INTO TABLE t_t006a FROM t006a WHERE spras = c_spras.
  SORT t_t006a BY msehi.
  DATA w_texto(26).                                                                                 "CHG72212

*  Alimentando a tabela com Dados da Classes de Risco no Oracle
  LOOP AT t_t006.
    CLEAR w_texto.
    READ TABLE t_t006d WITH KEY dimid  = t_t006-dimid BINARY SEARCH.
    READ TABLE t_t006a WITH KEY msehi  = t_t006-msehi BINARY SEARCH.

    IF t_t006a-msehl IS INITIAL.
      t_t006a-msehl = c_texto.
    ENDIF.

    w_texto = t_t006a-msehl.

    EXEC SQL.
      SELECT CD_UNIDADE_MEDIDA_SAP                                                                                /* CHG112963 */
        INTO :t_t006-msehi                                                                                        /* CHG112963 */
        FROM CTF.UNIDADE_MEDIDA_SAP                                                                               /* CHG112963 */
       WHERE CD_UNIDADE_MEDIDA_SAP = :t_t006-msehi                                                                /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      " Check if destination unit already exists.                                                   "CHG112963
      EXEC SQL.
        SELECT CD_UNIDADE_MEDIDA_SAP                                                                              /* CHG112963 */
          INTO :t_t006d-mssie                                                                                     /* CHG112963 */
          FROM CTF.UNIDADE_MEDIDA_SAP                                                                             /* CHG112963 */
         WHERE CD_UNIDADE_MEDIDA_SAP = :t_t006d-mssie                                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963

      IF sy-subrc <> 0.                                                                             "CHG112963
        EXEC SQL.
          INSERT INTO CTF.UNIDADE_MEDIDA_SAP (                                                                    /* CHG112963 */
            CD_UNIDADE_MEDIDA_SAP,                                                                                /* CHG112963 */
            NU_DENOMINADOR,                                                                                       /* CHG112963 */
            DS_UNIDADE_MEDIDA_SAP,                                                                                /* CHG112963 */
            NU_NUMERADOR,                                                                                         /* CHG112963 */
            CD_UNIDADE_DESTINO                                                                                    /* CHG112963 */
          ) VALUES (                                                                                              /* CHG112963 */
            :t_t006-msehi,                                                                                        /* CHG112963 */
            '1',                                                                                                  /* CHG112963 */
            :w_texto,                                                                                             /* CHG112963 */
            '1',                                                                                                  /* CHG112963 */
            :t_t006-msehi                                                                                         /* CHG112963 */
          )                                                                                                       /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ELSE.                                                                                         "CHG112963
        EXEC SQL.
          INSERT INTO CTF.UNIDADE_MEDIDA_SAP (                                                                    /* CHG112963 */
            CD_UNIDADE_MEDIDA_SAP,                                                                                /* CHG112963 */
            NU_DENOMINADOR,                                                                                       /* CHG112963 */
            DS_UNIDADE_MEDIDA_SAP,                                                                                /* CHG112963 */
            NU_NUMERADOR,                                                                                         /* CHG112963 */
            CD_UNIDADE_DESTINO                                                                                    /* CHG112963 */
          ) VALUES (                                                                                              /* CHG112963 */
            :t_t006-msehi,                                                                                        /* CHG112963 */
            :t_t006-nennr,                                                                                        /* CHG112963 */
            :w_texto,                                                                                             /* CHG112963 */
            :t_t006-zaehl,                                                                                        /* CHG112963 */
            DECODE( :t_t006d-mssie, ' ', NULL, :t_t006d-mssie )                                                   /* CHG112963 */
          )                                                                                                       /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ENDIF.                                                                                        "CHG112963
    ELSE.                                                                                           "CHG112963
      " Check if destination unit already exists.                                                   "CHG112963
      EXEC SQL.
        SELECT CD_UNIDADE_MEDIDA_SAP                                                                              /* CHG112963 */
          INTO :t_t006d-mssie                                                                                     /* CHG112963 */
          FROM CTF.UNIDADE_MEDIDA_SAP                                                                             /* CHG112963 */
         WHERE CD_UNIDADE_MEDIDA_SAP = :t_t006d-mssie                                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963

      IF sy-subrc <> 0.                                                                             "CHG112963
        EXEC SQL.
          UPDATE CTF.UNIDADE_MEDIDA_SAP                                                                           /* CHG112963 */
             SET NU_DENOMINADOR = '1',                                                                            /* CHG112963 */
                 DS_UNIDADE_MEDIDA_SAP = :w_texto,                                                                /* CHG112963 */
                 NU_NUMERADOR = '1',                                                                              /* CHG112963 */
                 CD_UNIDADE_DESTINO = :t_t006-msehi                                                               /* CHG112963 */
           WHERE CD_UNIDADE_MEDIDA_SAP = :t_t006-msehi                                                            /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ELSE.                                                                                         "CHG112963
        EXEC SQL.
          UPDATE CTF.UNIDADE_MEDIDA_SAP                                                                           /* CHG112963 */
             SET NU_DENOMINADOR = :t_t006-nennr,                                                                  /* CHG112963 */
                 DS_UNIDADE_MEDIDA_SAP = :w_texto,                                                                /* CHG112963 */
                 NU_NUMERADOR = :t_t006-zaehl,                                                                    /* CHG112963 */
                 CD_UNIDADE_DESTINO = DECODE( :t_t006d-mssie, ' ', NULL, :t_t006d-mssie )                         /* CHG112963 */
           WHERE CD_UNIDADE_MEDIDA_SAP = :t_t006-msehi                                                            /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ENDIF.                                                                                        "CHG112963
    ENDIF.                                                                                          "CHG112963

    CLEAR: t_t006d, t_t006a.
  ENDLOOP.

  EXEC SQL.
    commit
  ENDEXEC.

ENDFORM.                               " PROCESSA_UNIDADE_MEDIDA_SAP
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_BLOQ_FATURAMENTO
*&---------------------------------------------------------------------*
FORM processa_bloq_faturamento.
* Selecionando todos os tipos de bloq. Faturamento idioma = PT
  SELECT faksp vtext  INTO TABLE t_bloq_fatura
                      FROM tvfst
                      WHERE spras = c_spras.

  IF sy-subrc <> 0.
*    Dados tipos Bloq. Faturamento não foram encontrados para
    WRITE: / text-m33, c_spras.
    ULINE.
    EXIT.
  ENDIF.


* Alimentando a tabela de Bloq. Faturamento no Oracle
  LOOP AT t_bloq_fatura.
    IF t_bloq_fatura-faksp IS INITIAL.
      CONTINUE.
    ENDIF.
    IF t_bloq_fatura-vtext IS INITIAL.
      t_bloq_fatura-vtext = c_texto.   " Em Branco
    ENDIF.

    EXEC SQL.
      SELECT CD_BLOQUEIO_FATURAMENTO                                                                              /* CHG112963 */
        INTO :t_bloq_fatura-faksp                                                                                 /* CHG112963 */
        FROM VND.BLOQUEIO_FATURAMENTO                                                                             /* CHG112963 */
       WHERE CD_BLOQUEIO_FATURAMENTO = :t_bloq_fatura-faksp                                                       /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.BLOQUEIO_FATURAMENTO (                                                                    /* CHG112963 */
          CD_BLOQUEIO_FATURAMENTO,                                                                                /* CHG112963 */
          DS_BLOQUEIO_FATURAMENTO                                                                                 /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_bloq_fatura-faksp,                                                                                   /* CHG112963 */
          :t_bloq_fatura-vtext                                                                                    /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.BLOQUEIO_FATURAMENTO                                                                           /* CHG112963 */
           SET DS_BLOQUEIO_FATURAMENTO = :t_bloq_fatura-vtext                                                     /* CHG112963 */
         WHERE CD_BLOQUEIO_FATURAMENTO = :t_bloq_fatura-faksp                                                     /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                               " PROCESSA_BLOQ_FATURAMENTO

*&---------------------------------------------------------------------*
*&      Form  PROCESSA_LISTA_PRECO
*&---------------------------------------------------------------------*
FORM processa_lista_preco.
* Selecionando todos os tipos de listas de idioma = PT
  SELECT pltyp ptext INTO TABLE t_lista
                      FROM t189t
                      WHERE spras = c_spras.

  IF sy-subrc <> 0.
*   Dados tipos de listas de preço não foram encontrados para
    WRITE: / text-m34, c_spras.
    ULINE.
    EXIT.
  ENDIF.

* Alimentando a tabela lista de preço no Oracle
  LOOP AT t_lista.
    IF t_lista-ptext IS INITIAL.
      t_lista-ptext = c_texto.         " Em Branco
    ENDIF.

    EXEC SQL.
      SELECT CD_TIPO_PRECO                                                                                        /* CHG112963 */
        INTO :t_lista-pltyp                                                                                       /* CHG112963 */
        FROM VND.TIPO_PRECO                                                                                       /* CHG112963 */
       WHERE CD_TIPO_PRECO = :t_lista-pltyp                                                                       /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.TIPO_PRECO (                                                                              /* CHG112963 */
          CD_TIPO_PRECO,                                                                                          /* CHG112963 */
          DS_TIPO_PRECO                                                                                           /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_lista-pltyp,                                                                                         /* CHG112963 */
          :t_lista-ptext                                                                                          /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.TIPO_PRECO                                                                                     /* CHG112963 */
           SET DS_TIPO_PRECO = :t_lista-ptext                                                                     /* CHG112963 */
         WHERE CD_TIPO_PRECO = :t_lista-pltyp                                                                     /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963

  ENDLOOP.
ENDFORM.                               " PROCESSA_LISTA_PRECO
*&---------------------------------------------------------------------*
*&      Form  processa_territorio
*&---------------------------------------------------------------------*
FORM processa_territorio.
* Selecionando todos os escritótios para dar carga no Oracle como
* Territórios
  SELECT a~spras a~vkgrp a~bezei INTO TABLE t_tvgrt
                     FROM tvgrt AS a                                                                "CHG72212
                     INNER JOIN knvv AS b ON a~vkgrp = b~vkgrp                                      "CHG72212
                     WHERE a~spras = c_spras                                                        "CHG72212
                       AND b~vkorg IN r_vkorg                                                       "CHG72212
                       AND b~vtweg IN r_vtweg                                                       "CHG72212
                       AND b~spart = l_const4.                                                      "CHG72212

  SORT t_tvgrt BY vkgrp.                                                                            "CHG72212
  DELETE ADJACENT DUPLICATES FROM t_tvgrt COMPARING vkgrp.                                          "CHG72212

***
  IF sy-subrc <> 0.
*   Dados Escritórios de Vendas não foram Encontrados para
    WRITE: / text-m30, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  CLEAR w_data.
  w_data(2)   = sy-datum+6(2).                                                                      "CHG72212
  w_data+2(1) = '/'.                                                                                "CHG72212
  w_data+3(2) = sy-datum+4(2).                                                                      "CHG72212
  w_data+5(1) = '/'.                                                                                "CHG72212
  w_data+6(4) = sy-datum(4).                                                                        "CHG72212
  WRITE sy-uzeit TO w_data+11(10).                                                                  "CHG72212

* PROCESSANDO Os Territórios
  LOOP AT t_tvgrt.

    IF t_tvgrt-bezei IS INITIAL.
      t_tvgrt-bezei = c_texto.
    ENDIF.

*   Verificando se o usuário existe
    EXEC SQL.
      SELECT CD_TERRITORIO                                                                                        /* CHG112963 */
        FROM CTF.TERRITORIO                                                                                       /* CHG112963 */
        INTO :t_tvgrt-vkgrp                                                                                       /* CHG112963 */
       WHERE CD_TERRITORIO = :t_tvgrt-vkgrp                                                                       /* CHG112963 */
    ENDEXEC.

    IF sy-subrc <> 0.
      EXEC SQL.
        INSERT INTO CTF.TERRITORIO (                                                                              /* CHG112963 */
          CD_TERRITORIO,                                                                                          /* CHG112963 */
          DS_TERRITORIO,                                                                                          /* CHG112963 */
          DH_ULT_ALTERACAO,                                                                                       /* CHG112963 */
          DH_INCLUSAO                                                                                             /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_tvgrt-vkgrp,                                                                                         /* CHG112963 */
          :t_tvgrt-bezei,                                                                                         /* CHG112963 */
          TO_DATE( :w_data, 'DD/MM/YYYY HH24:MI:SS'),                                                             /* CHG112963 */
          TO_DATE( :w_data, 'DD/MM/YYYY HH24:MI:SS')                                                              /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.
    ELSE.
      EXEC SQL.
        UPDATE CTF.TERRITORIO
           SET DS_TERRITORIO = :t_tvgrt-bezei                                                                     /* CHG112963 */
         WHERE CD_TERRITORIO = :t_tvgrt-vkgrp                                                                     /* CHG112963 */
      ENDEXEC.
    ENDIF.

  ENDLOOP.

  CLEAR: t_tvgrt, w_data.
  REFRESH t_tvgrt.


ENDFORM.                    " processa_territorio
*&---------------------------------------------------------------------*
*&      Form  processa_segmento_cliente
*&---------------------------------------------------------------------*
FORM processa_segmento_cliente.
* Selecionando todos os tipos de listas de idioma = PT
  SELECT kdgrp ktext  INTO TABLE t_t151t
                      FROM t151t
                      WHERE spras = c_spras.

  EXEC SQL.
    SELECT MAX(CD_SEGMENTO_CLIENTE)                                                                               /* CHG112963 */
      FROM CTF.SEGMENTO_CLIENTE
      INTO :w_cd_segmento_cliente_max                                                                             /* CHG112963 */
  ENDEXEC.


* Alimentando a tabela Segmento de Cliente
  LOOP AT t_t151t.

    EXEC SQL.
      SELECT CD_SEGMENTO_CLIENTE
        FROM CTF.SEGMENTO_CLIENTE
        INTO :w_cd_segmento_cliente
      WHERE DS_SEGMENTO_CLIENTE_SAP = :t_t151t-kdgrp
    ENDEXEC.

    IF sy-subrc <> 0.

      ADD 1 TO  w_cd_segmento_cliente_max.

      EXEC SQL.
        INSERT INTO CTF.SEGMENTO_CLIENTE (                                                                        /* CHG112963 */
          CD_SEGMENTO_CLIENTE,                                                                                    /* CHG112963 */
          NO_SEGMENTO_CLIENTE,                                                                                    /* CHG112963 */
          IC_ATIVO,                                                                                               /* CHG112963 */
          DS_SEGMENTO_CLIENTE_SAP                                                                                 /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :w_cd_segmento_cliente_max,                                                                             /* CHG112963 */
          :t_t151t-ktext,                                                                                         /* CHG112963 */
          'S',                                                                                                    /* CHG112963 */
          :t_t151t-kdgrp                                                                                          /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.

    ELSE.

      EXEC SQL.
        UPDATE CTF.SEGMENTO_CLIENTE                                                                               /* CHG112963 */
           SET NO_SEGMENTO_CLIENTE = :t_t151t-ktext,                                                              /* CHG112963 */
               DS_SEGMENTO_CLIENTE_SAP = :t_t151t-kdgrp                                                           /* CHG112963 */
         WHERE CD_SEGMENTO_CLIENTE = :w_cd_segmento_cliente                                                       /* CHG112963 */
      ENDEXEC.

    ENDIF.

    CLEAR w_cd_segmento_cliente.
  ENDLOOP.


* BSCC Atualização da tabela BSCC solicitição efetuada por
* Julio Cesar Eiti - 23/11/2006 Aferian Inicio


* BSCC Atualização da tabela BSCC solicitição efetuada por
* Julio Cesar Eiti - 23/11/2006 Aferian Fim

ENDFORM.                    " processa_seguimento_cliente

*&---------------------------------------------------------------------*
*&      Form  carga_setor_atividade
*&---------------------------------------------------------------------*

FORM carga_setor_atividade.
* Selecionando os setores no oracle
  EXEC SQL PERFORMING grava-setor.
    SELECT CD_SETOR_ATIVIDADE,                                                                                    /* CHG112963 */
           SG_SETOR_ATIVIDADE                                                                                     /* CHG112963 */
      INTO :t_setor                                                                                               /* CHG112963 */
      FROM VND.SETOR_ATIVIDADE                                                                                    /* CHG112963 */
  ENDEXEC.

  SORT t_setor BY sg_setor_atividade.

* selecionado os setores do R/3
  SELECT spart vtext FROM tspat
     INTO TABLE t_tspat
     WHERE spras = c_spras.

  IF sy-subrc <> 0.
*   Dados de setor de atividade não foram encontrados para
    WRITE: / text-m38, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  CLEAR: w_codigo, w_modi.

* Selecionando o ultimo codigo do setor para dar sequencia
  EXEC SQL.
    SELECT MAX (CD_SETOR_ATIVIDADE)
      FROM VND.SETOR_ATIVIDADE                                                                                    /* CHG112963 */
      INTO :w_codigo                                                                                              /* CHG112963 */
  ENDEXEC.

  w_modi = w_codigo.
  TRANSLATE w_modi USING '#0'.
  w_codigo = w_modi.

* Alimentando a tabela lista de preço no Oracle
  LOOP AT t_tspat.
    IF t_tspat-vtext IS INITIAL.
      t_tspat-vtext = c_texto.         " Em Branco
    ENDIF.

    READ TABLE t_setor WITH KEY sg_setor_atividade = t_tspat-spart
                                                     BINARY SEARCH.

    IF sy-subrc <> 0.
      ADD 1 TO w_codigo.
      EXEC SQL.
        INSERT INTO VND.SETOR_ATIVIDADE (                                                                           /* CHG112963 */
            CD_SETOR_ATIVIDADE,                                                                                     /* CHG112963 */
            SG_SETOR_ATIVIDADE,
            DS_SETOR_ATIVIDADE,
            IC_ATIVO                                                                                                /* CHG112963 */
          ) VALUES (                                                                                                /* CHG112963 */
            :w_codigo,                                                                                              /* CHG112963 */
            :t_tspat-spart,
            :t_tspat-vtext,
            'S'                                                                                                     /* CHG112963 */
          )                                                                                                         /* CHG112963 */
      ENDEXEC.

    ELSE.

      EXEC SQL.
        UPDATE VND.SETOR_ATIVIDADE                                                                                /* CHG112963 */
           SET DS_SETOR_ATIVIDADE = :t_tspat-vtext,                                                               /* CHG112963 */
               IC_ATIVO           = 'S'                                                                           /* CHG112963 */
         WHERE CD_SETOR_ATIVIDADE = :t_setor-cd_setor_atividade                                                   /* CHG112963 */
      ENDEXEC.
    ENDIF.

  ENDLOOP.

ENDFORM.                    " carga_setor_atividade
*---------------------------------------------------------------------*
*       FORM grava-setor                                              *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM grava-setor.
  APPEND t_setor.
  CLEAR t_setor.
ENDFORM.                    "grava-setor
*&---------------------------------------------------------------------*
*&      Form  carga_motivo_bloqueio_credito
*&---------------------------------------------------------------------*
FORM carga_motivo_bloqueio_credito.
* Selecionando todos os tipos de bloqueio de credito
  SELECT cod_mot descr
    INTO TABLE t_ztsd_motbloq
      FROM ztsd_motbloq.


  IF sy-subrc <> 0.
*   Dados tipos Bloqueio de credito não foram encontrados
    WRITE: / text-m40.
    ULINE.
    EXIT.
  ENDIF.


* Alimentando a tabela de Bloq. crédito no Oracle
  LOOP AT t_ztsd_motbloq.

    IF t_ztsd_motbloq-descr IS INITIAL.
      t_ztsd_motbloq-descr = c_texto.   " Em Branco
    ENDIF.

    EXEC SQL.
      SELECT CD_MOTIVO_BLOQUEIO_CREDITO                                                                           /* CHG112963 */
        INTO :t_ztsd_motbloq-cod_mot                                                                              /* CHG112963 */
        FROM :t_ztsd_motbloq-cod_mot                                                                              /* CHG112963 */
       WHERE CD_MOTIVO_BLOQUEIO_CREDITO = :t_ztsd_motbloq-cod_mot                                                 /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.MOTIVO_BLOQUEIO_CREDITO (                                                                 /* CHG112963 */
          CD_MOTIVO_BLOQUEIO_CREDITO,                                                                             /* CHG112963 */
          NO_MOTIVO_BLOQUEIO_CREDITO                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_ztsd_motbloq-cod_mot,                                                                                /* CHG112963 */
          :t_ztsd_motbloq-descr                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.MOTIVO_BLOQUEIO_CREDITO                                                                        /* CHG112963 */
           SET NO_MOTIVO_BLOQUEIO_CREDITO = :t_ztsd_motbloq-descr                                                 /* CHG112963 */
         WHERE CD_MOTIVO_BLOQUEIO_CREDITO = :t_ztsd_motbloq-cod_mot                                               /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                    " carga_motivo_bloqueio_credito
*&---------------------------------------------------------------------*
*&      Form  conecta
*&---------------------------------------------------------------------*
FORM conecta.

* Inicializando conexão
  EXEC SQL.
    connect to 'NETVENDAS' as 'ZNVTAN'
  ENDEXEC.

* Conectando com o Banco
  EXEC SQL.
    SET CONNECTION 'ZNVTAN'
  ENDEXEC.

  IF sy-subrc <> 0.
*   Erro ao Conectar com o Banco de dados usuário PIC.WORLD
    MESSAGE i001.
    STOP.
  ENDIF.


ENDFORM.                    " conecta
*&---------------------------------------------------------------------*
*&      Form  desconecta
*&---------------------------------------------------------------------*
FORM desconecta.

  EXEC SQL.
    COMMIT
  ENDEXEC.

* Desconectando
  EXEC SQL.
    disconnect 'ZNVTAN'
  ENDEXEC.

ENDFORM.                    " desconecta
*&---------------------------------------------------------------------*
*&      Form  grava_seg_BSCC
*&---------------------------------------------------------------------*
FORM grava_seg_bscc.

  WRITE sy-datum TO w_dh_ult_alteracao.
  TRANSLATE w_dh_ult_alteracao USING './'.
  WRITE sy-uzeit TO w_dh_ult_alteracao+11(10).

ENDFORM.                    " grava_seg_BSCC                                                        "CHG112963


*&---------------------------------------------------------------------*
*&      Form  carga_tabela_REGISTRO
*&---------------------------------------------------------------------*
FORM carga_tabela_registro .

  SELECT cod_reg cod_reg bukrs n p k obsoleto                                                       "CHG155287
    INTO TABLE t_ztmm_regmin_2
    FROM ztmm_regmin.

  IF sy-subrc <>  0.
*   Dados da tabela ZTMM_REGMIN não encontrado para carga em VND.REGISTRO.
    WRITE: / text-m41.
    ULINE.
    EXIT.
  ENDIF.

  DATA: v_cod_reg TYPE num9,
        v_ic_obsoleto TYPE char1.

  EXEC SQL.
    select Max (cd_registro)
      from vnd.registro
       into :v_cod_reg
  ENDEXEC.

  LOOP AT t_ztmm_regmin_2.
*   Pegando as 7 últimas posições do registro conforme especificação

    IF t_ztmm_regmin_2-obsoleto = 'X'.
      v_ic_obsoleto = 'S'.
    ELSE.
      v_ic_obsoleto = 'N'.
    ENDIF.


    EXEC SQL.
      SELECT DS_REGISTRO_SAP
        FROM VND.REGISTRO                                                                                         /* CHG112963 */
        INTO :t_ztmm_regmin_2-cod_reg1
       WHERE DS_REGISTRO_SAP = :t_ztmm_regmin_2-cod_reg1                                                          /* CHG112963 */
    ENDEXEC.

    IF sy-subrc <> 0.

      ADD 1 TO  v_cod_reg.

      EXEC SQL.
        INSERT INTO VND.REGISTRO (                                                                                /* CHG112963 */
          CD_REGISTRO,                                                                                            /* CHG112963 */
          DS_REGISTRO_SAP,                                                                                        /* CHG112963 */
          CD_COMPANY_CODE,                                                                                        /* CHG155287 */
          PC_NITROGENIO,                                                                                          /* CHG112963 */
          PC_FOSFORO,                                                                                             /* CHG112963 */
          PC_POTASSIO,                                                                                            /* CHG112963 */
          IC_OBSOLETO                                                                                             /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :v_cod_reg,                                                                                             /* CHG112963 */
          :t_ztmm_regmin_2-cod_reg1,                                                                              /* CHG112963 */
          :t_ztmm_regmin_2-bukrs,                                                                                 /* CHG155287 */
          :t_ztmm_regmin_2-n,                                                                                     /* CHG112963 */
          :t_ztmm_regmin_2-p,                                                                                     /* CHG112963 */
          :t_ztmm_regmin_2-k,                                                                                     /* CHG112963 */
          :v_ic_obsoleto                                                                                          /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.

    ELSE.

      EXEC SQL.
        UPDATE VND.REGISTRO                                                                                       /* CHG112963 */
           SET DS_REGISTRO_SAP = :t_ztmm_regmin_2-cod_reg1,                                                       /* CHG112963 */
               CD_COMPANY_CODE = :t_ztmm_regmin_2-bukrs,                                                          /* CHG155287 */
               PC_NITROGENIO   = :t_ztmm_regmin_2-n,                                                              /* CHG112963 */
               PC_FOSFORO      = :t_ztmm_regmin_2-p,                                                              /* CHG112963 */
               PC_POTASSIO     = :t_ztmm_regmin_2-k,                                                              /* CHG112963 */
               IC_OBSOLETO     = :v_ic_obsoleto                                                                   /* CHG112963 */
         WHERE DS_REGISTRO_SAP = :t_ztmm_regmin_2-cod_reg1                                                        /* CHG112963 */
      ENDEXEC.

    ENDIF.
  ENDLOOP.

ENDFORM.                    " carga_tabela_REGISTRO
*&---------------------------------------------------------------------*
*&      Form  carga_produto_centro
*&---------------------------------------------------------------------*
FORM carga_produto_centro .
  DATA: w_commit(3) TYPE n,
        v_ic_ativo TYPE char1.

  DATA: BEGIN OF t_marc OCCURS 0,
        matnr TYPE marc-matnr,
        werks TYPE marc-werks,
        lvorm TYPE marc-lvorm,
        mmsta TYPE marc-mmsta,
  END OF t_marc.

  IF NOT t_produto[] IS INITIAL.
    SORT t_produto BY cd_produto.
    SELECT matnr werks lvorm mmsta
      INTO TABLE t_marc
       FROM marc
        FOR ALL ENTRIES IN t_produto
      WHERE matnr = t_produto-cd_produto.
  ENDIF.

  CLEAR w_commit.

  SELECT werks name1 stras ort01 pstlz regio
         INTO TABLE t_centro
         FROM t001w
   WHERE vkorg IN r_vkorg
     AND vtweg IN r_vtweg.

  SORT t_centro BY centro.
  SORT t_marc BY werks.

  LOOP AT t_centro.
    LOOP AT t_marc WHERE werks = t_centro-centro.

      IF t_marc-lvorm IS INITIAL.
        v_ic_ativo = 'S'.
      ELSE.
        v_ic_ativo = 'N'.
      ENDIF.

      EXEC SQL.
        SELECT CD_PRODUTO_SAP                                                                                     /* CHG112963 */
          INTO :t_marc-matnr                                                                                      /* CHG112963 */
          FROM CTF.PRODUTO_CENTRO                                                                                 /* CHG112963 */
         WHERE CD_PRODUTO_SAP      = :t_marc-matnr                                                                /* CHG112963 */
           AND CD_CENTRO_EXPEDIDOR = :t_marc-werks                                                                /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963

      IF sy-subrc <> 0.                                                                             "CHG112963
        EXEC SQL.
          INSERT INTO CTF.PRODUTO_CENTRO (                                                                        /* CHG112963 */
            CD_PRODUTO_SAP,                                                                                       /* CHG112963 */
            CD_CENTRO_EXPEDIDOR,                                                                                  /* CHG112963 */
            IC_ATIVO                                                                                              /* CHG112963 */
          ) VALUES (                                                                                              /* CHG112963 */
            :t_marc-matnr,                                                                                        /* CHG112963 */
            :t_marc-werks,                                                                                        /* CHG112963 */
            :v_ic_ativo                                                                                           /* CHG112963 */
          )                                                                                                       /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ELSE.                                                                                         "CHG112963
        EXEC SQL.
          UPDATE CTF.PRODUTO_CENTRO                                                                               /* CHG112963 */
             SET IC_ATIVO = :v_ic_ativo                                                                           /* CHG112963 */
           WHERE CD_PRODUTO_SAP      = :t_marc-matnr                                                              /* CHG112963 */
             AND CD_CENTRO_EXPEDIDOR = :t_marc-werks                                                              /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ENDIF.                                                                                        "CHG112963

      w_commit = w_commit + 1.
      IF w_commit = 300.
        EXEC SQL.
          COMMIT
        ENDEXEC.
        CLEAR w_commit.
      ENDIF.

    ENDLOOP.
  ENDLOOP.

ENDFORM.                    " carga_produto_centro
*&---------------------------------------------------------------------*
*&      Form  acha_teor
*&---------------------------------------------------------------------*
FORM acha_teor .

  CLEAR v_smbez.                                                                                    "CHG72212
  v_smbez = wa_objectdata-smbez.                                                                    "CHG72212
  TRANSLATE v_smbez TO UPPER CASE.                                                                  "CHG72212

  CASE v_smbez.                                                                                     "CHG72212
    WHEN c_n.                                                                                       "CHG72212
      v_n    = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_p.                                                                                       "CHG72212
      v_p    = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_k.                                                                                       "CHG72212
      v_k    = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_s.                                                                                       "CHG72212
      v_s    = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_ca.                                                                                      "CHG72212
      v_ca   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_mg.                                                                                      "CHG72212
      v_mg   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_zn.                                                                                      "CHG72212
      v_zn   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_b.                                                                                       "CHG72212
      v_b    = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_co.                                                                                      "CHG72212
      v_co   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_cu.                                                                                      "CHG72212
      v_cu   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_fe.                                                                                      "CHG72212
      v_fe   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_mn.                                                                                      "CHG72212
      v_mn   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN c_mo.                                                                                      "CHG72212
      v_mo   = wa_objectdata-ausp1.                                                                 "CHG72212
    WHEN OTHERS.                                                                                    "CHG72212
  ENDCASE.                                                                                          "CHG72212

ENDFORM.                    " acha_teor
*&---------------------------------------------------------------------*
*&      Form  processa_fornecedor
*&---------------------------------------------------------------------*

FORM processa_fornecedor .

  IF p_gfor = 'X'.
    PERFORM processa_grupos_fornecedor.
  ENDIF.

ENDFORM.                    " processa_fornecedor


*&---------------------------------------------------------------------*
*&      Form  'processa_grupos_fornecedor
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM processa_grupos_fornecedor .

* Selecionando Denominação dos grupos de contas
  SELECT ktokk txt30  INTO TABLE t_t077y FROM t077y
         WHERE spras = c_spras.

  IF sy-subrc <> 0.
*   Grupo de contas de fornecedores não encontrado!
    WRITE: / text-m42.
    ULINE.
    EXIT.
  ENDIF.

* Dando Carga na Denominação dos grupos de contas
  DESCRIBE TABLE t_t077y.
  IF sy-tfill NE 0.
    DO sy-tfill TIMES.
      READ TABLE t_t077y INDEX sy-index.

      EXEC SQL.
        SELECT CD_GRUPO_FORNECEDOR                                                                                /* CHG112963 */
          INTO :t_t077y-ktokk                                                                                     /* CHG112963 */
          FROM CTF.GRUPO_FORNECEDOR                                                                               /* CHG112963 */
         WHERE CD_GRUPO_FORNECEDOR = :t_t077y-ktokk                                                               /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963

      IF sy-subrc <> 0.                                                                             "CHG112963
        EXEC SQL.
          INSERT INTO CTF.GRUPO_FORNECEDOR (                                                                      /* CHG112963 */
            CD_GRUPO_FORNECEDOR,                                                                                  /* CHG112963 */
            DS_GRUPO_FORNECEDOR                                                                                   /* CHG112963 */
          ) VALUES (                                                                                              /* CHG112963 */
            :t_t077y-ktokk,                                                                                       /* CHG112963 */
            :t_t077y-txt30                                                                                        /* CHG112963 */
          )                                                                                                       /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ELSE.                                                                                         "CHG112963
        EXEC SQL.
          UPDATE CTF.GRUPO_FORNECEDOR                                                                             /* CHG112963 */
             SET DS_GRUPO_FORNECEDOR = :t_t077y-txt30                                                             /* CHG112963 */
           WHERE CD_GRUPO_FORNECEDOR = :t_t077y-ktokk                                                             /* CHG112963 */
        ENDEXEC.                                                                                    "CHG112963
      ENDIF.                                                                                        "CHG112963
    ENDDO.
  ENDIF.
ENDFORM.                    " 'processa_grupos_fornecedor


*&---------------------------------------------------------------------*
*&      Form  PROCESSA_TIPO_ORDEM_V1
*&---------------------------------------------------------------------*
FORM processa_tipo_ordem_v1 .

* SALES_ORG ------------------------------------------------------------

  SELECT vkorg vtext INTO TABLE t_sales_org                                                         "CHG72212
      FROM tvkot                                                                                    "CHG72212
     WHERE spras = c_spras                                                                          "CHG72212
       AND vkorg IN r_vkorg.                                                                        "CHG72212

  IF sy-subrc <> 0.                                                                                 "CHG72212
*    Dados tipos de Ordens não foram encontrados para                                               "CHG72212
    WRITE: / text-m13, c_spras.                                                                     "CHG72212
    ULINE.                                                                                          "CHG72212
    EXIT.                                                                                           "CHG72212
  ENDIF.                                                                                            "CHG72212

  LOOP AT t_sales_org.                                                                              "CHG72212

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_SALES_ORG                                                                                         /* CHG112963 */
        INTO :t_sales_org-vkorg                                                                                   /* CHG112963 */
        FROM VND.SALES_ORG                                                                                        /* CHG112963 */
       WHERE CD_SALES_ORG = :t_sales_org-vkorg                                                                    /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.SALES_ORG (                                                                               /* CHG112963 */
          CD_SALES_ORG,                                                                                           /* CHG112963 */
          NO_SALES_ORG,                                                                                           /* CHG112963 */
          DH_ULT_INTERFACE,                                                                                       /* CHG112963 */
          IC_ATIVO                                                                                                /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_sales_org-vkorg,                                                                                     /* CHG112963 */
          :t_sales_org-vtext,                                                                                     /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS'),                                                              /* CHG112963 */
          'S'                                                                                                     /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.SALES_ORG                                                                                      /* CHG112963 */
           SET CD_SALES_ORG     = :t_sales_org-vkorg,                                                             /* CHG112963 */
               NO_SALES_ORG     = :t_sales_org-vtext,                                                             /* CHG112963 */
               DH_ULT_INTERFACE = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                       /* CHG112963 */
         WHERE CD_SALES_ORG     = :t_sales_org-vkorg                                                              /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.


* DISTRIBUTION_CHANNEL ---------------------------------------------------

  SELECT vtweg vtext INTO TABLE t_dist_channel                                                      "CHG72212
    FROM tvtwt                                                                                      "CHG72212
   WHERE spras = c_spras.                                                                           "CHG72212

  IF sy-subrc <> 0.                                                                                 "CHG72212
*    Dados tipos de Ordens não foram encontrados para
    WRITE: / text-m13, c_spras.                                                                     "CHG72212
    ULINE.                                                                                          "CHG72212
    EXIT.                                                                                           "CHG72212
  ENDIF.                                                                                            "CHG72212

  LOOP AT t_dist_channel.

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_DISTRIBUTION_CHANNEL                                                                              /* CHG112963 */
        INTO :t_dist_channel-vtweg                                                                                /* CHG112963 */
        FROM VND.DISTRIBUTION_CHANNEL                                                                             /* CHG112963 */
       WHERE CD_DISTRIBUTION_CHANNEL = :t_dist_channel-vtweg                                                      /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.DISTRIBUTION_CHANNEL (                                                                    /* CHG112963 */
          CD_DISTRIBUTION_CHANNEL,                                                                                /* CHG112963 */
          NO_DISTRIBUTION_CHANNEL,                                                                                /* CHG112963 */
          DH_ULT_INTERFACE,                                                                                       /* CHG112963 */
          IC_ATIVO                                                                                                /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_dist_channel-vtweg,                                                                                  /* CHG112963 */
          :t_dist_channel-vtext,                                                                                  /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS'),                                                              /* CHG112963 */
          'S'                                                                                                     /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.DISTRIBUTION_CHANNEL                                                                           /* CHG112963 */
           SET NO_DISTRIBUTION_CHANNEL  = :t_dist_channel-vtext,                                                  /* CHG112963 */
               DH_ULT_INTERFACE         = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                               /* CHG112963 */
         WHERE CD_DISTRIBUTION_CHANNEL  = :t_dist_channel-vtweg                                                   /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

* SALES_DIVISION --------------------------------------------------------

  SELECT spart vtext INTO TABLE t_sales_division                                                    "CHG72212
    FROM tspat                                                                                      "CHG72212
   WHERE spras = c_spras.                                                                           "CHG72212

  IF sy-subrc <> 0.                                                                                 "CHG72212
*    Dados tipos de Ordens não foram encontrados para
    WRITE: / text-m13, c_spras.                                                                     "CHG72212
    ULINE.                                                                                          "CHG72212
    EXIT.                                                                                           "CHG72212
  ENDIF.                                                                                            "CHG72212


  LOOP AT t_sales_division.

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_SALES_DIVISION                                                                                    /* CHG112963 */
        INTO :t_sales_division-spart                                                                              /* CHG112963 */
        FROM VND.SALES_DIVISION                                                                                   /* CHG112963 */
       WHERE CD_SALES_DIVISION = :t_sales_division-spart                                                          /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.SALES_DIVISION (                                                                          /* CHG112963 */
          CD_SALES_DIVISION,                                                                                      /* CHG112963 */
          NO_SALES_DIVISION,                                                                                      /* CHG112963 */
          DH_ULT_INTERFACE,                                                                                       /* CHG112963 */
          IC_ATIVO                                                                                                /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_sales_division-spart,                                                                                /* CHG112963 */
          :t_sales_division-vtext,                                                                                /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS'),                                                              /* CHG112963 */
          'S'                                                                                                     /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.SALES_DIVISION                                                                                 /* CHG112963 */
           SET NO_SALES_DIVISION = :t_sales_division-vtext,                                                       /* CHG112963 */
               DH_ULT_INTERFACE  = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                      /* CHG112963 */
         WHERE CD_SALES_DIVISION = :t_sales_division-spart                                                        /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.


*  STATUS_CONTRATO_SAP ----------------------------------------------------

  SELECT kdkgr vtext INTO TABLE t_status_contrato_sap                                               "CHG72212
    FROM tvkggt                                                                                     "CHG72212
   WHERE spras = c_spras.                                                                           "CHG72212

  IF sy-subrc <> 0.                                                                                 "CHG72212
*    Dados tipos de Ordens não foram encontrados para
    WRITE: / text-m13, c_spras.                                                                     "CHG72212
    ULINE.                                                                                          "CHG72212
    EXIT.                                                                                           "CHG72212
  ENDIF.                                                                                            "CHG72212

  LOOP AT t_status_contrato_sap.

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_STATUS_CONTRATO_SAP                                                                               /* CHG112963 */
        INTO :t_status_contrato_sap-kdkgr                                                                         /* CHG112963 */
        FROM VND.STATUS_CONTRATO_SAP                                                                              /* CHG112963 */
       WHERE CD_STATUS_CONTRATO_SAP = :t_status_contrato_sap-kdkgr                                                /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.STATUS_CONTRATO_SAP (                                                                     /* CHG112963 */
          CD_STATUS_CONTRATO_SAP,                                                                                 /* CHG112963 */
          DS_STATUS_CONTRATO_SAP,                                                                                 /* CHG112963 */
          DH_ULT_INTERFACE,                                                                                       /* CHG112963 */
          IC_ATIVO                                                                                                /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_status_contrato_sap-kdkgr,                                                                           /* CHG112963 */
          :t_status_contrato_sap-vtext,                                                                           /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS'),                                                              /* CHG112963 */
          'S'                                                                                                     /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.STATUS_CONTRATO_SAP                                                                            /* CHG112963 */
           SET DS_STATUS_CONTRATO_SAP = :t_status_contrato_sap-vtext,                                             /* CHG112963 */
               DH_ULT_INTERFACE       = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                 /* CHG112963 */
         WHERE CD_STATUS_CONTRATO_SAP = :t_status_contrato_sap-kdkgr                                              /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.


*  BLOCKING_REASON -------------------------------------------------------

  SELECT lifsp vtext INTO TABLE t_blocking_reason                                                   "CHG72212
      FROM tvlst                                                                                    "CHG72212
     WHERE spras = c_spras.                                                                         "CHG72212

  IF sy-subrc <> 0.                                                                                 "CHG72212
*    Dados tipos de Ordens não foram encontrados para
    WRITE: / text-m13, c_spras.                                                                     "CHG72212
    ULINE.                                                                                          "CHG72212
    EXIT.                                                                                           "CHG72212
  ENDIF.                                                                                            "CHG7221

  LOOP AT t_blocking_reason.

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_BLOCKING_REASON                                                                                   /* CHG112963 */
        INTO :t_blocking_reason-lifsp                                                                             /* CHG112963 */
        FROM VND.BLOCKING_REASON                                                                                  /* CHG112963 */
       WHERE CD_BLOCKING_REASON = :t_blocking_reason-lifsp                                                        /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.BLOCKING_REASON (                                                                         /* CHG112963 */
          CD_BLOCKING_REASON,                                                                                     /* CHG112963 */
          DS_BLOCKING_REASON,                                                                                     /* CHG112963 */
          DH_ULT_INTERFACE                                                                                        /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_blocking_reason-lifsp,                                                                               /* CHG112963 */
          :t_blocking_reason-vtext,                                                                               /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                                               /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.BLOCKING_REASON                                                                                /* CHG112963 */
           SET DS_BLOCKING_REASON = :t_blocking_reason-vtext,                                                     /* CHG112963 */
               DH_ULT_INTERFACE   = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                     /* CHG112963 */
         WHERE CD_BLOCKING_REASON = :t_blocking_reason-lifsp                                                      /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                    " PROCESSA_TIPO_ORDEM_V1
*&---------------------------------------------------------------------*
*&      Form  PROCESSA_DADOS_PRODUTO_V1
*&---------------------------------------------------------------------*
FORM processa_dados_produto_v1 .

  REFRESH t_product_sales_area.
  CLEAR t_product_sales_area.
  SORT t_produto BY matnr.

  IF NOT t_produto[] IS INITIAL.
    SELECT matnr vkorg vtweg                                                                        "CHG72212
        INTO TABLE t_product_sales_area                                                             "CHG72212
          FROM mvke                                                                                 "CHG72212
          FOR ALL ENTRIES IN t_produto                                                              "CHG72212
        WHERE matnr = t_produto-matnr(18)                                                           "CHG72212
          AND vkorg IN r_vkorg                                                                      "CHG72212
          AND vtweg IN r_vtweg.                                                                     "CHG72212
  ENDIF.

  LOOP AT t_product_sales_area.

    CLEAR w_data.
    w_data(2)   = sy-datum+6(2).                                                                    "CHG72212
    w_data+2(1) = '/'.                                                                              "CHG72212
    w_data+3(2) = sy-datum+4(2).                                                                    "CHG72212
    w_data+5(1) = '/'.                                                                              "CHG72212
    w_data+6(4) = sy-datum(4).                                                                      "CHG72212
    WRITE sy-uzeit TO w_data+11(10).                                                                "CHG72212

    EXEC SQL.
      SELECT CD_PRODUTO_SAP                                                                                       /* CHG112963 */
        INTO :t_product_sales_area-matnr                                                                          /* CHG112963 */
        FROM CTF.PRODUCT_SALES_AREA                                                                               /* CHG112963 */
       WHERE CD_PRODUTO_SAP           = :t_product_sales_area-matnr                                               /* CHG112963 */
         AND CD_SALES_ORG             = :t_product_sales_area-vkorg                                               /* CHG112963 */
         AND CD_DISTRIBUTION_CHANNEL  = :t_product_sales_area-vtweg                                               /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.PRODUCT_SALES_AREA (                                                                      /* CHG112963 */
          CD_PRODUTO_SAP,                                                                                         /* CHG112963 */
          CD_SALES_ORG,                                                                                           /* CHG112963 */
          CD_DISTRIBUTION_CHANNEL,                                                                                /* CHG112963 */
          DH_ULT_INTERFACE                                                                                        /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_product_sales_area-matnr,                                                                            /* CHG112963 */
          :t_product_sales_area-vkorg,                                                                            /* CHG112963 */
          :t_product_sales_area-vtweg,                                                                            /* CHG112963 */
          TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                                                               /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE CTF.PRODUCT_SALES_AREA                                                                             /* CHG112963 */
           SET CD_SALES_ORG             = :t_product_sales_area-vkorg,                                            /* CHG112963 */
               CD_DISTRIBUTION_CHANNEL  = :t_product_sales_area-vtweg,                                            /* CHG112963 */
               DH_ULT_INTERFACE         = TO_DATE(:w_data, 'DD/MM/YYYY HH24:MI:SS')                               /* CHG112963 */
         WHERE CD_PRODUTO_SAP           = :t_product_sales_area-matnr                                             /* CHG112963 */
           AND CD_SALES_ORG             = :t_product_sales_area-vkorg                                             /* CHG112963 */
           AND CD_DISTRIBUTION_CHANNEL  = :t_product_sales_area-vtweg                                             /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.                                                                                          "CHG72212

ENDFORM.                    " PROCESSA_DADOS_PRODUTO_V1



*&---------------------------------------------------------------------*
*&      Form  carga_formas_pagamento
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM carga_formas_pagamento.

  SELECT zterm vtext INTO TABLE t_tvzbt
    FROM tvzbt
   WHERE spras = c_spras.

  IF sy-subrc <> 0.
    WRITE: / text-m43, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  LOOP AT t_tvzbt.
    IF t_tvzbt-vtext IS INITIAL.
      t_tvzbt-vtext = c_texto.
    ENDIF.

    EXEC SQL.
      SELECT CD_FORMA_PAGAMENTO                                                                                   /* CHG112963 */
        INTO :t_tvzbt-zterm                                                                                       /* CHG112963 */
        FROM VND.FORMA_PAGAMENTO                                                                                  /* CHG112963 */
       WHERE CD_FORMA_PAGAMENTO = :t_tvzbt-zterm                                                                  /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.FORMA_PAGAMENTO (                                                                         /* CHG112963 */
            CD_FORMA_PAGAMENTO,                                                                                   /* CHG112963 */
            DS_FORMA_PAGAMENTO,                                                                                   /* CHG112963 */
            IC_ATIVO                                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
            :t_tvzbt-zterm,                                                                                       /* CHG112963 */
            :t_tvzbt-vtext,                                                                                       /* CHG112963 */
            'S'                                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.FORMA_PAGAMENTO                                                                                /* CHG112963 */
           SET DS_FORMA_PAGAMENTO = :t_tvzbt-vtext                                                                /* CHG112963 */
         WHERE CD_FORMA_PAGAMENTO = :t_tvzbt-zterm                                                                /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                    "carga_formas_pagamento


*&---------------------------------------------------------------------*
*&      Form  processa_municipio
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM processa_municipio.
  SELECT taxjurcode text INTO TABLE t_j_1btxjurt
    FROM j_1btxjurt
   WHERE spras = c_spras.

  IF sy-subrc <> 0.
    WRITE: / text-m44, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  LOOP AT t_j_1btxjurt.
    IF t_j_1btxjurt-nome IS INITIAL.
      t_j_1btxjurt-nome = c_texto.
    ENDIF.

    SPLIT t_j_1btxjurt-taxjurcode AT space INTO sg_estado cd_ibge.
    MOVE cd_ibge+0(6) TO cd_municipio.

*   Get CD_ESTADO from CTF.ESTADO
    EXEC SQL.
      SELECT CD_ESTADO                                                                                            /* CHG112963 */
        INTO :cd_estado                                                                                           /* CHG112963 */
        FROM CTF.ESTADO
       WHERE SG_ESTADO = :sg_estado
    ENDEXEC.

    IF sy-subrc <> 0.
      CONTINUE.
    ENDIF.

    EXEC SQL.
      SELECT CD_MUNICIPIO                                                                                         /* CHG112963 */
        INTO :cd_municipio                                                                                        /* CHG112963 */
        FROM CTF.MUNICIPIO                                                                                        /* CHG112963 */
       WHERE CD_MUNICIPIO = :cd_municipio                                                                         /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.MUNICIPIO (                                                                               /* CHG112963 */
            CD_MUNICIPIO,                                                                                         /* CHG112963 */
            CD_ESTADO,                                                                                            /* CHG112963 */
            NO_MUNICIPIO,                                                                                         /* CHG112963 */
            CD_IBGE                                                                                               /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
            :cd_municipio,                                                                                        /* CHG112963 */
            :cd_estado,                                                                                           /* CHG112963 */
            :t_j_1btxjurt-nome,                                                                                   /* CHG112963 */
            :cd_ibge                                                                                              /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE CTF.MUNICIPIO                                                                                      /* CHG112963 */
           SET CD_ESTADO     = :cd_estado,                                                                        /* CHG112963 */
               NO_MUNICIPIO  = :t_j_1btxjurt-nome,                                                                /* CHG112963 */
               CD_IBGE       = :cd_ibge                                                                           /* CHG112963 */
         WHERE CD_MUNICIPIO  = :cd_municipio                                                                      /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                    "processa_municipio



*&---------------------------------------------------------------------*
*&      Form  carga_grupo_material
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM carga_grupo_material.
  SELECT magrv bezei INTO TABLE t_tvegrt
    FROM tvegrt
   WHERE spras = c_spras.

  IF sy-subrc <> 0.
    WRITE: / text-m46, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  LOOP AT t_tvegrt.
    EXEC SQL.
      SELECT CD_GRUPO_MATERIAL                                                                                    /* CHG112963 */
        INTO :t_tvegrt-magrv                                                                                      /* CHG112963 */
        FROM CTF.GRUPO_MATERIAL                                                                                   /* CHG112963 */
       WHERE CD_GRUPO_MATERIAL = :t_tvegrt-magrv                                                                  /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO CTF.GRUPO_MATERIAL (                                                                          /* CHG112963 */
            CD_GRUPO_MATERIAL,                                                                                    /* CHG112963 */
            NO_GRUPO_MATERIAL,                                                                                    /* CHG112963 */
            IC_ATIVO                                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
            :t_tvegrt-magrv,                                                                                      /* CHG112963 */
            :t_tvegrt-bezei,                                                                                      /* CHG112963 */
            'S'                                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE CTF.GRUPO_MATERIAL                                                                                 /* CHG112963 */
           SET NO_GRUPO_MATERIAL = :t_tvegrt-bezei                                                                /* CHG112963 */
         WHERE CD_GRUPO_MATERIAL = :t_tvegrt-magrv                                                                /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.


  SELECT magrv traty INTO TABLE t_tervh
    FROM tervh.

  IF sy-subrc <> 0.
    WRITE: / text-m46.
    ULINE.
    EXIT.
  ENDIF.

  DATA: cd_sacaria(3),
        len TYPE i VALUE 0.

  LOOP AT t_tervh.
    CLEAR cd_sacaria.
    CLEAR len.

    len = strlen( t_tervh-traty ).

    IF strlen( t_tervh-traty ) > 3.
      cd_sacaria = t_tervh-traty+1(3).
    ELSE.
      cd_sacaria = t_tervh-traty.
    ENDIF.

    EXEC SQL.
      SELECT CD_GRUPO_MATERIAL                                                                                    /* CHG112963 */
        INTO :t_tervh-MAGRV                                                                                       /* CHG112963 */
        FROM VND.GRUPO_MATERIAL_SACARIA                                                                           /* CHG112963 */
       WHERE CD_GRUPO_MATERIAL = :t_tervh-MAGRV                                                                   /* CHG112963 */
         AND CD_SACARIA = :cd_sacaria                                                                             /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.GRUPO_MATERIAL_SACARIA (                                                                  /* CHG112963 */
          CD_GRUPO_MATERIAL,                                                                                      /* CHG112963 */
          CD_SACARIA                                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
          :t_tervh-magrv,                                                                                         /* CHG112963 */
          :cd_sacaria                                                                                             /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.

ENDFORM.                    "carga_grupo_material
                                                                                                    "CHG128174
                                                                                                    "CHG128174
                                                                                                    "CHG128174
*&---------------------------------------------------------------------*                            "CHG128174
*&      Form  carga_tipo_pgto                                                                       "CHG128174
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM carga_tipo_pgto.
  SELECT *
    FROM t040a
    INTO TABLE it_tipo_pgto
   WHERE spras = c_spras.

  IF sy-subrc <> 0.
    WRITE: / text-m48, c_spras.
    ULINE.
    EXIT.
  ENDIF.

  LOOP AT it_tipo_pgto INTO wa_tipo_pgto.
    IF wa_tipo_pgto-text1 IS INITIAL.
      wa_tipo_pgto-text1 = c_texto.
    ENDIF.

    EXEC SQL.
      SELECT CD_TIPO_PAGAMENTO                                                                                    /* CHG112963 */
        INTO :wa_tipo_pgto-mschl                                                                                  /* CHG112963 */
        FROM VND.TIPO_PAGAMENTO                                                                                   /* CHG112963 */
       WHERE CD_TIPO_PAGAMENTO = :wa_tipo_pgto-mschl                                                              /* CHG112963 */
    ENDEXEC.                                                                                        "CHG112963

    IF sy-subrc <> 0.                                                                               "CHG112963
      EXEC SQL.
        INSERT INTO VND.TIPO_PAGAMENTO (                                                                          /* CHG112963 */
            CD_TIPO_PAGAMENTO,                                                                                    /* CHG112963 */
            DS_TIPO_PAGAMENTO,                                                                                    /* CHG112963 */
            IC_ATIVO                                                                                              /* CHG112963 */
        ) VALUES (                                                                                                /* CHG112963 */
            :wa_tipo_pgto-mschl,                                                                                  /* CHG112963 */
            :wa_tipo_pgto-text1,                                                                                  /* CHG112963 */
            'S'                                                                                                   /* CHG112963 */
        )                                                                                                         /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ELSE.                                                                                           "CHG112963
      EXEC SQL.
        UPDATE VND.TIPO_PAGAMENTO                                                                                 /* CHG112963 */
           SET DS_TIPO_PAGAMENTO = :wa_tipo_pgto-text1                                                            /* CHG112963 */
         WHERE CD_TIPO_PAGAMENTO = :wa_tipo_pgto-mschl                                                            /* CHG112963 */
      ENDEXEC.                                                                                      "CHG112963
    ENDIF.                                                                                          "CHG112963
  ENDLOOP.
ENDFORM.                    "carga_tipo_pgto



*&---------------------------------------------------------------------*
*&      Form  CHANGE_CONST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM change_const .                                                                                 "CHG72212

  CALL FUNCTION 'ZUTI3001_READ_PROG_VALUES'                                                         "CHG72212
    EXPORTING                                                                                       "CHG72212
      i_program          = sy-repid                                                                 "CHG72212
    TABLES                                                                                          "CHG72212
      t_ztut_valu        = t_const[].                                                               "CHG72212

ENDFORM.                    " CHANGE_CONST                                                          "CHG72212


*&---------------------------------------------------------------------*
*&      Form  fill_range_begru
*&---------------------------------------------------------------------*
FORM fill_range_begru USING: w_begru.
  r_begru-low    = w_begru.
  r_begru-option = 'EQ'.
  r_begru-sign   = 'I'.
  APPEND r_begru.
  CLEAR  r_begru.
ENDFORM.                    "fill_range_begru

*&---------------------------------------------------------------------*
*&      Form  fill_range_vkorg
*&---------------------------------------------------------------------*
FORM fill_range_vkorg USING: w_vkorg.
  r_vkorg-low    = w_vkorg.
  r_vkorg-option = 'EQ'.
  r_vkorg-sign   = 'I'.
  APPEND r_vkorg.
  CLEAR  r_vkorg.
ENDFORM.                    "fill_range_vkorg

*&---------------------------------------------------------------------*
*&      Form  fill_range_vtweg
*&---------------------------------------------------------------------*
FORM fill_range_vtweg USING: w_vtweg.
  r_vtweg-low    = w_vtweg.
  r_vtweg-option = 'EQ'.
  r_vtweg-sign   = 'I'.
  APPEND r_vtweg.
  CLEAR  r_vtweg.
ENDFORM.                    "fill_range_vtweg
*&---------------------------------------------------------------------*                             "CHG155287
*&      Form  PROCESS_ZTSD_COST                                                                      "CHG155287
*&---------------------------------------------------------------------*                             "CHG155287
*       text                                                                                         "CHG155287
*----------------------------------------------------------------------*                             "CHG155287
*  -->  p1        text                                                                               "CHG155287
*  <--  p2        text                                                                               "CHG155287
*----------------------------------------------------------------------*                             "CHG155287
FORM process_ztsd_cost .                                                                             "CHG155287
                                                                                                     "CHG155287
TYPES : BEGIN OF ty_ztsd_cost,                                                                       "CHG155287
          vkbur  TYPE  ztsd_cost-vkbur,                                                              "CHG155287
          klvar  TYPE  ztsd_cost-klvar,                                                              "CHG155287
          tvers1 TYPE ztsd_cost-tvers1,                                                              "CHG155287
        END OF ty_ztsd_cost.                                                                         "CHG155287
                                                                                                     "CHG155287
DATA :   lv_zbr3_tvers1      TYPE ztsd_cost-tvers1,                                                  "CHG155287
         lv_zbr5_tvers1      TYPE ztsd_cost-tvers1,                                                  "CHG155287
         lv_vkbur            TYPE ztsd_cost-vkbur,                                                   "CHG155287
         itab_ztsd_cost      TYPE STANDARD TABLE OF ty_ztsd_cost,                                    "CHG155287
         wa_ztsd_cost        TYPE ty_ztsd_cost,                                                      "CHG155287
         itab_ztsd_cost_zbr5 TYPE STANDARD TABLE OF ty_ztsd_cost,                                    "CHG155287
         wa_ztsd_cost_zbr5   TYPE ty_ztsd_cost,                                                      "CHG155287
         itab_ztsd_cost_zbr3 TYPE STANDARD TABLE OF ty_ztsd_cost,                                    "CHG155287
         wa_ztsd_cost_zbr3   TYPE ty_ztsd_cost,                                                      "CHG155287
         lv_cd_usuario       TYPE n LENGTH 8,                                                        "CHG155287
         lv_cd_usuario_1     TYPE n LENGTH 8.                                                        "CHG155287
 SELECT vkbur                                                                                        "CHG155287
        klvar                                                                                        "CHG155287
        tvers1                                                                                       "CHG155287
   FROM ztsd_cost                                                                                    "CHG155287
   CLIENT SPECIFIED                                                                                  "CHG155287
   INTO TABLE itab_ztsd_cost                                                                         "CHG155287
   WHERE mandt = sy-mandt                                                                            "CHG155287
     AND klvar IN ('ZBR3' ,'ZBR5').                                                                  "CHG155287
    IF sy-subrc = 0.                                                                                 "CHG155287
      SORT itab_ztsd_cost BY vkbur.                                                                  "CHG155287
      itab_ztsd_cost_zbr3 = itab_ztsd_cost.                                                          "CHG155287
      DELETE itab_ztsd_cost_zbr3 WHERE klvar = 'ZBR5'.                                               "CHG155287
      itab_ztsd_cost_zbr5 = itab_ztsd_cost.                                                          "CHG155287
      DELETE itab_ztsd_cost_zbr5 WHERE klvar = 'ZBR3'.                                               "CHG155287
    ENDIF.                                                                                           "CHG155287
  "Sales offices                                                                                     "CHG155287
  CLEAR wa_ztsd_cost.                                                                                "CHG155287
  LOOP AT itab_ztsd_cost INTO wa_ztsd_cost.                                                          "CHG155287
    CLEAR wa_ztsd_cost_zbr3.                                                                         "CHG155287
    READ TABLE itab_ztsd_cost_zbr3 INTO wa_ztsd_cost_zbr3 WITH KEY vkbur = wa_ztsd_cost-vkbur        "CHG155287
                                                                   klvar = 'ZBR3' .                  "CHG155287
    IF sy-subrc = 0.                                                                                 "CHG155287
      CLEAR lv_zbr3_tvers1.                                                                          "CHG155287
      lv_zbr3_tvers1 = wa_ztsd_cost_zbr3-tvers1+0(1).                                                "CHG155287
    ENDIF.                                                                                           "CHG155287
    CLEAR wa_ztsd_cost_zbr5.                                                                         "CHG155287
    READ TABLE itab_ztsd_cost_zbr5 INTO wa_ztsd_cost_zbr5 WITH KEY vkbur = wa_ztsd_cost-vkbur        "CHG155287
                                                                   klvar = 'ZBR5' .                  "CHG155287
    IF sy-subrc = 0.                                                                                 "CHG155287
      CLEAR lv_zbr5_tvers1.                                                                          "CHG155287
      lv_zbr5_tvers1 = wa_ztsd_cost_zbr5-tvers1+0(1).                                                "CHG155287
    ENDIF.                                                                                           "CHG155287
    CLEAR : lv_cd_usuario.                                                                           "CHG155287
    EXEC SQL.
    SELECT CD_USUARIO                                                                                             /* CHG155287 */
       FROM CTF.USUARIO                                                                                           /* CHG155287 */
      INTO :lv_cd_usuario                                                                                         /* CHG155287 */
     WHERE CD_USUARIO_ORIGINAL = :wa_ztsd_cost-vkbur                                                              /* CHG155287 */
    ENDEXEC.                                                                                         "CHG155287
    IF sy-subrc = 0.
    EXEC SQL.                                                                                                     /* CHG155287 */
      UPDATE CTF.USUARIO                                                                                          /* CHG155287 */
         SET CD_LIST_SEGMENT = :lv_zbr3_tvers1,                                                                   /* CHG155287 */
         CD_LIST_SEGMENT_FUTURE = :lv_zbr5_tvers1                                                                 /* CHG155287 */
      WHERE CD_USUARIO          = :lv_cd_usuario                                                                  /* CHG155287 */
    ENDEXEC.                                                                                         "CHG155287
    EXEC SQL.                                                                                                     /* CHG155287 */
      UPDATE CTF.USUARIO                                                                                          /* CHG155287 */
         SET CD_LIST_SEGMENT = :lv_zbr3_tvers1,                                                                   /* CHG155287 */
         CD_LIST_SEGMENT_FUTURE = :lv_zbr5_tvers1                                                                 /* CHG155287 */
      WHERE CD_USUARIO_SUPERIOR = :lv_cd_usuario                                                                  /* CHG155287 */
    ENDEXEC.                                                                                         "CHG155287
   ENDIF.                                                                                            "CHG155287
 ENDLOOP.                                                                                            "CHG155287
ENDFORM.                    " PROCESS_ZTSD_COST                                                      "CHG155287