CREATE TABLE VND.ELO_CARTEIRA_HIST
(
ID NUMBER(9) NOT NULL,
CD_ELO_CARTEIRA NUMBER(9) NOT NULL,
CD_ELO_AGENDAMENTO NUMBER(9) NOT NULL, 
CD_ELO_AGENDAMENTO_ITEM NUMBER(9), 
CD_TIPO_AGENDAMENTO  NUMBER(9),
NU_ORDEM_VENDA CHAR(10 BYTE),
DH_ULT_INTERFACE_OV DATE,
NU_CONTRATO_SAP CHAR(10 BYTE),
DH_ULT_INTERFACE_CONTRATO DATE,
CD_STATUS_CEL_FINAL NUMBER(9),
CD_ELO_STATUS_AGENDA NUMBER(9),  
QT_AGENDADA                     NUMBER(15,3),
QT_AGENDADA_CONFIRMADA          NUMBER(15,3),
CD_STATUS_REPLAN                NUMBER(9),
DH_ULT_ALTERACAO DATE DEFAULT (CURRENT_DATE),
DS_VERSAO                       VARCHAR2(255 BYTE)
 )
TABLESPACE WEB_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX VND."UN_ELO_CARTEIRA_HIST_ID" ON VND.ELO_CARTEIRA_HIST
(ID)
LOGGING
TABLESPACE WEB_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );
		   


		   
ALTER TABLE VND.ELO_CARTEIRA_HIST ADD (
  CONSTRAINT "UN_ELO_CARTEIRA_HIST_ID"
  PRIMARY KEY
  (ID)
  USING INDEX VND."UN_ELO_CARTEIRA_HIST_ID"
  ENABLE VALIDATE);	
  
  
CREATE INDEX VND."IX_ELOCARTEIRAHISCARTEIRA" ON VND.ELO_CARTEIRA_HIST
(CD_ELO_CARTEIRA)
LOGGING
TABLESPACE WEB_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );  

		   
CREATE INDEX VND."IX_ELOCARTEIRAHISCAITEMAG" ON VND.ELO_CARTEIRA_HIST
(CD_ELO_AGENDAMENTO, CD_ELO_AGENDAMENTO_ITEM, CD_ELO_CARTEIRA)
LOGGING
TABLESPACE WEB_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );  
  
  




		   
  
GRANT DELETE, INSERT, SELECT, UPDATE ON VND.ELO_CARTEIRA_HIST TO CTF;

GRANT DELETE, INSERT, SELECT, UPDATE ON VND.ELO_CARTEIRA_HIST TO ECC_USER;

GRANT DELETE, INSERT, SELECT, UPDATE ON VND.ELO_CARTEIRA_HIST TO VND_SEC;  

CREATE SEQUENCE VND.SEQ_ELO_CARTEIRA_HIST
  START WITH 1
  MAXVALUE 999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;


CREATE OR REPLACE TRIGGER VND.TI_CARTEIRA_HIST 
BEFORE INSERT ON VND.ELO_CARTEIRA_HIST 
REFERENCING NEW AS new FOR EACH ROW
DECLARE



BEGIN

    IF :new.ID IS NULL   THEN 
        :new.ID:= VND.SEQ_ELO_CARTEIRA_HIST.NEXTVAL;
    END IF;

END;
/

INSERT INTO ELO_CARTEIRA_HIST
(
CD_ELO_CARTEIRA ,
CD_ELO_AGENDAMENTO ,
CD_ELO_AGENDAMENTO_ITEM, 
CD_TIPO_AGENDAMENTO  ,
NU_ORDEM_VENDA ,
DH_ULT_INTERFACE_OV,
NU_CONTRATO_SAP,
DH_ULT_INTERFACE_CONTRATO ,
CD_STATUS_CEL_FINAL,
CD_ELO_STATUS_AGENDA,
QT_AGENDADA  ,
QT_AGENDADA_CONFIRMADA ,
CD_STATUS_REPLAN ,
DH_ULT_ALTERACAO,
DS_VERSAO  
)
SELECT 
CAT.CD_ELO_CARTEIRA ,
CAT.CD_ELO_AGENDAMENTO ,
CAT.CD_ELO_AGENDAMENTO_ITEM, 
CAT.CD_TIPO_AGENDAMENTO  ,
CAT.NU_ORDEM_VENDA ,
NULL DH_ULT_INTERFACE_OV,
CAT.NU_CONTRATO_SAP,
NULL DH_ULT_INTERFACE_CONTRATO ,
CAT.CD_STATUS_CEL_FINAL,
AGE.CD_ELO_STATUS CD_ELO_STATUS_AGENDA,
CAT.QT_AGENDADA  ,
CAT.QT_AGENDADA_CONFIRMADA ,
CAT.CD_STATUS_REPLAN ,
CURRENT_DATE DH_ULT_ALTERACAO,
' ' DS_VERSAO
FROM VND.ELO_CARTEIRA CAT 
INNER JOIN VND.ELO_AGENDAMENTO AGE
ON CAT.CD_ELO_AGENDAMENTO = AGE.CD_ELO_AGENDAMENTO 
WHERE 
CAT.IC_ATIVO = 'S' 
AND AGE.IC_ATIVO = 'S'
AND (CAT.QT_AGENDADA >=0 OR CAT.QT_AGENDADA_CONFIRMADA >0 OR CAT.CD_STATUS_CEL_FINAL =59 OR ( CAT.CD_TIPO_AGENDAMENTO = 25 AND CAT.CD_STATUS_REPLAN = 32));
;


SELECT COUNT(1) 
FROM VND.ELO_CARTEIRA CAT 
INNER JOIN VND.ELO_AGENDAMENTO AGE
ON CAT.CD_ELO_AGENDAMENTO = AGE.CD_ELO_AGENDAMENTO 
WHERE 
CAT.IC_ATIVO = 'S' 
AND AGE.IC_ATIVO = 'S'
AND (CAT.QT_AGENDADA >=0 OR CAT.QT_AGENDADA_CONFIRMADA >0 OR CAT.CD_STATUS_CEL_FINAL =59 OR ( CAT.CD_TIPO_AGENDAMENTO = 25 AND CAT.CD_STATUS_REPLAN = 32));

SELECT * FROM VND.ELO_CARTEIRA_HIST CAT
WHERE 
CD_ELO_CARTEIRA = 32273;


SELECT * FROM VND.ELO_CARTEIRA CAT
WHERE 
--CD_ELO_CARTEIRA = 32273;
(CAT.QT_AGENDADA >=0 OR CAT.QT_AGENDADA_CONFIRMADA >0 OR CAT.CD_STATUS_CEL_FINAL =59 OR ( CAT.CD_TIPO_AGENDAMENTO = 25 AND CAT.CD_STATUS_REPLAN = 32));  


UPDATE VND.ELO_CARTEIRA 
SET qt_agendada_confirmada = 63, qt_agendada = 63
WHERE CD_ELO_CARTEIRA = 32273;

--select * from ctf.usuario;

CREATE OR REPLACE TRIGGER VND.TU_CARTEIRA_HIST_LOG
AFTER INSERT OR UPDATE
OF CD_ELO_CARTEIRA
  ,CD_ELO_AGENDAMENTO_ITEM
  ,NU_CONTRATO_SAP
  ,NU_ORDEM_VENDA
  ,QT_PROGRAMADA
  ,QT_AGENDADA
  ,QT_AGENDADA_FABRICA
  ,QT_AGENDADA_CONFIRMADA
  ,CD_TIPO_AGENDAMENTO
  ,IC_ATIVO
  ,QT_AGENDADA_ANTERIOR
  ,CD_ELO_AGENDAMENTO
  ,CD_STATUS_REPLAN
  ,CD_STATUS_CEL_FINAL
  ,QT_AGENDADA_CELULA
ON VND.ELO_CARTEIRA
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE

V_CD_ELO_CARTEIRA VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE;
V_CD_ELO_AGENDAMENTO VND.ELO_CARTEIRA.CD_ELO_AGENDAMENTO%TYPE; 
V_CD_ELO_AGENDAMENTO_ITEM  VND.ELO_CARTEIRA.CD_ELO_CARTEIRA%TYPE;
V_CD_TIPO_AGENDAMENTO   VND.ELO_CARTEIRA.CD_TIPO_AGENDAMENTO%TYPE;
V_NU_ORDEM_VENDA  VND.ELO_CARTEIRA.NU_ORDEM_VENDA%TYPE;
V_DH_ULT_INTERFACE_OV VND.ELO_CARTEIRA_HIST.DH_ULT_INTERFACE_OV%TYPE;
V_NU_CONTRATO_SAP VND.ELO_CARTEIRA.NU_CONTRATO_SAP%TYPE;
V_DH_ULT_INTERFACE_CONTRATO  VND.ELO_CARTEIRA_HIST.DH_ULT_INTERFACE_CONTRATO%TYPE; 
V_CD_STATUS_CEL_FINAL  VND.ELO_CARTEIRA.CD_STATUS_CEL_FINAL%TYPE;
V_CD_ELO_STATUS_AGENDA  VND.ELO_CARTEIRA_HIST.CD_ELO_STATUS_AGENDA%TYPE;
V_QT_AGENDADA    VND.ELO_CARTEIRA.QT_AGENDADA%TYPE;
V_QT_AGENDADA_CONFIRMADA  VND.ELO_CARTEIRA.QT_AGENDADA_CONFIRMADA%TYPE;
V_CD_STATUS_REPLAN  VND.ELO_CARTEIRA.CD_STATUS_REPLAN%TYPE;
V_DH_ULT_ALTERACAO  VND.ELO_CARTEIRA_HIST.DH_ULT_ALTERACAO%TYPE;
V_DS_VERSAO  VND.ELO_CARTEIRA_HIST.DS_VERSAO%TYPE;
V_IC_ATIVO    VND.ELO_CARTEIRA.IC_ATIVO%TYPE;



BEGIN


   BEGIN
    V_CD_ELO_CARTEIRA:= :new.CD_ELO_CARTEIRA; 
    V_CD_ELO_AGENDAMENTO:= :new.CD_ELO_AGENDAMENTO;  
    V_CD_ELO_AGENDAMENTO_ITEM:= :new.CD_ELO_AGENDAMENTO_ITEM;
    V_CD_TIPO_AGENDAMENTO:=   :new.CD_TIPO_AGENDAMENTO;
    V_NU_ORDEM_VENDA  := :new.NU_ORDEM_VENDA;
    V_DH_ULT_INTERFACE_OV:= NULL;
    V_NU_CONTRATO_SAP := :new.NU_CONTRATO_SAP;
    V_DH_ULT_INTERFACE_CONTRATO:=  NULL; 
    V_CD_STATUS_CEL_FINAL  := :new.CD_STATUS_CEL_FINAL;
    --V_CD_ELO_STATUS_AGENDA := :new.CD_ELO_STATUS_AGENDA;
    V_QT_AGENDADA    := :new.QT_AGENDADA ;
    V_QT_AGENDADA_CONFIRMADA:= :new.QT_AGENDADA_CONFIRMADA;  
    V_CD_STATUS_REPLAN  := :new.CD_STATUS_REPLAN;
    V_DH_ULT_ALTERACAO  := CURRENT_DATE;
    V_DS_VERSAO := NULL;
    V_IC_ATIVO  := :new.IC_ATIVO;
    
   END;
      


IF V_IC_ATIVO = 'S' AND (V_QT_AGENDADA >=0 
    OR V_QT_AGENDADA_CONFIRMADA >0 
    OR V_CD_STATUS_CEL_FINAL = 59 
    OR ( V_CD_TIPO_AGENDAMENTO = 25 AND V_CD_STATUS_REPLAN = 32)) THEN 

    BEGIN
    INSERT INTO VND.ELO_CARTEIRA_HIST
    (
    CD_ELO_CARTEIRA ,
    CD_ELO_AGENDAMENTO ,
    CD_ELO_AGENDAMENTO_ITEM, 
    CD_TIPO_AGENDAMENTO  ,
    NU_ORDEM_VENDA ,
    DH_ULT_INTERFACE_OV,
    NU_CONTRATO_SAP,
    DH_ULT_INTERFACE_CONTRATO ,
    CD_STATUS_CEL_FINAL,
    CD_ELO_STATUS_AGENDA,
    QT_AGENDADA  ,
    QT_AGENDADA_CONFIRMADA ,
    CD_STATUS_REPLAN ,
    DH_ULT_ALTERACAO,
    DS_VERSAO  
    )
    SELECT 
    V_CD_ELO_CARTEIRA ,
    V_CD_ELO_AGENDAMENTO ,
    V_CD_ELO_AGENDAMENTO_ITEM, 
    V_CD_TIPO_AGENDAMENTO  ,
    V_NU_ORDEM_VENDA ,
    V_DH_ULT_INTERFACE_OV,
    V_NU_CONTRATO_SAP,
    V_DH_ULT_INTERFACE_CONTRATO ,
    V_CD_STATUS_CEL_FINAL,
    AGE.CD_ELO_STATUS CD_ELO_STATUS_AGENDA,
    V_QT_AGENDADA  ,
    V_QT_AGENDADA_CONFIRMADA ,
    V_CD_STATUS_REPLAN ,
    V_DH_ULT_ALTERACAO,
    V_DS_VERSAO
    FROM VND.ELO_AGENDAMENTO AGE
    WHERE
    AGE.CD_ELO_AGENDAMENTO = V_CD_ELO_AGENDAMENTO   
    AND AGE.IC_ATIVO = 'S';

    END;
 
END IF;



END;
/